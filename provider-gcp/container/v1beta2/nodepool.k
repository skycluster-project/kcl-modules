"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NodePool:
    r"""
    NodePool is the Schema for the NodePools API. Manages a GKE NodePool resource.

    Attributes
    ----------
    apiVersion : str, default is "container.gcp.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NodePool", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ContainerGcpUpboundIoV1beta2NodePoolSpec, default is Undefined, required
        spec
    status : ContainerGcpUpboundIoV1beta2NodePoolStatus, default is Undefined, optional
        status
    """


    apiVersion: "container.gcp.upbound.io/v1beta2" = "container.gcp.upbound.io/v1beta2"

    kind: "NodePool" = "NodePool"

    metadata?: v1.ObjectMeta

    spec: ContainerGcpUpboundIoV1beta2NodePoolSpec

    status?: ContainerGcpUpboundIoV1beta2NodePoolStatus


schema ContainerGcpUpboundIoV1beta2NodePoolSpec:
    r"""
    NodePoolSpec defines the desired state of NodePool

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ContainerGcpUpboundIoV1beta2NodePoolSpecForProvider, default is Undefined, required
        for provider
    initProvider : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ContainerGcpUpboundIoV1beta2NodePoolSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ContainerGcpUpboundIoV1beta2NodePoolSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ContainerGcpUpboundIoV1beta2NodePoolSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ContainerGcpUpboundIoV1beta2NodePoolSpecForProvider

    initProvider?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ContainerGcpUpboundIoV1beta2NodePoolSpecProviderConfigRef

    publishConnectionDetailsTo?: ContainerGcpUpboundIoV1beta2NodePoolSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ContainerGcpUpboundIoV1beta2NodePoolSpecWriteConnectionSecretToRef


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProvider:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider

    Attributes
    ----------
    autoscaling : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderAutoscaling, default is Undefined, optional
        autoscaling
    cluster : str, default is Undefined, optional
        The cluster to create the node pool for. Cluster must be present in location provided for clusters. May be specified in the format projects/{{project}}/locations/{{location}}/clusters/{{cluster}} or as just the name of the cluster.
    clusterRef : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderClusterRef, default is Undefined, optional
        cluster ref
    clusterSelector : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderClusterSelector, default is Undefined, optional
        cluster selector
    initialNodeCount : float, default is Undefined, optional
        The initial number of nodes for the pool. In
        regional or multi-zonal clusters, this is the number of nodes per zone. Changing
        this will force recreation of the resource.  If you don't
        need this value, don't set it.  If you do need it, you can use a lifecycle block to
        ignore subsequent changes to this field.
    location : str, default is Undefined, optional
        The location (region or zone) of the cluster.
    management : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderManagement, default is Undefined, optional
        management
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods per node in this node pool.
        Note that this does not work on node pools which are "route-based" - that is, node
        pools belonging to clusters that do not have IP Aliasing enabled.
        See the official documentation
        for more information.
    networkConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfig, default is Undefined, optional
        network config
    nodeConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfig, default is Undefined, optional
        node config
    nodeCount : float, default is Undefined, optional
        The number of nodes per instance group. This field can be used to
        update the number of nodes per instance group but should not be used alongside autoscaling.
    nodeLocations : [str], default is Undefined, optional
        The list of zones in which the node pool's nodes should be located. Nodes must
        be in the region of their regional cluster or in the same region as their
        cluster's zone for zonal clusters. If unspecified, the cluster-level
        node_locations will be used.
    placementPolicy : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderPlacementPolicy, default is Undefined, optional
        placement policy
    project : str, default is Undefined, optional
        The ID of the project in which to create the node pool. If blank,
        the provider-configured project will be used.
    queuedProvisioning : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderQueuedProvisioning, default is Undefined, optional
        queued provisioning
    upgradeSettings : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderUpgradeSettings, default is Undefined, optional
        upgrade settings
    version : str, default is Undefined, optional
        The Kubernetes version for the nodes in this pool. Note that if this field
        and auto_upgrade are both specified, they will fight each other for what the node version should
        be, so setting both is highly discouraged.
    """


    autoscaling?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderAutoscaling

    cluster?: str

    clusterRef?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderClusterRef

    clusterSelector?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderClusterSelector

    initialNodeCount?: float

    location?: str

    management?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderManagement

    maxPodsPerNode?: float

    networkConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfig

    nodeConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfig

    nodeCount?: float

    nodeLocations?: [str]

    placementPolicy?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderPlacementPolicy

    project?: str

    queuedProvisioning?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderQueuedProvisioning

    upgradeSettings?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderUpgradeSettings

    version?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderAutoscaling:
    r"""
    Configuration required by cluster autoscaler to adjust
    the size of the node pool to the current cluster usage. Structure is documented below.

    Attributes
    ----------
    locationPolicy : str, default is Undefined, optional
        Location policy specifies the algorithm used when
        scaling-up the node pool. Location policy is supported only in 1.24.1+ clusters.
    maxNodeCount : float, default is Undefined, optional
        Maximum number of nodes per zone in the NodePool.
        Must be >= min_node_count. Cannot be used with total limits.
    minNodeCount : float, default is Undefined, optional
        Minimum number of nodes per zone in the NodePool.
        Must be >=0 and <= max_node_count. Cannot be used with total limits.
    totalMaxNodeCount : float, default is Undefined, optional
        Total maximum number of nodes in the NodePool.
        Must be >= total_min_node_count. Cannot be used with per zone limits.
        Total size limits are supported only in 1.24.1+ clusters.
    totalMinNodeCount : float, default is Undefined, optional
        Total minimum number of nodes in the NodePool.
        Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
        Total size limits are supported only in 1.24.1+ clusters.
    """


    locationPolicy?: str

    maxNodeCount?: float

    minNodeCount?: float

    totalMaxNodeCount?: float

    totalMinNodeCount?: float


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderClusterRef:
    r"""
    Reference to a Cluster in container to populate cluster.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderClusterRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderClusterRefPolicy


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderClusterRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderClusterSelector:
    r"""
    Selector for a Cluster in container to populate cluster.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderClusterSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderClusterSelectorPolicy


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderClusterSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderManagement:
    r"""
    Node management configuration, wherein auto-repair and
    auto-upgrade is configured. Structure is documented below.

    Attributes
    ----------
    autoRepair : bool, default is Undefined, optional
        Whether the nodes will be automatically repaired. Enabled by default.
    autoUpgrade : bool, default is Undefined, optional
        Whether the nodes will be automatically upgraded. Enabled by default.
    """


    autoRepair?: bool

    autoUpgrade?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfig:
    r"""
    The network configuration of the pool. Such as
    configuration for Adding Pod IP address ranges) to the node pool. Or enabling private nodes. Structure is
    documented below

    Attributes
    ----------
    additionalNodeNetworkConfigs : [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfigAdditionalNodeNetworkConfigsItems0], default is Undefined, optional
        We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface.
        Structure is documented below
    additionalPodNetworkConfigs : [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfigAdditionalPodNetworkConfigsItems0], default is Undefined, optional
        We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node.
        Structure is documented below
    createPodRange : bool, default is Undefined, optional
        Whether to create a new range for pod IPs in this node pool. Defaults are provided for pod_range and pod_ipv4_cidr_block if they are not specified.
    enablePrivateNodes : bool, default is Undefined, optional
        Whether nodes have internal IP addresses only.
    networkPerformanceConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfigNetworkPerformanceConfig, default is Undefined, optional
        network performance config
    podCidrOverprovisionConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfigPodCidrOverprovisionConfig, default is Undefined, optional
        pod cidr overprovision config
    podIpv4CidrBlock : str, default is Undefined, optional
        The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
    podRange : str, default is Undefined, optional
        The ID of the secondary range for pod IPs. If create_pod_range is true, this ID is used for the new range. If create_pod_range is false, uses an existing secondary range with this ID.
    """


    additionalNodeNetworkConfigs?: [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfigAdditionalNodeNetworkConfigsItems0]

    additionalPodNetworkConfigs?: [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfigAdditionalPodNetworkConfigsItems0]

    createPodRange?: bool

    enablePrivateNodes?: bool

    networkPerformanceConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfigNetworkPerformanceConfig

    podCidrOverprovisionConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfigPodCidrOverprovisionConfig

    podIpv4CidrBlock?: str

    podRange?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfigAdditionalNodeNetworkConfigsItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider network config additional node network configs items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        Name of the VPC where the additional interface belongs.
    subnetwork : str, default is Undefined, optional
        Name of the subnetwork where the additional pod network belongs.
    """


    network?: str

    subnetwork?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfigAdditionalPodNetworkConfigsItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider network config additional pod network configs items0

    Attributes
    ----------
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods per node in this node pool.
        Note that this does not work on node pools which are "route-based" - that is, node
        pools belonging to clusters that do not have IP Aliasing enabled.
        See the official documentation
        for more information.
    secondaryPodRange : str, default is Undefined, optional
        The name of the secondary range on the subnet which provides IP address for this pod range.
    subnetwork : str, default is Undefined, optional
        Name of the subnetwork where the additional pod network belongs.
    """


    maxPodsPerNode?: float

    secondaryPodRange?: str

    subnetwork?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfigNetworkPerformanceConfig:
    r"""
    Network bandwidth tier configuration. Structure is documented below.

    Attributes
    ----------
    totalEgressBandwidthTier : str, default is Undefined, optional
        Specifies the total network bandwidth tier for the NodePool.
    """


    totalEgressBandwidthTier?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNetworkConfigPodCidrOverprovisionConfig:
    r"""
    Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited. Structure is documented below.

    Attributes
    ----------
    disabled : bool, default is Undefined, optional
        Whether pod cidr overprovision is disabled.
    """


    disabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfig:
    r"""
    Parameters used in creating the node pool. See
    google_container_cluster for schema.

    Attributes
    ----------
    advancedMachineFeatures : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigAdvancedMachineFeatures, default is Undefined, optional
        advanced machine features
    bootDiskKmsKey : str, default is Undefined, optional
        boot disk kms key
    confidentialNodes : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigConfidentialNodes, default is Undefined, optional
        confidential nodes
    containerdConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigContainerdConfig, default is Undefined, optional
        containerd config
    diskSizeGb : float, default is Undefined, optional
        disk size gb
    diskType : str, default is Undefined, optional
        disk type
    enableConfidentialStorage : bool, default is Undefined, optional
        enable confidential storage
    ephemeralStorageLocalSsdConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigEphemeralStorageLocalSsdConfig, default is Undefined, optional
        ephemeral storage local ssd config
    fastSocket : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigFastSocket, default is Undefined, optional
        fast socket
    gcfsConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGcfsConfig, default is Undefined, optional
        gcfs config
    guestAccelerator : [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGuestAcceleratorItems0], default is Undefined, optional
        guest accelerator
    gvnic : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGvnic, default is Undefined, optional
        gvnic
    hostMaintenancePolicy : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigHostMaintenancePolicy, default is Undefined, optional
        host maintenance policy
    imageType : str, default is Undefined, optional
        image type
    kubeletConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigKubeletConfig, default is Undefined, optional
        kubelet config
    labels : {str:str}, default is Undefined, optional
        labels
    linuxNodeConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigLinuxNodeConfig, default is Undefined, optional
        linux node config
    localNvmeSsdBlockConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigLocalNvmeSsdBlockConfig, default is Undefined, optional
        local nvme ssd block config
    localSsdCount : float, default is Undefined, optional
        local ssd count
    loggingVariant : str, default is Undefined, optional
        logging variant
    machineType : str, default is Undefined, optional
        machine type
    metadata : {str:str}, default is Undefined, optional
        metadata
    minCpuPlatform : str, default is Undefined, optional
        min Cpu platform
    nodeGroup : str, default is Undefined, optional
        node group
    oauthScopes : [str], default is Undefined, optional
        oauth scopes
    preemptible : bool, default is Undefined, optional
        preemptible
    reservationAffinity : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigReservationAffinity, default is Undefined, optional
        reservation affinity
    resourceLabels : {str:str}, default is Undefined, optional
        resource labels
    resourceManagerTags : {str:str}, default is Undefined, optional
        resource manager tags
    secondaryBootDisks : [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigSecondaryBootDisksItems0], default is Undefined, optional
        secondary boot disks
    serviceAccount : str, default is Undefined, optional
        service account
    serviceAccountRef : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigServiceAccountRef, default is Undefined, optional
        service account ref
    serviceAccountSelector : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigServiceAccountSelector, default is Undefined, optional
        service account selector
    shieldedInstanceConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigShieldedInstanceConfig, default is Undefined, optional
        shielded instance config
    soleTenantConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigSoleTenantConfig, default is Undefined, optional
        sole tenant config
    spot : bool, default is Undefined, optional
        spot
    tags : [str], default is Undefined, optional
        tags
    taint : [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigTaintItems0], default is Undefined, optional
        taint
    workloadMetadataConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigWorkloadMetadataConfig, default is Undefined, optional
        workload metadata config
    """


    advancedMachineFeatures?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigAdvancedMachineFeatures

    bootDiskKmsKey?: str

    confidentialNodes?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigConfidentialNodes

    containerdConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigContainerdConfig

    diskSizeGb?: float

    diskType?: str

    enableConfidentialStorage?: bool

    ephemeralStorageLocalSsdConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigEphemeralStorageLocalSsdConfig

    fastSocket?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigFastSocket

    gcfsConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGcfsConfig

    guestAccelerator?: [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGuestAcceleratorItems0]

    gvnic?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGvnic

    hostMaintenancePolicy?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigHostMaintenancePolicy

    imageType?: str

    kubeletConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigKubeletConfig

    labels?: {str:str}

    linuxNodeConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigLinuxNodeConfig

    localNvmeSsdBlockConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigLocalNvmeSsdBlockConfig

    localSsdCount?: float

    loggingVariant?: str

    machineType?: str

    metadata?: {str:str}

    minCpuPlatform?: str

    nodeGroup?: str

    oauthScopes?: [str]

    preemptible?: bool

    reservationAffinity?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigReservationAffinity

    resourceLabels?: {str:str}

    resourceManagerTags?: {str:str}

    secondaryBootDisks?: [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigSecondaryBootDisksItems0]

    serviceAccount?: str

    serviceAccountRef?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigServiceAccountRef

    serviceAccountSelector?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigServiceAccountSelector

    shieldedInstanceConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigShieldedInstanceConfig

    soleTenantConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigSoleTenantConfig

    spot?: bool

    tags?: [str]

    taint?: [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigTaintItems0]

    workloadMetadataConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigWorkloadMetadataConfig


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigAdvancedMachineFeatures:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config advanced machine features

    Attributes
    ----------
    enableNestedVirtualization : bool, default is Undefined, optional
        enable nested virtualization
    threadsPerCore : float, default is Undefined, optional
        threads per core
    """


    enableNestedVirtualization?: bool

    threadsPerCore?: float


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigConfidentialNodes:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config confidential nodes

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigContainerdConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config containerd config

    Attributes
    ----------
    privateRegistryAccessConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigContainerdConfigPrivateRegistryAccessConfig, default is Undefined, optional
        private registry access config
    """


    privateRegistryAccessConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigContainerdConfigPrivateRegistryAccessConfig


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigContainerdConfigPrivateRegistryAccessConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config containerd config private registry access config

    Attributes
    ----------
    certificateAuthorityDomainConfig : [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0], default is Undefined, optional
        certificate authority domain config
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    certificateAuthorityDomainConfig?: [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0]

    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config containerd config private registry access config certificate authority domain config items0

    Attributes
    ----------
    fqdns : [str], default is Undefined, optional
        fqdns
    gcpSecretManagerCertificateConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfig, default is Undefined, optional
        gcp secret manager certificate config
    """


    fqdns?: [str]

    gcpSecretManagerCertificateConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfig


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config containerd config private registry access config certificate authority domain config items0 gcp secret manager certificate config

    Attributes
    ----------
    secretUri : str, default is Undefined, optional
        secret Uri
    """


    secretUri?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigEphemeralStorageLocalSsdConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config ephemeral storage local ssd config

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        local ssd count
    """


    localSsdCount?: float


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigFastSocket:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config fast socket

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGcfsConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config gcfs config

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGuestAcceleratorItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config guest accelerator items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        count
    gpuDriverInstallationConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGuestAcceleratorItems0GpuDriverInstallationConfig, default is Undefined, optional
        gpu driver installation config
    gpuPartitionSize : str, default is Undefined, optional
        gpu partition size
    gpuSharingConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGuestAcceleratorItems0GpuSharingConfig, default is Undefined, optional
        gpu sharing config
    $type : str, default is Undefined, optional
        The type of the policy. Supports a single value: COMPACT.
        Specifying COMPACT placement policy type places node pool's nodes in a closer
        physical proximity in order to reduce network latency between nodes.
    """


    count?: float

    gpuDriverInstallationConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGuestAcceleratorItems0GpuDriverInstallationConfig

    gpuPartitionSize?: str

    gpuSharingConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGuestAcceleratorItems0GpuSharingConfig

    $type?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGuestAcceleratorItems0GpuDriverInstallationConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config guest accelerator items0 gpu driver installation config

    Attributes
    ----------
    gpuDriverVersion : str, default is Undefined, optional
        The Kubernetes version for the nodes in this pool. Note that if this field
        and auto_upgrade are both specified, they will fight each other for what the node version should
        be, so setting both is highly discouraged.
    """


    gpuDriverVersion?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGuestAcceleratorItems0GpuSharingConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config guest accelerator items0 gpu sharing config

    Attributes
    ----------
    gpuSharingStrategy : str, default is Undefined, optional
        gpu sharing strategy
    maxSharedClientsPerGpu : float, default is Undefined, optional
        max shared clients per gpu
    """


    gpuSharingStrategy?: str

    maxSharedClientsPerGpu?: float


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigGvnic:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config gvnic

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigHostMaintenancePolicy:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config host maintenance policy

    Attributes
    ----------
    maintenanceInterval : str, default is Undefined, optional
        maintenance interval
    """


    maintenanceInterval?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigKubeletConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config kubelet config

    Attributes
    ----------
    cpuCfsQuota : bool, default is Undefined, optional
        cpu cfs quota
    cpuCfsQuotaPeriod : str, default is Undefined, optional
        cpu cfs quota period
    cpuManagerPolicy : str, default is Undefined, optional
        cpu manager policy
    insecureKubeletReadonlyPortEnabled : str, default is Undefined, optional
        insecure kubelet readonly port enabled
    podPidsLimit : float, default is Undefined, optional
        pod pids limit
    """


    cpuCfsQuota?: bool

    cpuCfsQuotaPeriod?: str

    cpuManagerPolicy?: str

    insecureKubeletReadonlyPortEnabled?: str

    podPidsLimit?: float


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigLinuxNodeConfig:
    r"""
    Parameters used in creating the node pool. See
    google_container_cluster for schema.

    Attributes
    ----------
    cgroupMode : str, default is Undefined, optional
        cgroup mode
    sysctls : {str:str}, default is Undefined, optional
        sysctls
    """


    cgroupMode?: str

    sysctls?: {str:str}


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigLocalNvmeSsdBlockConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config local nvme ssd block config

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        local ssd count
    """


    localSsdCount?: float


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigReservationAffinity:
    r"""
    The configuration of the desired reservation which instances could take capacity from.
    Structure is documented below.

    Attributes
    ----------
    consumeReservationType : str, default is Undefined, optional
        The type of reservation consumption
        Accepted values are:
    key : str, default is Undefined, optional
        name" as the key and specify the name of your reservation as its value.
    values : [str], default is Undefined, optional
        name"
    """


    consumeReservationType?: str

    key?: str

    values?: [str]


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigSecondaryBootDisksItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config secondary boot disks items0

    Attributes
    ----------
    diskImage : str, default is Undefined, optional
        disk image
    mode : str, default is Undefined, optional
        mode
    """


    diskImage?: str

    mode?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigServiceAccountRef:
    r"""
    Reference to a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigServiceAccountRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigServiceAccountRefPolicy


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigServiceAccountRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigServiceAccountSelector:
    r"""
    Selector for a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigServiceAccountSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigServiceAccountSelectorPolicy


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigServiceAccountSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigShieldedInstanceConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config shielded instance config

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        enable integrity monitoring
    enableSecureBoot : bool, default is Undefined, optional
        enable secure boot
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigSoleTenantConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config sole tenant config

    Attributes
    ----------
    nodeAffinity : [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigSoleTenantConfigNodeAffinityItems0], default is Undefined, optional
        node affinity
    """


    nodeAffinity?: [ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigSoleTenantConfigNodeAffinityItems0]


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigSoleTenantConfigNodeAffinityItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config sole tenant config node affinity items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        name" as the key and specify the name of your reservation as its value.
    operator : str, default is Undefined, optional
        operator
    values : [str], default is Undefined, optional
        name"
    """


    key?: str

    operator?: str

    values?: [str]


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigTaintItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config taint items0

    Attributes
    ----------
    effect : str, default is Undefined, optional
        effect
    key : str, default is Undefined, optional
        name" as the key and specify the name of your reservation as its value.
    value : str, default is Undefined, optional
        value
    """


    effect?: str

    key?: str

    value?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderNodeConfigWorkloadMetadataConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec for provider node config workload metadata config

    Attributes
    ----------
    mode : str, default is Undefined, optional
        mode
    """


    mode?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderPlacementPolicy:
    r"""
    Specifies a custom placement policy for the
    nodes.

    Attributes
    ----------
    policyName : str, default is Undefined, optional
        If set, refers to the name of a custom resource policy supplied by the user.
        The resource policy must be in the same project and region as the node pool.
        If not found, InvalidArgument error is returned.
    tpuTopology : str, default is Undefined, optional
        The TPU placement topology for pod slice node pool.
    $type : str, default is Undefined, optional
        The type of the policy. Supports a single value: COMPACT.
        Specifying COMPACT placement policy type places node pool's nodes in a closer
        physical proximity in order to reduce network latency between nodes.
    """


    policyName?: str

    tpuTopology?: str

    $type?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderQueuedProvisioning:
    r"""
    Specifies node pool-level settings of queued provisioning.
    Structure is documented below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderUpgradeSettings:
    r"""
    Specify node upgrade settings to change how GKE upgrades nodes.
    The maximum number of nodes upgraded simultaneously is limited to 20. Structure is documented below.

    Attributes
    ----------
    blueGreenSettings : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderUpgradeSettingsBlueGreenSettings, default is Undefined, optional
        blue green settings
    maxSurge : float, default is Undefined, optional
        The number of additional nodes that can be added to the node pool during
        an upgrade. Increasing max_surge raises the number of nodes that can be upgraded simultaneously.
        Can be set to 0 or greater.
    maxUnavailable : float, default is Undefined, optional
        The number of nodes that can be simultaneously unavailable during
        an upgrade. Increasing max_unavailable raises the number of nodes that can be upgraded in
        parallel. Can be set to 0 or greater.
    strategy : str, default is Undefined, optional
        (Default SURGE) The upgrade strategy to be used for upgrading the nodes.
    """


    blueGreenSettings?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderUpgradeSettingsBlueGreenSettings

    maxSurge?: float

    maxUnavailable?: float

    strategy?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderUpgradeSettingsBlueGreenSettings:
    r"""
    The settings to adjust blue green upgrades.
    Structure is documented below

    Attributes
    ----------
    nodePoolSoakDuration : str, default is Undefined, optional
        Time needed after draining the entire blue pool.
        After this period, the blue pool will be cleaned up.
    standardRolloutPolicy : ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy, default is Undefined, optional
        standard rollout policy
    """


    nodePoolSoakDuration?: str

    standardRolloutPolicy?: ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy


schema ContainerGcpUpboundIoV1beta2NodePoolSpecForProviderUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy:
    r"""
    Specifies the standard policy settings for blue-green upgrades.

    Attributes
    ----------
    batchNodeCount : float, default is Undefined, optional
        Number of blue nodes to drain in a batch.
    batchPercentage : float, default is Undefined, optional
        Percentage of the blue pool nodes to drain in a batch.
    batchSoakDuration : str, default is Undefined, optional
        (Optionial) Soak time after each batch gets drained.
    """


    batchNodeCount?: float

    batchPercentage?: float

    batchSoakDuration?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    autoscaling : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderAutoscaling, default is Undefined, optional
        autoscaling
    initialNodeCount : float, default is Undefined, optional
        The initial number of nodes for the pool. In
        regional or multi-zonal clusters, this is the number of nodes per zone. Changing
        this will force recreation of the resource.  If you don't
        need this value, don't set it.  If you do need it, you can use a lifecycle block to
        ignore subsequent changes to this field.
    management : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderManagement, default is Undefined, optional
        management
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods per node in this node pool.
        Note that this does not work on node pools which are "route-based" - that is, node
        pools belonging to clusters that do not have IP Aliasing enabled.
        See the official documentation
        for more information.
    networkConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfig, default is Undefined, optional
        network config
    nodeConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfig, default is Undefined, optional
        node config
    nodeCount : float, default is Undefined, optional
        The number of nodes per instance group. This field can be used to
        update the number of nodes per instance group but should not be used alongside autoscaling.
    nodeLocations : [str], default is Undefined, optional
        The list of zones in which the node pool's nodes should be located. Nodes must
        be in the region of their regional cluster or in the same region as their
        cluster's zone for zonal clusters. If unspecified, the cluster-level
        node_locations will be used.
    placementPolicy : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderPlacementPolicy, default is Undefined, optional
        placement policy
    project : str, default is Undefined, optional
        The ID of the project in which to create the node pool. If blank,
        the provider-configured project will be used.
    queuedProvisioning : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderQueuedProvisioning, default is Undefined, optional
        queued provisioning
    upgradeSettings : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderUpgradeSettings, default is Undefined, optional
        upgrade settings
    version : str, default is Undefined, optional
        The Kubernetes version for the nodes in this pool. Note that if this field
        and auto_upgrade are both specified, they will fight each other for what the node version should
        be, so setting both is highly discouraged.
    """


    autoscaling?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderAutoscaling

    initialNodeCount?: float

    management?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderManagement

    maxPodsPerNode?: float

    networkConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfig

    nodeConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfig

    nodeCount?: float

    nodeLocations?: [str]

    placementPolicy?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderPlacementPolicy

    project?: str

    queuedProvisioning?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderQueuedProvisioning

    upgradeSettings?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderUpgradeSettings

    version?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderAutoscaling:
    r"""
    Configuration required by cluster autoscaler to adjust
    the size of the node pool to the current cluster usage. Structure is documented below.

    Attributes
    ----------
    locationPolicy : str, default is Undefined, optional
        Location policy specifies the algorithm used when
        scaling-up the node pool. Location policy is supported only in 1.24.1+ clusters.
    maxNodeCount : float, default is Undefined, optional
        Maximum number of nodes per zone in the NodePool.
        Must be >= min_node_count. Cannot be used with total limits.
    minNodeCount : float, default is Undefined, optional
        Minimum number of nodes per zone in the NodePool.
        Must be >=0 and <= max_node_count. Cannot be used with total limits.
    totalMaxNodeCount : float, default is Undefined, optional
        Total maximum number of nodes in the NodePool.
        Must be >= total_min_node_count. Cannot be used with per zone limits.
        Total size limits are supported only in 1.24.1+ clusters.
    totalMinNodeCount : float, default is Undefined, optional
        Total minimum number of nodes in the NodePool.
        Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
        Total size limits are supported only in 1.24.1+ clusters.
    """


    locationPolicy?: str

    maxNodeCount?: float

    minNodeCount?: float

    totalMaxNodeCount?: float

    totalMinNodeCount?: float


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderManagement:
    r"""
    Node management configuration, wherein auto-repair and
    auto-upgrade is configured. Structure is documented below.

    Attributes
    ----------
    autoRepair : bool, default is Undefined, optional
        Whether the nodes will be automatically repaired. Enabled by default.
    autoUpgrade : bool, default is Undefined, optional
        Whether the nodes will be automatically upgraded. Enabled by default.
    """


    autoRepair?: bool

    autoUpgrade?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfig:
    r"""
    The network configuration of the pool. Such as
    configuration for Adding Pod IP address ranges) to the node pool. Or enabling private nodes. Structure is
    documented below

    Attributes
    ----------
    additionalNodeNetworkConfigs : [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfigAdditionalNodeNetworkConfigsItems0], default is Undefined, optional
        We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface.
        Structure is documented below
    additionalPodNetworkConfigs : [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfigAdditionalPodNetworkConfigsItems0], default is Undefined, optional
        We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node.
        Structure is documented below
    createPodRange : bool, default is Undefined, optional
        Whether to create a new range for pod IPs in this node pool. Defaults are provided for pod_range and pod_ipv4_cidr_block if they are not specified.
    enablePrivateNodes : bool, default is Undefined, optional
        Whether nodes have internal IP addresses only.
    networkPerformanceConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfigNetworkPerformanceConfig, default is Undefined, optional
        network performance config
    podCidrOverprovisionConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfigPodCidrOverprovisionConfig, default is Undefined, optional
        pod cidr overprovision config
    podIpv4CidrBlock : str, default is Undefined, optional
        The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
    podRange : str, default is Undefined, optional
        The ID of the secondary range for pod IPs. If create_pod_range is true, this ID is used for the new range. If create_pod_range is false, uses an existing secondary range with this ID.
    """


    additionalNodeNetworkConfigs?: [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfigAdditionalNodeNetworkConfigsItems0]

    additionalPodNetworkConfigs?: [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfigAdditionalPodNetworkConfigsItems0]

    createPodRange?: bool

    enablePrivateNodes?: bool

    networkPerformanceConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfigNetworkPerformanceConfig

    podCidrOverprovisionConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfigPodCidrOverprovisionConfig

    podIpv4CidrBlock?: str

    podRange?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfigAdditionalNodeNetworkConfigsItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider network config additional node network configs items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        Name of the VPC where the additional interface belongs.
    subnetwork : str, default is Undefined, optional
        Name of the subnetwork where the additional pod network belongs.
    """


    network?: str

    subnetwork?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfigAdditionalPodNetworkConfigsItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider network config additional pod network configs items0

    Attributes
    ----------
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods per node in this node pool.
        Note that this does not work on node pools which are "route-based" - that is, node
        pools belonging to clusters that do not have IP Aliasing enabled.
        See the official documentation
        for more information.
    secondaryPodRange : str, default is Undefined, optional
        The name of the secondary range on the subnet which provides IP address for this pod range.
    subnetwork : str, default is Undefined, optional
        Name of the subnetwork where the additional pod network belongs.
    """


    maxPodsPerNode?: float

    secondaryPodRange?: str

    subnetwork?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfigNetworkPerformanceConfig:
    r"""
    Network bandwidth tier configuration. Structure is documented below.

    Attributes
    ----------
    totalEgressBandwidthTier : str, default is Undefined, optional
        Specifies the total network bandwidth tier for the NodePool.
    """


    totalEgressBandwidthTier?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNetworkConfigPodCidrOverprovisionConfig:
    r"""
    Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited. Structure is documented below.

    Attributes
    ----------
    disabled : bool, default is Undefined, optional
        Whether pod cidr overprovision is disabled.
    """


    disabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfig:
    r"""
    Parameters used in creating the node pool. See
    google_container_cluster for schema.

    Attributes
    ----------
    advancedMachineFeatures : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigAdvancedMachineFeatures, default is Undefined, optional
        advanced machine features
    bootDiskKmsKey : str, default is Undefined, optional
        boot disk kms key
    confidentialNodes : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigConfidentialNodes, default is Undefined, optional
        confidential nodes
    containerdConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigContainerdConfig, default is Undefined, optional
        containerd config
    diskSizeGb : float, default is Undefined, optional
        disk size gb
    diskType : str, default is Undefined, optional
        disk type
    enableConfidentialStorage : bool, default is Undefined, optional
        enable confidential storage
    ephemeralStorageLocalSsdConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigEphemeralStorageLocalSsdConfig, default is Undefined, optional
        ephemeral storage local ssd config
    fastSocket : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigFastSocket, default is Undefined, optional
        fast socket
    gcfsConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGcfsConfig, default is Undefined, optional
        gcfs config
    guestAccelerator : [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGuestAcceleratorItems0], default is Undefined, optional
        guest accelerator
    gvnic : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGvnic, default is Undefined, optional
        gvnic
    hostMaintenancePolicy : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigHostMaintenancePolicy, default is Undefined, optional
        host maintenance policy
    imageType : str, default is Undefined, optional
        image type
    kubeletConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigKubeletConfig, default is Undefined, optional
        kubelet config
    labels : {str:str}, default is Undefined, optional
        labels
    linuxNodeConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigLinuxNodeConfig, default is Undefined, optional
        linux node config
    localNvmeSsdBlockConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigLocalNvmeSsdBlockConfig, default is Undefined, optional
        local nvme ssd block config
    localSsdCount : float, default is Undefined, optional
        local ssd count
    loggingVariant : str, default is Undefined, optional
        logging variant
    machineType : str, default is Undefined, optional
        machine type
    metadata : {str:str}, default is Undefined, optional
        metadata
    minCpuPlatform : str, default is Undefined, optional
        min Cpu platform
    nodeGroup : str, default is Undefined, optional
        node group
    oauthScopes : [str], default is Undefined, optional
        oauth scopes
    preemptible : bool, default is Undefined, optional
        preemptible
    reservationAffinity : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigReservationAffinity, default is Undefined, optional
        reservation affinity
    resourceLabels : {str:str}, default is Undefined, optional
        resource labels
    resourceManagerTags : {str:str}, default is Undefined, optional
        resource manager tags
    secondaryBootDisks : [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigSecondaryBootDisksItems0], default is Undefined, optional
        secondary boot disks
    serviceAccount : str, default is Undefined, optional
        service account
    serviceAccountRef : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigServiceAccountRef, default is Undefined, optional
        service account ref
    serviceAccountSelector : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigServiceAccountSelector, default is Undefined, optional
        service account selector
    shieldedInstanceConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigShieldedInstanceConfig, default is Undefined, optional
        shielded instance config
    soleTenantConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigSoleTenantConfig, default is Undefined, optional
        sole tenant config
    spot : bool, default is Undefined, optional
        spot
    tags : [str], default is Undefined, optional
        tags
    taint : [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigTaintItems0], default is Undefined, optional
        taint
    workloadMetadataConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigWorkloadMetadataConfig, default is Undefined, optional
        workload metadata config
    """


    advancedMachineFeatures?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigAdvancedMachineFeatures

    bootDiskKmsKey?: str

    confidentialNodes?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigConfidentialNodes

    containerdConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigContainerdConfig

    diskSizeGb?: float

    diskType?: str

    enableConfidentialStorage?: bool

    ephemeralStorageLocalSsdConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigEphemeralStorageLocalSsdConfig

    fastSocket?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigFastSocket

    gcfsConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGcfsConfig

    guestAccelerator?: [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGuestAcceleratorItems0]

    gvnic?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGvnic

    hostMaintenancePolicy?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigHostMaintenancePolicy

    imageType?: str

    kubeletConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigKubeletConfig

    labels?: {str:str}

    linuxNodeConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigLinuxNodeConfig

    localNvmeSsdBlockConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigLocalNvmeSsdBlockConfig

    localSsdCount?: float

    loggingVariant?: str

    machineType?: str

    metadata?: {str:str}

    minCpuPlatform?: str

    nodeGroup?: str

    oauthScopes?: [str]

    preemptible?: bool

    reservationAffinity?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigReservationAffinity

    resourceLabels?: {str:str}

    resourceManagerTags?: {str:str}

    secondaryBootDisks?: [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigSecondaryBootDisksItems0]

    serviceAccount?: str

    serviceAccountRef?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigServiceAccountRef

    serviceAccountSelector?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigServiceAccountSelector

    shieldedInstanceConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigShieldedInstanceConfig

    soleTenantConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigSoleTenantConfig

    spot?: bool

    tags?: [str]

    taint?: [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigTaintItems0]

    workloadMetadataConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigWorkloadMetadataConfig


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigAdvancedMachineFeatures:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config advanced machine features

    Attributes
    ----------
    enableNestedVirtualization : bool, default is Undefined, optional
        enable nested virtualization
    threadsPerCore : float, default is Undefined, optional
        threads per core
    """


    enableNestedVirtualization?: bool

    threadsPerCore?: float


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigConfidentialNodes:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config confidential nodes

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigContainerdConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config containerd config

    Attributes
    ----------
    privateRegistryAccessConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigContainerdConfigPrivateRegistryAccessConfig, default is Undefined, optional
        private registry access config
    """


    privateRegistryAccessConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigContainerdConfigPrivateRegistryAccessConfig


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigContainerdConfigPrivateRegistryAccessConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config containerd config private registry access config

    Attributes
    ----------
    certificateAuthorityDomainConfig : [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0], default is Undefined, optional
        certificate authority domain config
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    certificateAuthorityDomainConfig?: [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0]

    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config containerd config private registry access config certificate authority domain config items0

    Attributes
    ----------
    fqdns : [str], default is Undefined, optional
        fqdns
    gcpSecretManagerCertificateConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfig, default is Undefined, optional
        gcp secret manager certificate config
    """


    fqdns?: [str]

    gcpSecretManagerCertificateConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfig


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config containerd config private registry access config certificate authority domain config items0 gcp secret manager certificate config

    Attributes
    ----------
    secretUri : str, default is Undefined, optional
        secret Uri
    """


    secretUri?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigEphemeralStorageLocalSsdConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config ephemeral storage local ssd config

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        local ssd count
    """


    localSsdCount?: float


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigFastSocket:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config fast socket

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGcfsConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config gcfs config

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGuestAcceleratorItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config guest accelerator items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        count
    gpuDriverInstallationConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGuestAcceleratorItems0GpuDriverInstallationConfig, default is Undefined, optional
        gpu driver installation config
    gpuPartitionSize : str, default is Undefined, optional
        gpu partition size
    gpuSharingConfig : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGuestAcceleratorItems0GpuSharingConfig, default is Undefined, optional
        gpu sharing config
    $type : str, default is Undefined, optional
        The type of the policy. Supports a single value: COMPACT.
        Specifying COMPACT placement policy type places node pool's nodes in a closer
        physical proximity in order to reduce network latency between nodes.
    """


    count?: float

    gpuDriverInstallationConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGuestAcceleratorItems0GpuDriverInstallationConfig

    gpuPartitionSize?: str

    gpuSharingConfig?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGuestAcceleratorItems0GpuSharingConfig

    $type?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGuestAcceleratorItems0GpuDriverInstallationConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config guest accelerator items0 gpu driver installation config

    Attributes
    ----------
    gpuDriverVersion : str, default is Undefined, optional
        The Kubernetes version for the nodes in this pool. Note that if this field
        and auto_upgrade are both specified, they will fight each other for what the node version should
        be, so setting both is highly discouraged.
    """


    gpuDriverVersion?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGuestAcceleratorItems0GpuSharingConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config guest accelerator items0 gpu sharing config

    Attributes
    ----------
    gpuSharingStrategy : str, default is Undefined, optional
        gpu sharing strategy
    maxSharedClientsPerGpu : float, default is Undefined, optional
        max shared clients per gpu
    """


    gpuSharingStrategy?: str

    maxSharedClientsPerGpu?: float


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigGvnic:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config gvnic

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigHostMaintenancePolicy:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config host maintenance policy

    Attributes
    ----------
    maintenanceInterval : str, default is Undefined, optional
        maintenance interval
    """


    maintenanceInterval?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigKubeletConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config kubelet config

    Attributes
    ----------
    cpuCfsQuota : bool, default is Undefined, optional
        cpu cfs quota
    cpuCfsQuotaPeriod : str, default is Undefined, optional
        cpu cfs quota period
    cpuManagerPolicy : str, default is Undefined, optional
        cpu manager policy
    insecureKubeletReadonlyPortEnabled : str, default is Undefined, optional
        insecure kubelet readonly port enabled
    podPidsLimit : float, default is Undefined, optional
        pod pids limit
    """


    cpuCfsQuota?: bool

    cpuCfsQuotaPeriod?: str

    cpuManagerPolicy?: str

    insecureKubeletReadonlyPortEnabled?: str

    podPidsLimit?: float


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigLinuxNodeConfig:
    r"""
    Parameters used in creating the node pool. See
    google_container_cluster for schema.

    Attributes
    ----------
    cgroupMode : str, default is Undefined, optional
        cgroup mode
    sysctls : {str:str}, default is Undefined, optional
        sysctls
    """


    cgroupMode?: str

    sysctls?: {str:str}


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigLocalNvmeSsdBlockConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config local nvme ssd block config

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        local ssd count
    """


    localSsdCount?: float


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigReservationAffinity:
    r"""
    The configuration of the desired reservation which instances could take capacity from.
    Structure is documented below.

    Attributes
    ----------
    consumeReservationType : str, default is Undefined, optional
        The type of reservation consumption
        Accepted values are:
    key : str, default is Undefined, optional
        name" as the key and specify the name of your reservation as its value.
    values : [str], default is Undefined, optional
        name"
    """


    consumeReservationType?: str

    key?: str

    values?: [str]


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigSecondaryBootDisksItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config secondary boot disks items0

    Attributes
    ----------
    diskImage : str, default is Undefined, optional
        disk image
    mode : str, default is Undefined, optional
        mode
    """


    diskImage?: str

    mode?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigServiceAccountRef:
    r"""
    Reference to a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigServiceAccountRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigServiceAccountRefPolicy


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigServiceAccountRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigServiceAccountSelector:
    r"""
    Selector for a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigServiceAccountSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigServiceAccountSelectorPolicy


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigServiceAccountSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigShieldedInstanceConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config shielded instance config

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        enable integrity monitoring
    enableSecureBoot : bool, default is Undefined, optional
        enable secure boot
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigSoleTenantConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config sole tenant config

    Attributes
    ----------
    nodeAffinity : [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigSoleTenantConfigNodeAffinityItems0], default is Undefined, optional
        node affinity
    """


    nodeAffinity?: [ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigSoleTenantConfigNodeAffinityItems0]


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigSoleTenantConfigNodeAffinityItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config sole tenant config node affinity items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        name" as the key and specify the name of your reservation as its value.
    operator : str, default is Undefined, optional
        operator
    values : [str], default is Undefined, optional
        name"
    """


    key?: str

    operator?: str

    values?: [str]


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigTaintItems0:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config taint items0

    Attributes
    ----------
    effect : str, default is Undefined, optional
        effect
    key : str, default is Undefined, optional
        name" as the key and specify the name of your reservation as its value.
    value : str, default is Undefined, optional
        value
    """


    effect?: str

    key?: str

    value?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderNodeConfigWorkloadMetadataConfig:
    r"""
    container gcp upbound io v1beta2 node pool spec init provider node config workload metadata config

    Attributes
    ----------
    mode : str, default is Undefined, optional
        mode
    """


    mode?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderPlacementPolicy:
    r"""
    Specifies a custom placement policy for the
    nodes.

    Attributes
    ----------
    policyName : str, default is Undefined, optional
        If set, refers to the name of a custom resource policy supplied by the user.
        The resource policy must be in the same project and region as the node pool.
        If not found, InvalidArgument error is returned.
    tpuTopology : str, default is Undefined, optional
        The TPU placement topology for pod slice node pool.
    $type : str, default is Undefined, optional
        The type of the policy. Supports a single value: COMPACT.
        Specifying COMPACT placement policy type places node pool's nodes in a closer
        physical proximity in order to reduce network latency between nodes.
    """


    policyName?: str

    tpuTopology?: str

    $type?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderQueuedProvisioning:
    r"""
    Specifies node pool-level settings of queued provisioning.
    Structure is documented below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderUpgradeSettings:
    r"""
    Specify node upgrade settings to change how GKE upgrades nodes.
    The maximum number of nodes upgraded simultaneously is limited to 20. Structure is documented below.

    Attributes
    ----------
    blueGreenSettings : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderUpgradeSettingsBlueGreenSettings, default is Undefined, optional
        blue green settings
    maxSurge : float, default is Undefined, optional
        The number of additional nodes that can be added to the node pool during
        an upgrade. Increasing max_surge raises the number of nodes that can be upgraded simultaneously.
        Can be set to 0 or greater.
    maxUnavailable : float, default is Undefined, optional
        The number of nodes that can be simultaneously unavailable during
        an upgrade. Increasing max_unavailable raises the number of nodes that can be upgraded in
        parallel. Can be set to 0 or greater.
    strategy : str, default is Undefined, optional
        (Default SURGE) The upgrade strategy to be used for upgrading the nodes.
    """


    blueGreenSettings?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderUpgradeSettingsBlueGreenSettings

    maxSurge?: float

    maxUnavailable?: float

    strategy?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderUpgradeSettingsBlueGreenSettings:
    r"""
    The settings to adjust blue green upgrades.
    Structure is documented below

    Attributes
    ----------
    nodePoolSoakDuration : str, default is Undefined, optional
        Time needed after draining the entire blue pool.
        After this period, the blue pool will be cleaned up.
    standardRolloutPolicy : ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy, default is Undefined, optional
        standard rollout policy
    """


    nodePoolSoakDuration?: str

    standardRolloutPolicy?: ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy


schema ContainerGcpUpboundIoV1beta2NodePoolSpecInitProviderUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy:
    r"""
    Specifies the standard policy settings for blue-green upgrades.

    Attributes
    ----------
    batchNodeCount : float, default is Undefined, optional
        Number of blue nodes to drain in a batch.
    batchPercentage : float, default is Undefined, optional
        Percentage of the blue pool nodes to drain in a batch.
    batchSoakDuration : str, default is Undefined, optional
        (Optionial) Soak time after each batch gets drained.
    """


    batchNodeCount?: float

    batchPercentage?: float

    batchSoakDuration?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerGcpUpboundIoV1beta2NodePoolSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerGcpUpboundIoV1beta2NodePoolSpecProviderConfigRefPolicy


schema ContainerGcpUpboundIoV1beta2NodePoolSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta2NodePoolSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ContainerGcpUpboundIoV1beta2NodePoolSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ContainerGcpUpboundIoV1beta2NodePoolSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ContainerGcpUpboundIoV1beta2NodePoolSpecPublishConnectionDetailsToConfigRef

    metadata?: ContainerGcpUpboundIoV1beta2NodePoolSpecPublishConnectionDetailsToMetadata

    name: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerGcpUpboundIoV1beta2NodePoolSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerGcpUpboundIoV1beta2NodePoolSpecPublishConnectionDetailsToConfigRefPolicy


schema ContainerGcpUpboundIoV1beta2NodePoolSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta2NodePoolSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ContainerGcpUpboundIoV1beta2NodePoolSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatus:
    r"""
    NodePoolStatus defines the observed state of NodePool.

    Attributes
    ----------
    atProvider : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ContainerGcpUpboundIoV1beta2NodePoolStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProvider

    conditions?: [ContainerGcpUpboundIoV1beta2NodePoolStatusConditionsItems0]

    observedGeneration?: int


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProvider:
    r"""
    container gcp upbound io v1beta2 node pool status at provider

    Attributes
    ----------
    autoscaling : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderAutoscaling, default is Undefined, optional
        autoscaling
    cluster : str, default is Undefined, optional
        The cluster to create the node pool for. Cluster must be present in location provided for clusters. May be specified in the format projects/{{project}}/locations/{{location}}/clusters/{{cluster}} or as just the name of the cluster.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{project}}/{{location}}/{{cluster}}/{{name}}
    initialNodeCount : float, default is Undefined, optional
        The initial number of nodes for the pool. In
        regional or multi-zonal clusters, this is the number of nodes per zone. Changing
        this will force recreation of the resource.  If you don't
        need this value, don't set it.  If you do need it, you can use a lifecycle block to
        ignore subsequent changes to this field.
    instanceGroupUrls : [str], default is Undefined, optional
        The resource URLs of the managed instance groups associated with this node pool.
    location : str, default is Undefined, optional
        The location (region or zone) of the cluster.
    managedInstanceGroupUrls : [str], default is Undefined, optional
        List of instance group URLs which have been assigned to this node pool.
    management : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderManagement, default is Undefined, optional
        management
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods per node in this node pool.
        Note that this does not work on node pools which are "route-based" - that is, node
        pools belonging to clusters that do not have IP Aliasing enabled.
        See the official documentation
        for more information.
    networkConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfig, default is Undefined, optional
        network config
    nodeConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfig, default is Undefined, optional
        node config
    nodeCount : float, default is Undefined, optional
        The number of nodes per instance group. This field can be used to
        update the number of nodes per instance group but should not be used alongside autoscaling.
    nodeLocations : [str], default is Undefined, optional
        The list of zones in which the node pool's nodes should be located. Nodes must
        be in the region of their regional cluster or in the same region as their
        cluster's zone for zonal clusters. If unspecified, the cluster-level
        node_locations will be used.
    operation : str, default is Undefined, optional
        operation
    placementPolicy : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderPlacementPolicy, default is Undefined, optional
        placement policy
    project : str, default is Undefined, optional
        The ID of the project in which to create the node pool. If blank,
        the provider-configured project will be used.
    queuedProvisioning : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderQueuedProvisioning, default is Undefined, optional
        queued provisioning
    upgradeSettings : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderUpgradeSettings, default is Undefined, optional
        upgrade settings
    version : str, default is Undefined, optional
        The Kubernetes version for the nodes in this pool. Note that if this field
        and auto_upgrade are both specified, they will fight each other for what the node version should
        be, so setting both is highly discouraged.
    """


    autoscaling?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderAutoscaling

    cluster?: str

    id?: str

    initialNodeCount?: float

    instanceGroupUrls?: [str]

    location?: str

    managedInstanceGroupUrls?: [str]

    management?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderManagement

    maxPodsPerNode?: float

    networkConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfig

    nodeConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfig

    nodeCount?: float

    nodeLocations?: [str]

    operation?: str

    placementPolicy?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderPlacementPolicy

    project?: str

    queuedProvisioning?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderQueuedProvisioning

    upgradeSettings?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderUpgradeSettings

    version?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderAutoscaling:
    r"""
    Configuration required by cluster autoscaler to adjust
    the size of the node pool to the current cluster usage. Structure is documented below.

    Attributes
    ----------
    locationPolicy : str, default is Undefined, optional
        Location policy specifies the algorithm used when
        scaling-up the node pool. Location policy is supported only in 1.24.1+ clusters.
    maxNodeCount : float, default is Undefined, optional
        Maximum number of nodes per zone in the NodePool.
        Must be >= min_node_count. Cannot be used with total limits.
    minNodeCount : float, default is Undefined, optional
        Minimum number of nodes per zone in the NodePool.
        Must be >=0 and <= max_node_count. Cannot be used with total limits.
    totalMaxNodeCount : float, default is Undefined, optional
        Total maximum number of nodes in the NodePool.
        Must be >= total_min_node_count. Cannot be used with per zone limits.
        Total size limits are supported only in 1.24.1+ clusters.
    totalMinNodeCount : float, default is Undefined, optional
        Total minimum number of nodes in the NodePool.
        Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
        Total size limits are supported only in 1.24.1+ clusters.
    """


    locationPolicy?: str

    maxNodeCount?: float

    minNodeCount?: float

    totalMaxNodeCount?: float

    totalMinNodeCount?: float


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderManagement:
    r"""
    Node management configuration, wherein auto-repair and
    auto-upgrade is configured. Structure is documented below.

    Attributes
    ----------
    autoRepair : bool, default is Undefined, optional
        Whether the nodes will be automatically repaired. Enabled by default.
    autoUpgrade : bool, default is Undefined, optional
        Whether the nodes will be automatically upgraded. Enabled by default.
    """


    autoRepair?: bool

    autoUpgrade?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfig:
    r"""
    The network configuration of the pool. Such as
    configuration for Adding Pod IP address ranges) to the node pool. Or enabling private nodes. Structure is
    documented below

    Attributes
    ----------
    additionalNodeNetworkConfigs : [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfigAdditionalNodeNetworkConfigsItems0], default is Undefined, optional
        We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface.
        Structure is documented below
    additionalPodNetworkConfigs : [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfigAdditionalPodNetworkConfigsItems0], default is Undefined, optional
        We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node.
        Structure is documented below
    createPodRange : bool, default is Undefined, optional
        Whether to create a new range for pod IPs in this node pool. Defaults are provided for pod_range and pod_ipv4_cidr_block if they are not specified.
    enablePrivateNodes : bool, default is Undefined, optional
        Whether nodes have internal IP addresses only.
    networkPerformanceConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfigNetworkPerformanceConfig, default is Undefined, optional
        network performance config
    podCidrOverprovisionConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfigPodCidrOverprovisionConfig, default is Undefined, optional
        pod cidr overprovision config
    podIpv4CidrBlock : str, default is Undefined, optional
        The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
    podRange : str, default is Undefined, optional
        The ID of the secondary range for pod IPs. If create_pod_range is true, this ID is used for the new range. If create_pod_range is false, uses an existing secondary range with this ID.
    """


    additionalNodeNetworkConfigs?: [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfigAdditionalNodeNetworkConfigsItems0]

    additionalPodNetworkConfigs?: [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfigAdditionalPodNetworkConfigsItems0]

    createPodRange?: bool

    enablePrivateNodes?: bool

    networkPerformanceConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfigNetworkPerformanceConfig

    podCidrOverprovisionConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfigPodCidrOverprovisionConfig

    podIpv4CidrBlock?: str

    podRange?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfigAdditionalNodeNetworkConfigsItems0:
    r"""
    container gcp upbound io v1beta2 node pool status at provider network config additional node network configs items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        Name of the VPC where the additional interface belongs.
    subnetwork : str, default is Undefined, optional
        Name of the subnetwork where the additional pod network belongs.
    """


    network?: str

    subnetwork?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfigAdditionalPodNetworkConfigsItems0:
    r"""
    container gcp upbound io v1beta2 node pool status at provider network config additional pod network configs items0

    Attributes
    ----------
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods per node in this node pool.
        Note that this does not work on node pools which are "route-based" - that is, node
        pools belonging to clusters that do not have IP Aliasing enabled.
        See the official documentation
        for more information.
    secondaryPodRange : str, default is Undefined, optional
        The name of the secondary range on the subnet which provides IP address for this pod range.
    subnetwork : str, default is Undefined, optional
        Name of the subnetwork where the additional pod network belongs.
    """


    maxPodsPerNode?: float

    secondaryPodRange?: str

    subnetwork?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfigNetworkPerformanceConfig:
    r"""
    Network bandwidth tier configuration. Structure is documented below.

    Attributes
    ----------
    totalEgressBandwidthTier : str, default is Undefined, optional
        Specifies the total network bandwidth tier for the NodePool.
    """


    totalEgressBandwidthTier?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNetworkConfigPodCidrOverprovisionConfig:
    r"""
    Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited. Structure is documented below.

    Attributes
    ----------
    disabled : bool, default is Undefined, optional
        Whether pod cidr overprovision is disabled.
    """


    disabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfig:
    r"""
    Parameters used in creating the node pool. See
    google_container_cluster for schema.

    Attributes
    ----------
    advancedMachineFeatures : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigAdvancedMachineFeatures, default is Undefined, optional
        advanced machine features
    bootDiskKmsKey : str, default is Undefined, optional
        boot disk kms key
    confidentialNodes : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigConfidentialNodes, default is Undefined, optional
        confidential nodes
    containerdConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigContainerdConfig, default is Undefined, optional
        containerd config
    diskSizeGb : float, default is Undefined, optional
        disk size gb
    diskType : str, default is Undefined, optional
        disk type
    effectiveTaints : [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigEffectiveTaintsItems0], default is Undefined, optional
        effective taints
    enableConfidentialStorage : bool, default is Undefined, optional
        enable confidential storage
    ephemeralStorageLocalSsdConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigEphemeralStorageLocalSsdConfig, default is Undefined, optional
        ephemeral storage local ssd config
    fastSocket : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigFastSocket, default is Undefined, optional
        fast socket
    gcfsConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGcfsConfig, default is Undefined, optional
        gcfs config
    guestAccelerator : [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGuestAcceleratorItems0], default is Undefined, optional
        guest accelerator
    gvnic : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGvnic, default is Undefined, optional
        gvnic
    hostMaintenancePolicy : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigHostMaintenancePolicy, default is Undefined, optional
        host maintenance policy
    imageType : str, default is Undefined, optional
        image type
    kubeletConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigKubeletConfig, default is Undefined, optional
        kubelet config
    labels : {str:str}, default is Undefined, optional
        labels
    linuxNodeConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigLinuxNodeConfig, default is Undefined, optional
        linux node config
    localNvmeSsdBlockConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigLocalNvmeSsdBlockConfig, default is Undefined, optional
        local nvme ssd block config
    localSsdCount : float, default is Undefined, optional
        local ssd count
    loggingVariant : str, default is Undefined, optional
        logging variant
    machineType : str, default is Undefined, optional
        machine type
    metadata : {str:str}, default is Undefined, optional
        metadata
    minCpuPlatform : str, default is Undefined, optional
        min Cpu platform
    nodeGroup : str, default is Undefined, optional
        node group
    oauthScopes : [str], default is Undefined, optional
        oauth scopes
    preemptible : bool, default is Undefined, optional
        preemptible
    reservationAffinity : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigReservationAffinity, default is Undefined, optional
        reservation affinity
    resourceLabels : {str:str}, default is Undefined, optional
        resource labels
    resourceManagerTags : {str:str}, default is Undefined, optional
        resource manager tags
    secondaryBootDisks : [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigSecondaryBootDisksItems0], default is Undefined, optional
        secondary boot disks
    serviceAccount : str, default is Undefined, optional
        service account
    shieldedInstanceConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigShieldedInstanceConfig, default is Undefined, optional
        shielded instance config
    soleTenantConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigSoleTenantConfig, default is Undefined, optional
        sole tenant config
    spot : bool, default is Undefined, optional
        spot
    tags : [str], default is Undefined, optional
        tags
    taint : [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigTaintItems0], default is Undefined, optional
        taint
    workloadMetadataConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigWorkloadMetadataConfig, default is Undefined, optional
        workload metadata config
    """


    advancedMachineFeatures?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigAdvancedMachineFeatures

    bootDiskKmsKey?: str

    confidentialNodes?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigConfidentialNodes

    containerdConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigContainerdConfig

    diskSizeGb?: float

    diskType?: str

    effectiveTaints?: [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigEffectiveTaintsItems0]

    enableConfidentialStorage?: bool

    ephemeralStorageLocalSsdConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigEphemeralStorageLocalSsdConfig

    fastSocket?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigFastSocket

    gcfsConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGcfsConfig

    guestAccelerator?: [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGuestAcceleratorItems0]

    gvnic?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGvnic

    hostMaintenancePolicy?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigHostMaintenancePolicy

    imageType?: str

    kubeletConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigKubeletConfig

    labels?: {str:str}

    linuxNodeConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigLinuxNodeConfig

    localNvmeSsdBlockConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigLocalNvmeSsdBlockConfig

    localSsdCount?: float

    loggingVariant?: str

    machineType?: str

    metadata?: {str:str}

    minCpuPlatform?: str

    nodeGroup?: str

    oauthScopes?: [str]

    preemptible?: bool

    reservationAffinity?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigReservationAffinity

    resourceLabels?: {str:str}

    resourceManagerTags?: {str:str}

    secondaryBootDisks?: [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigSecondaryBootDisksItems0]

    serviceAccount?: str

    shieldedInstanceConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigShieldedInstanceConfig

    soleTenantConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigSoleTenantConfig

    spot?: bool

    tags?: [str]

    taint?: [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigTaintItems0]

    workloadMetadataConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigWorkloadMetadataConfig


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigAdvancedMachineFeatures:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config advanced machine features

    Attributes
    ----------
    enableNestedVirtualization : bool, default is Undefined, optional
        enable nested virtualization
    threadsPerCore : float, default is Undefined, optional
        threads per core
    """


    enableNestedVirtualization?: bool

    threadsPerCore?: float


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigConfidentialNodes:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config confidential nodes

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigContainerdConfig:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config containerd config

    Attributes
    ----------
    privateRegistryAccessConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigContainerdConfigPrivateRegistryAccessConfig, default is Undefined, optional
        private registry access config
    """


    privateRegistryAccessConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigContainerdConfigPrivateRegistryAccessConfig


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigContainerdConfigPrivateRegistryAccessConfig:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config containerd config private registry access config

    Attributes
    ----------
    certificateAuthorityDomainConfig : [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0], default is Undefined, optional
        certificate authority domain config
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    certificateAuthorityDomainConfig?: [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0]

    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config containerd config private registry access config certificate authority domain config items0

    Attributes
    ----------
    fqdns : [str], default is Undefined, optional
        fqdns
    gcpSecretManagerCertificateConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfig, default is Undefined, optional
        gcp secret manager certificate config
    """


    fqdns?: [str]

    gcpSecretManagerCertificateConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfig


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfig:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config containerd config private registry access config certificate authority domain config items0 gcp secret manager certificate config

    Attributes
    ----------
    secretUri : str, default is Undefined, optional
        secret Uri
    """


    secretUri?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigEffectiveTaintsItems0:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config effective taints items0

    Attributes
    ----------
    effect : str, default is Undefined, optional
        effect
    key : str, default is Undefined, optional
        name" as the key and specify the name of your reservation as its value.
    value : str, default is Undefined, optional
        value
    """


    effect?: str

    key?: str

    value?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigEphemeralStorageLocalSsdConfig:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config ephemeral storage local ssd config

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        local ssd count
    """


    localSsdCount?: float


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigFastSocket:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config fast socket

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGcfsConfig:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config gcfs config

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGuestAcceleratorItems0:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config guest accelerator items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        count
    gpuDriverInstallationConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGuestAcceleratorItems0GpuDriverInstallationConfig, default is Undefined, optional
        gpu driver installation config
    gpuPartitionSize : str, default is Undefined, optional
        gpu partition size
    gpuSharingConfig : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGuestAcceleratorItems0GpuSharingConfig, default is Undefined, optional
        gpu sharing config
    $type : str, default is Undefined, optional
        The type of the policy. Supports a single value: COMPACT.
        Specifying COMPACT placement policy type places node pool's nodes in a closer
        physical proximity in order to reduce network latency between nodes.
    """


    count?: float

    gpuDriverInstallationConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGuestAcceleratorItems0GpuDriverInstallationConfig

    gpuPartitionSize?: str

    gpuSharingConfig?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGuestAcceleratorItems0GpuSharingConfig

    $type?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGuestAcceleratorItems0GpuDriverInstallationConfig:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config guest accelerator items0 gpu driver installation config

    Attributes
    ----------
    gpuDriverVersion : str, default is Undefined, optional
        The Kubernetes version for the nodes in this pool. Note that if this field
        and auto_upgrade are both specified, they will fight each other for what the node version should
        be, so setting both is highly discouraged.
    """


    gpuDriverVersion?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGuestAcceleratorItems0GpuSharingConfig:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config guest accelerator items0 gpu sharing config

    Attributes
    ----------
    gpuSharingStrategy : str, default is Undefined, optional
        gpu sharing strategy
    maxSharedClientsPerGpu : float, default is Undefined, optional
        max shared clients per gpu
    """


    gpuSharingStrategy?: str

    maxSharedClientsPerGpu?: float


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigGvnic:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config gvnic

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigHostMaintenancePolicy:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config host maintenance policy

    Attributes
    ----------
    maintenanceInterval : str, default is Undefined, optional
        maintenance interval
    """


    maintenanceInterval?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigKubeletConfig:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config kubelet config

    Attributes
    ----------
    cpuCfsQuota : bool, default is Undefined, optional
        cpu cfs quota
    cpuCfsQuotaPeriod : str, default is Undefined, optional
        cpu cfs quota period
    cpuManagerPolicy : str, default is Undefined, optional
        cpu manager policy
    insecureKubeletReadonlyPortEnabled : str, default is Undefined, optional
        insecure kubelet readonly port enabled
    podPidsLimit : float, default is Undefined, optional
        pod pids limit
    """


    cpuCfsQuota?: bool

    cpuCfsQuotaPeriod?: str

    cpuManagerPolicy?: str

    insecureKubeletReadonlyPortEnabled?: str

    podPidsLimit?: float


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigLinuxNodeConfig:
    r"""
    Parameters used in creating the node pool. See
    google_container_cluster for schema.

    Attributes
    ----------
    cgroupMode : str, default is Undefined, optional
        cgroup mode
    sysctls : {str:str}, default is Undefined, optional
        sysctls
    """


    cgroupMode?: str

    sysctls?: {str:str}


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigLocalNvmeSsdBlockConfig:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config local nvme ssd block config

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        local ssd count
    """


    localSsdCount?: float


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigReservationAffinity:
    r"""
    The configuration of the desired reservation which instances could take capacity from.
    Structure is documented below.

    Attributes
    ----------
    consumeReservationType : str, default is Undefined, optional
        The type of reservation consumption
        Accepted values are:
    key : str, default is Undefined, optional
        name" as the key and specify the name of your reservation as its value.
    values : [str], default is Undefined, optional
        name"
    """


    consumeReservationType?: str

    key?: str

    values?: [str]


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigSecondaryBootDisksItems0:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config secondary boot disks items0

    Attributes
    ----------
    diskImage : str, default is Undefined, optional
        disk image
    mode : str, default is Undefined, optional
        mode
    """


    diskImage?: str

    mode?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigShieldedInstanceConfig:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config shielded instance config

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        enable integrity monitoring
    enableSecureBoot : bool, default is Undefined, optional
        enable secure boot
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigSoleTenantConfig:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config sole tenant config

    Attributes
    ----------
    nodeAffinity : [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigSoleTenantConfigNodeAffinityItems0], default is Undefined, optional
        node affinity
    """


    nodeAffinity?: [ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigSoleTenantConfigNodeAffinityItems0]


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigSoleTenantConfigNodeAffinityItems0:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config sole tenant config node affinity items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        name" as the key and specify the name of your reservation as its value.
    operator : str, default is Undefined, optional
        operator
    values : [str], default is Undefined, optional
        name"
    """


    key?: str

    operator?: str

    values?: [str]


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigTaintItems0:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config taint items0

    Attributes
    ----------
    effect : str, default is Undefined, optional
        effect
    key : str, default is Undefined, optional
        name" as the key and specify the name of your reservation as its value.
    value : str, default is Undefined, optional
        value
    """


    effect?: str

    key?: str

    value?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderNodeConfigWorkloadMetadataConfig:
    r"""
    container gcp upbound io v1beta2 node pool status at provider node config workload metadata config

    Attributes
    ----------
    mode : str, default is Undefined, optional
        mode
    """


    mode?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderPlacementPolicy:
    r"""
    Specifies a custom placement policy for the
    nodes.

    Attributes
    ----------
    policyName : str, default is Undefined, optional
        If set, refers to the name of a custom resource policy supplied by the user.
        The resource policy must be in the same project and region as the node pool.
        If not found, InvalidArgument error is returned.
    tpuTopology : str, default is Undefined, optional
        The TPU placement topology for pod slice node pool.
    $type : str, default is Undefined, optional
        The type of the policy. Supports a single value: COMPACT.
        Specifying COMPACT placement policy type places node pool's nodes in a closer
        physical proximity in order to reduce network latency between nodes.
    """


    policyName?: str

    tpuTopology?: str

    $type?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderQueuedProvisioning:
    r"""
    Specifies node pool-level settings of queued provisioning.
    Structure is documented below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderUpgradeSettings:
    r"""
    Specify node upgrade settings to change how GKE upgrades nodes.
    The maximum number of nodes upgraded simultaneously is limited to 20. Structure is documented below.

    Attributes
    ----------
    blueGreenSettings : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderUpgradeSettingsBlueGreenSettings, default is Undefined, optional
        blue green settings
    maxSurge : float, default is Undefined, optional
        The number of additional nodes that can be added to the node pool during
        an upgrade. Increasing max_surge raises the number of nodes that can be upgraded simultaneously.
        Can be set to 0 or greater.
    maxUnavailable : float, default is Undefined, optional
        The number of nodes that can be simultaneously unavailable during
        an upgrade. Increasing max_unavailable raises the number of nodes that can be upgraded in
        parallel. Can be set to 0 or greater.
    strategy : str, default is Undefined, optional
        (Default SURGE) The upgrade strategy to be used for upgrading the nodes.
    """


    blueGreenSettings?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderUpgradeSettingsBlueGreenSettings

    maxSurge?: float

    maxUnavailable?: float

    strategy?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderUpgradeSettingsBlueGreenSettings:
    r"""
    The settings to adjust blue green upgrades.
    Structure is documented below

    Attributes
    ----------
    nodePoolSoakDuration : str, default is Undefined, optional
        Time needed after draining the entire blue pool.
        After this period, the blue pool will be cleaned up.
    standardRolloutPolicy : ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy, default is Undefined, optional
        standard rollout policy
    """


    nodePoolSoakDuration?: str

    standardRolloutPolicy?: ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy


schema ContainerGcpUpboundIoV1beta2NodePoolStatusAtProviderUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy:
    r"""
    Specifies the standard policy settings for blue-green upgrades.

    Attributes
    ----------
    batchNodeCount : float, default is Undefined, optional
        Number of blue nodes to drain in a batch.
    batchPercentage : float, default is Undefined, optional
        Percentage of the blue pool nodes to drain in a batch.
    batchSoakDuration : str, default is Undefined, optional
        (Optionial) Soak time after each batch gets drained.
    """


    batchNodeCount?: float

    batchPercentage?: float

    batchSoakDuration?: str


schema ContainerGcpUpboundIoV1beta2NodePoolStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


