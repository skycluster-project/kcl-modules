"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NodePool:
    r"""
    NodePool is the Schema for the NodePools API. Manages a GKE NodePool resource.

    Attributes
    ----------
    apiVersion : str, default is "container.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NodePool", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ContainerGcpUpboundIoV1beta1NodePoolSpec, default is Undefined, required
        spec
    status : ContainerGcpUpboundIoV1beta1NodePoolStatus, default is Undefined, optional
        status
    """


    apiVersion: "container.gcp.upbound.io/v1beta1" = "container.gcp.upbound.io/v1beta1"

    kind: "NodePool" = "NodePool"

    metadata?: v1.ObjectMeta

    spec: ContainerGcpUpboundIoV1beta1NodePoolSpec

    status?: ContainerGcpUpboundIoV1beta1NodePoolStatus


schema ContainerGcpUpboundIoV1beta1NodePoolSpec:
    r"""
    NodePoolSpec defines the desired state of NodePool

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ContainerGcpUpboundIoV1beta1NodePoolSpecForProvider, default is Undefined, required
        for provider
    initProvider : ContainerGcpUpboundIoV1beta1NodePoolSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ContainerGcpUpboundIoV1beta1NodePoolSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ContainerGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ContainerGcpUpboundIoV1beta1NodePoolSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ContainerGcpUpboundIoV1beta1NodePoolSpecForProvider

    initProvider?: ContainerGcpUpboundIoV1beta1NodePoolSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ContainerGcpUpboundIoV1beta1NodePoolSpecProviderConfigRef

    publishConnectionDetailsTo?: ContainerGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ContainerGcpUpboundIoV1beta1NodePoolSpecWriteConnectionSecretToRef


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProvider:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider

    Attributes
    ----------
    autoscaling : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderAutoscalingItems0], default is Undefined, optional
        Configuration required by cluster autoscaler to adjust
        the size of the node pool to the current cluster usage. Structure is documented below.
    cluster : str, default is Undefined, optional
        The cluster to create the node pool for. Cluster must be present in location provided for clusters. May be specified in the format projects/{{project}}/locations/{{location}}/clusters/{{cluster}} or as just the name of the cluster.
    clusterRef : ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderClusterRef, default is Undefined, optional
        cluster ref
    clusterSelector : ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderClusterSelector, default is Undefined, optional
        cluster selector
    initialNodeCount : float, default is Undefined, optional
        The initial number of nodes for the pool. In
        regional or multi-zonal clusters, this is the number of nodes per zone. Changing
        this will force recreation of the resource.  If you don't
        need this value, don't set it.  If you do need it, you can use a lifecycle block to
        ignore subsequent changes to this field.
    location : str, default is Undefined, optional
        The location (region or zone) of the cluster.
    management : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderManagementItems0], default is Undefined, optional
        Node management configuration, wherein auto-repair and
        auto-upgrade is configured. Structure is documented below.
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods per node in this node pool.
        Note that this does not work on node pools which are "route-based" - that is, node
        pools belonging to clusters that do not have IP Aliasing enabled.
        See the official documentation
        for more information.
    networkConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0], default is Undefined, optional
        The network configuration of the pool. Such as
        configuration for Adding Pod IP address ranges) to the node pool. Or enabling private nodes. Structure is
        documented below
    nodeConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0], default is Undefined, optional
        Parameters used in creating the node pool. See
        google_container_cluster for schema.
    nodeCount : float, default is Undefined, optional
        The number of nodes per instance group. This field can be used to
        update the number of nodes per instance group but should not be used alongside autoscaling.
    nodeLocations : [str], default is Undefined, optional
        The list of zones in which the node pool's nodes should be located. Nodes must
        be in the region of their regional cluster or in the same region as their
        cluster's zone for zonal clusters. If unspecified, the cluster-level
        node_locations will be used.
    placementPolicy : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderPlacementPolicyItems0], default is Undefined, optional
        Specifies a custom placement policy for the
        nodes.
    project : str, default is Undefined, optional
        The ID of the project in which to create the node pool. If blank,
        the provider-configured project will be used.
    queuedProvisioning : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderQueuedProvisioningItems0], default is Undefined, optional
        Specifies node pool-level settings of queued provisioning.
        Structure is documented below.
    upgradeSettings : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderUpgradeSettingsItems0], default is Undefined, optional
        Specify node upgrade settings to change how GKE upgrades nodes.
        The maximum number of nodes upgraded simultaneously is limited to 20. Structure is documented below.
    version : str, default is Undefined, optional
        The Kubernetes version for the nodes in this pool. Note that if this field
        and auto_upgrade are both specified, they will fight each other for what the node version should
        be, so setting both is highly discouraged.
    """


    autoscaling?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderAutoscalingItems0]

    cluster?: str

    clusterRef?: ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderClusterRef

    clusterSelector?: ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderClusterSelector

    initialNodeCount?: float

    location?: str

    management?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderManagementItems0]

    maxPodsPerNode?: float

    networkConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0]

    nodeConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0]

    nodeCount?: float

    nodeLocations?: [str]

    placementPolicy?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderPlacementPolicyItems0]

    project?: str

    queuedProvisioning?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderQueuedProvisioningItems0]

    upgradeSettings?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderUpgradeSettingsItems0]

    version?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderAutoscalingItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider autoscaling items0

    Attributes
    ----------
    locationPolicy : str, default is Undefined, optional
        Location policy specifies the algorithm used when
        scaling-up the node pool. Location policy is supported only in 1.24.1+ clusters.
    maxNodeCount : float, default is Undefined, optional
        Maximum number of nodes per zone in the NodePool.
        Must be >= min_node_count. Cannot be used with total limits.
    minNodeCount : float, default is Undefined, optional
        Minimum number of nodes per zone in the NodePool.
        Must be >=0 and <= max_node_count. Cannot be used with total limits.
    totalMaxNodeCount : float, default is Undefined, optional
        Total maximum number of nodes in the NodePool.
        Must be >= total_min_node_count. Cannot be used with per zone limits.
        Total size limits are supported only in 1.24.1+ clusters.
    totalMinNodeCount : float, default is Undefined, optional
        Total minimum number of nodes in the NodePool.
        Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
        Total size limits are supported only in 1.24.1+ clusters.
    """


    locationPolicy?: str

    maxNodeCount?: float

    minNodeCount?: float

    totalMaxNodeCount?: float

    totalMinNodeCount?: float


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderClusterRef:
    r"""
    Reference to a Cluster in container to populate cluster.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderClusterRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderClusterRefPolicy


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderClusterRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderClusterSelector:
    r"""
    Selector for a Cluster in container to populate cluster.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderClusterSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderClusterSelectorPolicy


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderClusterSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderManagementItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider management items0

    Attributes
    ----------
    autoRepair : bool, default is Undefined, optional
        Whether the nodes will be automatically repaired. Enabled by default.
    autoUpgrade : bool, default is Undefined, optional
        Whether the nodes will be automatically upgraded. Enabled by default.
    """


    autoRepair?: bool

    autoUpgrade?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider network config items0

    Attributes
    ----------
    additionalNodeNetworkConfigs : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0AdditionalNodeNetworkConfigsItems0], default is Undefined, optional
        We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface.
        Structure is documented below
    additionalPodNetworkConfigs : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0AdditionalPodNetworkConfigsItems0], default is Undefined, optional
        We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node.
        Structure is documented below
    createPodRange : bool, default is Undefined, optional
        Whether to create a new range for pod IPs in this node pool. Defaults are provided for pod_range and pod_ipv4_cidr_block if they are not specified.
    enablePrivateNodes : bool, default is Undefined, optional
        Whether nodes have internal IP addresses only.
    networkPerformanceConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0NetworkPerformanceConfigItems0], default is Undefined, optional
        network performance config
    podCidrOverprovisionConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0PodCidrOverprovisionConfigItems0], default is Undefined, optional
        pod cidr overprovision config
    podIpv4CidrBlock : str, default is Undefined, optional
        The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
    podRange : str, default is Undefined, optional
        The ID of the secondary range for pod IPs. If create_pod_range is true, this ID is used for the new range. If create_pod_range is false, uses an existing secondary range with this ID.
    """


    additionalNodeNetworkConfigs?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0AdditionalNodeNetworkConfigsItems0]

    additionalPodNetworkConfigs?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0AdditionalPodNetworkConfigsItems0]

    createPodRange?: bool

    enablePrivateNodes?: bool

    networkPerformanceConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0NetworkPerformanceConfigItems0]

    podCidrOverprovisionConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0PodCidrOverprovisionConfigItems0]

    podIpv4CidrBlock?: str

    podRange?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0AdditionalNodeNetworkConfigsItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider network config items0 additional node network configs items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        Name of the VPC where the additional interface belongs.
    subnetwork : str, default is Undefined, optional
        Name of the subnetwork where the additional pod network belongs.
    """


    network?: str

    subnetwork?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0AdditionalPodNetworkConfigsItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider network config items0 additional pod network configs items0

    Attributes
    ----------
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods per node in this node pool.
        Note that this does not work on node pools which are "route-based" - that is, node
        pools belonging to clusters that do not have IP Aliasing enabled.
        See the official documentation
        for more information.
    secondaryPodRange : str, default is Undefined, optional
        The name of the secondary range on the subnet which provides IP address for this pod range.
    subnetwork : str, default is Undefined, optional
        Name of the subnetwork where the additional pod network belongs.
    """


    maxPodsPerNode?: float

    secondaryPodRange?: str

    subnetwork?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0NetworkPerformanceConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider network config items0 network performance config items0

    Attributes
    ----------
    totalEgressBandwidthTier : str, default is Undefined, optional
        total egress bandwidth tier
    """


    totalEgressBandwidthTier?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNetworkConfigItems0PodCidrOverprovisionConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider network config items0 pod cidr overprovision config items0

    Attributes
    ----------
    disabled : bool, default is Undefined, optional
        disabled
    """


    disabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0

    Attributes
    ----------
    advancedMachineFeatures : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0AdvancedMachineFeaturesItems0], default is Undefined, optional
        advanced machine features
    bootDiskKmsKey : str, default is Undefined, optional
        boot disk kms key
    confidentialNodes : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ConfidentialNodesItems0], default is Undefined, optional
        Configuration for Confidential Nodes feature. Structure is documented below.
    containerdConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ContainerdConfigItems0], default is Undefined, optional
        containerd config
    diskSizeGb : float, default is Undefined, optional
        disk size gb
    diskType : str, default is Undefined, optional
        disk type
    enableConfidentialStorage : bool, default is Undefined, optional
        enable confidential storage
    ephemeralStorageLocalSsdConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0EphemeralStorageLocalSsdConfigItems0], default is Undefined, optional
        ephemeral storage local ssd config
    fastSocket : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0FastSocketItems0], default is Undefined, optional
        fast socket
    gcfsConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GcfsConfigItems0], default is Undefined, optional
        gcfs config
    guestAccelerator : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GuestAcceleratorItems0], default is Undefined, optional
        guest accelerator
    gvnic : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GvnicItems0], default is Undefined, optional
        gvnic
    hostMaintenancePolicy : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0HostMaintenancePolicyItems0], default is Undefined, optional
        host maintenance policy
    imageType : str, default is Undefined, optional
        image type
    index : str, default is "0", optional
        This is an injected field with a default value for being able to merge items of the parent object list.
    kubeletConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0KubeletConfigItems0], default is Undefined, optional
        kubelet config
    labels : {str:str}, default is Undefined, optional
        labels
    linuxNodeConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0LinuxNodeConfigItems0], default is Undefined, optional
        Parameters used in creating the node pool. See
        google_container_cluster for schema.
    localNvmeSsdBlockConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0LocalNvmeSsdBlockConfigItems0], default is Undefined, optional
        local nvme ssd block config
    localSsdCount : float, default is Undefined, optional
        local ssd count
    loggingVariant : str, default is Undefined, optional
        logging variant
    machineType : str, default is Undefined, optional
        machine type
    metadata : {str:str}, default is Undefined, optional
        metadata
    minCpuPlatform : str, default is Undefined, optional
        min Cpu platform
    nodeGroup : str, default is Undefined, optional
        node group
    oauthScopes : [str], default is Undefined, optional
        oauth scopes
    preemptible : bool, default is Undefined, optional
        preemptible
    reservationAffinity : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ReservationAffinityItems0], default is Undefined, optional
        reservation affinity
    resourceLabels : {str:str}, default is Undefined, optional
        resource labels
    resourceManagerTags : {str:str}, default is Undefined, optional
        resource manager tags
    secondaryBootDisks : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0SecondaryBootDisksItems0], default is Undefined, optional
        secondary boot disks
    serviceAccount : str, default is Undefined, optional
        service account
    serviceAccountRef : ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ServiceAccountRef, default is Undefined, optional
        service account ref
    serviceAccountSelector : ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ServiceAccountSelector, default is Undefined, optional
        service account selector
    shieldedInstanceConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ShieldedInstanceConfigItems0], default is Undefined, optional
        shielded instance config
    soleTenantConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0SoleTenantConfigItems0], default is Undefined, optional
        sole tenant config
    spot : bool, default is Undefined, optional
        spot
    tags : [str], default is Undefined, optional
        tags
    taint : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0TaintItems0], default is Undefined, optional
        taint
    workloadMetadataConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0WorkloadMetadataConfigItems0], default is Undefined, optional
        workload metadata config
    """


    advancedMachineFeatures?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0AdvancedMachineFeaturesItems0]

    bootDiskKmsKey?: str

    confidentialNodes?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ConfidentialNodesItems0]

    containerdConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ContainerdConfigItems0]

    diskSizeGb?: float

    diskType?: str

    enableConfidentialStorage?: bool

    ephemeralStorageLocalSsdConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0EphemeralStorageLocalSsdConfigItems0]

    fastSocket?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0FastSocketItems0]

    gcfsConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GcfsConfigItems0]

    guestAccelerator?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GuestAcceleratorItems0]

    gvnic?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GvnicItems0]

    hostMaintenancePolicy?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0HostMaintenancePolicyItems0]

    imageType?: str

    index?: str = "0"

    kubeletConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0KubeletConfigItems0]

    labels?: {str:str}

    linuxNodeConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0LinuxNodeConfigItems0]

    localNvmeSsdBlockConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0LocalNvmeSsdBlockConfigItems0]

    localSsdCount?: float

    loggingVariant?: str

    machineType?: str

    metadata?: {str:str}

    minCpuPlatform?: str

    nodeGroup?: str

    oauthScopes?: [str]

    preemptible?: bool

    reservationAffinity?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ReservationAffinityItems0]

    resourceLabels?: {str:str}

    resourceManagerTags?: {str:str}

    secondaryBootDisks?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0SecondaryBootDisksItems0]

    serviceAccount?: str

    serviceAccountRef?: ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ServiceAccountRef

    serviceAccountSelector?: ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ServiceAccountSelector

    shieldedInstanceConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ShieldedInstanceConfigItems0]

    soleTenantConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0SoleTenantConfigItems0]

    spot?: bool

    tags?: [str]

    taint?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0TaintItems0]

    workloadMetadataConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0WorkloadMetadataConfigItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0AdvancedMachineFeaturesItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 advanced machine features items0

    Attributes
    ----------
    enableNestedVirtualization : bool, default is Undefined, optional
        enable nested virtualization
    threadsPerCore : float, default is Undefined, optional
        threads per core
    """


    enableNestedVirtualization?: bool

    threadsPerCore?: float


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ConfidentialNodesItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 confidential nodes items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ContainerdConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 containerd config items0

    Attributes
    ----------
    privateRegistryAccessConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0], default is Undefined, optional
        private registry access config
    """


    privateRegistryAccessConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 containerd config items0 private registry access config items0

    Attributes
    ----------
    certificateAuthorityDomainConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0], default is Undefined, optional
        certificate authority domain config
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    certificateAuthorityDomainConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0]

    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 containerd config items0 private registry access config items0 certificate authority domain config items0

    Attributes
    ----------
    fqdns : [str], default is Undefined, optional
        fqdns
    gcpSecretManagerCertificateConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfigItems0], default is Undefined, optional
        gcp secret manager certificate config
    """


    fqdns?: [str]

    gcpSecretManagerCertificateConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfigItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 containerd config items0 private registry access config items0 certificate authority domain config items0 gcp secret manager certificate config items0

    Attributes
    ----------
    secretUri : str, default is Undefined, optional
        secret Uri
    """


    secretUri?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0EphemeralStorageLocalSsdConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 ephemeral storage local ssd config items0

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        local ssd count
    """


    localSsdCount?: float


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0FastSocketItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 fast socket items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GcfsConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 gcfs config items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GuestAcceleratorItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 guest accelerator items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        count
    gpuDriverInstallationConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GuestAcceleratorItems0GpuDriverInstallationConfigItems0], default is Undefined, optional
        gpu driver installation config
    gpuPartitionSize : str, default is Undefined, optional
        gpu partition size
    gpuSharingConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GuestAcceleratorItems0GpuSharingConfigItems0], default is Undefined, optional
        gpu sharing config
    $type : str, default is Undefined, optional
        The type of the policy. Supports a single value: COMPACT.
        Specifying COMPACT placement policy type places node pool's nodes in a closer
        physical proximity in order to reduce network latency between nodes.
    """


    count?: float

    gpuDriverInstallationConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GuestAcceleratorItems0GpuDriverInstallationConfigItems0]

    gpuPartitionSize?: str

    gpuSharingConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GuestAcceleratorItems0GpuSharingConfigItems0]

    $type?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GuestAcceleratorItems0GpuDriverInstallationConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 guest accelerator items0 gpu driver installation config items0

    Attributes
    ----------
    gpuDriverVersion : str, default is Undefined, optional
        The Kubernetes version for the nodes in this pool. Note that if this field
        and auto_upgrade are both specified, they will fight each other for what the node version should
        be, so setting both is highly discouraged.
    """


    gpuDriverVersion?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GuestAcceleratorItems0GpuSharingConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 guest accelerator items0 gpu sharing config items0

    Attributes
    ----------
    gpuSharingStrategy : str, default is Undefined, optional
        gpu sharing strategy
    maxSharedClientsPerGpu : float, default is Undefined, optional
        max shared clients per gpu
    """


    gpuSharingStrategy?: str

    maxSharedClientsPerGpu?: float


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0GvnicItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 gvnic items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0HostMaintenancePolicyItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 host maintenance policy items0

    Attributes
    ----------
    maintenanceInterval : str, default is Undefined, optional
        maintenance interval
    """


    maintenanceInterval?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0KubeletConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 kubelet config items0

    Attributes
    ----------
    cpuCfsQuota : bool, default is Undefined, optional
        cpu cfs quota
    cpuCfsQuotaPeriod : str, default is Undefined, optional
        cpu cfs quota period
    cpuManagerPolicy : str, default is Undefined, optional
        cpu manager policy
    insecureKubeletReadonlyPortEnabled : str, default is Undefined, optional
        insecure kubelet readonly port enabled
    podPidsLimit : float, default is Undefined, optional
        pod pids limit
    """


    cpuCfsQuota?: bool

    cpuCfsQuotaPeriod?: str

    cpuManagerPolicy?: str

    insecureKubeletReadonlyPortEnabled?: str

    podPidsLimit?: float


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0LinuxNodeConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 linux node config items0

    Attributes
    ----------
    cgroupMode : str, default is Undefined, optional
        cgroup mode
    sysctls : {str:str}, default is Undefined, optional
        sysctls
    """


    cgroupMode?: str

    sysctls?: {str:str}


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0LocalNvmeSsdBlockConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 local nvme ssd block config items0

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        local ssd count
    """


    localSsdCount?: float


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ReservationAffinityItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 reservation affinity items0

    Attributes
    ----------
    consumeReservationType : str, default is Undefined, optional
        consume reservation type
    key : str, default is Undefined, optional
        key
    values : [str], default is Undefined, optional
        values
    """


    consumeReservationType?: str

    key?: str

    values?: [str]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0SecondaryBootDisksItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 secondary boot disks items0

    Attributes
    ----------
    diskImage : str, default is Undefined, optional
        disk image
    mode : str, default is Undefined, optional
        mode
    """


    diskImage?: str

    mode?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ServiceAccountRef:
    r"""
    Reference to a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ServiceAccountRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ServiceAccountRefPolicy


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ServiceAccountRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ServiceAccountSelector:
    r"""
    Selector for a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ServiceAccountSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ServiceAccountSelectorPolicy


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ServiceAccountSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0ShieldedInstanceConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 shielded instance config items0

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        enable integrity monitoring
    enableSecureBoot : bool, default is Undefined, optional
        enable secure boot
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0SoleTenantConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 sole tenant config items0

    Attributes
    ----------
    nodeAffinity : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0SoleTenantConfigItems0NodeAffinityItems0], default is Undefined, optional
        node affinity
    """


    nodeAffinity?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0SoleTenantConfigItems0NodeAffinityItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0SoleTenantConfigItems0NodeAffinityItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 sole tenant config items0 node affinity items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    operator : str, default is Undefined, optional
        operator
    values : [str], default is Undefined, optional
        values
    """


    key?: str

    operator?: str

    values?: [str]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0TaintItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 taint items0

    Attributes
    ----------
    effect : str, default is Undefined, optional
        effect
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    effect?: str

    key?: str

    value?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderNodeConfigItems0WorkloadMetadataConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider node config items0 workload metadata config items0

    Attributes
    ----------
    mode : str, default is Undefined, optional
        mode
    """


    mode?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderPlacementPolicyItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider placement policy items0

    Attributes
    ----------
    policyName : str, default is Undefined, optional
        If set, refers to the name of a custom resource policy supplied by the user.
        The resource policy must be in the same project and region as the node pool.
        If not found, InvalidArgument error is returned.
    tpuTopology : str, default is Undefined, optional
        The TPU placement topology for pod slice node pool.
    $type : str, default is Undefined, optional
        The type of the policy. Supports a single value: COMPACT.
        Specifying COMPACT placement policy type places node pool's nodes in a closer
        physical proximity in order to reduce network latency between nodes.
    """


    policyName?: str

    tpuTopology?: str

    $type?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderQueuedProvisioningItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider queued provisioning items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderUpgradeSettingsItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider upgrade settings items0

    Attributes
    ----------
    blueGreenSettings : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderUpgradeSettingsItems0BlueGreenSettingsItems0], default is Undefined, optional
        The settings to adjust blue green upgrades.
        Structure is documented below
    maxSurge : float, default is Undefined, optional
        The number of additional nodes that can be added to the node pool during
        an upgrade. Increasing max_surge raises the number of nodes that can be upgraded simultaneously.
        Can be set to 0 or greater.
    maxUnavailable : float, default is Undefined, optional
        The number of nodes that can be simultaneously unavailable during
        an upgrade. Increasing max_unavailable raises the number of nodes that can be upgraded in
        parallel. Can be set to 0 or greater.
    strategy : str, default is Undefined, optional
        (Default SURGE) The upgrade stragey to be used for upgrading the nodes.
    """


    blueGreenSettings?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderUpgradeSettingsItems0BlueGreenSettingsItems0]

    maxSurge?: float

    maxUnavailable?: float

    strategy?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderUpgradeSettingsItems0BlueGreenSettingsItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider upgrade settings items0 blue green settings items0

    Attributes
    ----------
    nodePoolSoakDuration : str, default is Undefined, optional
        Time needed after draining the entire blue pool.
        After this period, the blue pool will be cleaned up.
    standardRolloutPolicy : [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderUpgradeSettingsItems0BlueGreenSettingsItems0StandardRolloutPolicyItems0], default is Undefined, optional
        Specifies the standard policy settings for blue-green upgrades.
    """


    nodePoolSoakDuration?: str

    standardRolloutPolicy?: [ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderUpgradeSettingsItems0BlueGreenSettingsItems0StandardRolloutPolicyItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecForProviderUpgradeSettingsItems0BlueGreenSettingsItems0StandardRolloutPolicyItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec for provider upgrade settings items0 blue green settings items0 standard rollout policy items0

    Attributes
    ----------
    batchNodeCount : float, default is Undefined, optional
        Number of blue nodes to drain in a batch.
    batchPercentage : float, default is Undefined, optional
        Percentage of the blue pool nodes to drain in a batch.
    batchSoakDuration : str, default is Undefined, optional
        (Optionial) Soak time after each batch gets drained.
    """


    batchNodeCount?: float

    batchPercentage?: float

    batchSoakDuration?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    autoscaling : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderAutoscalingItems0], default is Undefined, optional
        Configuration required by cluster autoscaler to adjust
        the size of the node pool to the current cluster usage. Structure is documented below.
    initialNodeCount : float, default is Undefined, optional
        The initial number of nodes for the pool. In
        regional or multi-zonal clusters, this is the number of nodes per zone. Changing
        this will force recreation of the resource.  If you don't
        need this value, don't set it.  If you do need it, you can use a lifecycle block to
        ignore subsequent changes to this field.
    management : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderManagementItems0], default is Undefined, optional
        Node management configuration, wherein auto-repair and
        auto-upgrade is configured. Structure is documented below.
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods per node in this node pool.
        Note that this does not work on node pools which are "route-based" - that is, node
        pools belonging to clusters that do not have IP Aliasing enabled.
        See the official documentation
        for more information.
    networkConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0], default is Undefined, optional
        The network configuration of the pool. Such as
        configuration for Adding Pod IP address ranges) to the node pool. Or enabling private nodes. Structure is
        documented below
    nodeConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0], default is Undefined, optional
        Parameters used in creating the node pool. See
        google_container_cluster for schema.
    nodeCount : float, default is Undefined, optional
        The number of nodes per instance group. This field can be used to
        update the number of nodes per instance group but should not be used alongside autoscaling.
    nodeLocations : [str], default is Undefined, optional
        The list of zones in which the node pool's nodes should be located. Nodes must
        be in the region of their regional cluster or in the same region as their
        cluster's zone for zonal clusters. If unspecified, the cluster-level
        node_locations will be used.
    placementPolicy : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderPlacementPolicyItems0], default is Undefined, optional
        Specifies a custom placement policy for the
        nodes.
    project : str, default is Undefined, optional
        The ID of the project in which to create the node pool. If blank,
        the provider-configured project will be used.
    queuedProvisioning : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderQueuedProvisioningItems0], default is Undefined, optional
        Specifies node pool-level settings of queued provisioning.
        Structure is documented below.
    upgradeSettings : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderUpgradeSettingsItems0], default is Undefined, optional
        Specify node upgrade settings to change how GKE upgrades nodes.
        The maximum number of nodes upgraded simultaneously is limited to 20. Structure is documented below.
    version : str, default is Undefined, optional
        The Kubernetes version for the nodes in this pool. Note that if this field
        and auto_upgrade are both specified, they will fight each other for what the node version should
        be, so setting both is highly discouraged.
    """


    autoscaling?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderAutoscalingItems0]

    initialNodeCount?: float

    management?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderManagementItems0]

    maxPodsPerNode?: float

    networkConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0]

    nodeConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0]

    nodeCount?: float

    nodeLocations?: [str]

    placementPolicy?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderPlacementPolicyItems0]

    project?: str

    queuedProvisioning?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderQueuedProvisioningItems0]

    upgradeSettings?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderUpgradeSettingsItems0]

    version?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderAutoscalingItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider autoscaling items0

    Attributes
    ----------
    locationPolicy : str, default is Undefined, optional
        Location policy specifies the algorithm used when
        scaling-up the node pool. Location policy is supported only in 1.24.1+ clusters.
    maxNodeCount : float, default is Undefined, optional
        Maximum number of nodes per zone in the NodePool.
        Must be >= min_node_count. Cannot be used with total limits.
    minNodeCount : float, default is Undefined, optional
        Minimum number of nodes per zone in the NodePool.
        Must be >=0 and <= max_node_count. Cannot be used with total limits.
    totalMaxNodeCount : float, default is Undefined, optional
        Total maximum number of nodes in the NodePool.
        Must be >= total_min_node_count. Cannot be used with per zone limits.
        Total size limits are supported only in 1.24.1+ clusters.
    totalMinNodeCount : float, default is Undefined, optional
        Total minimum number of nodes in the NodePool.
        Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
        Total size limits are supported only in 1.24.1+ clusters.
    """


    locationPolicy?: str

    maxNodeCount?: float

    minNodeCount?: float

    totalMaxNodeCount?: float

    totalMinNodeCount?: float


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderManagementItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider management items0

    Attributes
    ----------
    autoRepair : bool, default is Undefined, optional
        Whether the nodes will be automatically repaired. Enabled by default.
    autoUpgrade : bool, default is Undefined, optional
        Whether the nodes will be automatically upgraded. Enabled by default.
    """


    autoRepair?: bool

    autoUpgrade?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider network config items0

    Attributes
    ----------
    additionalNodeNetworkConfigs : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0AdditionalNodeNetworkConfigsItems0], default is Undefined, optional
        We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface.
        Structure is documented below
    additionalPodNetworkConfigs : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0AdditionalPodNetworkConfigsItems0], default is Undefined, optional
        We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node.
        Structure is documented below
    createPodRange : bool, default is Undefined, optional
        Whether to create a new range for pod IPs in this node pool. Defaults are provided for pod_range and pod_ipv4_cidr_block if they are not specified.
    enablePrivateNodes : bool, default is Undefined, optional
        Whether nodes have internal IP addresses only.
    networkPerformanceConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0NetworkPerformanceConfigItems0], default is Undefined, optional
        network performance config
    podCidrOverprovisionConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0PodCidrOverprovisionConfigItems0], default is Undefined, optional
        pod cidr overprovision config
    podIpv4CidrBlock : str, default is Undefined, optional
        The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
    podRange : str, default is Undefined, optional
        The ID of the secondary range for pod IPs. If create_pod_range is true, this ID is used for the new range. If create_pod_range is false, uses an existing secondary range with this ID.
    """


    additionalNodeNetworkConfigs?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0AdditionalNodeNetworkConfigsItems0]

    additionalPodNetworkConfigs?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0AdditionalPodNetworkConfigsItems0]

    createPodRange?: bool

    enablePrivateNodes?: bool

    networkPerformanceConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0NetworkPerformanceConfigItems0]

    podCidrOverprovisionConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0PodCidrOverprovisionConfigItems0]

    podIpv4CidrBlock?: str

    podRange?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0AdditionalNodeNetworkConfigsItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider network config items0 additional node network configs items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        Name of the VPC where the additional interface belongs.
    subnetwork : str, default is Undefined, optional
        Name of the subnetwork where the additional pod network belongs.
    """


    network?: str

    subnetwork?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0AdditionalPodNetworkConfigsItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider network config items0 additional pod network configs items0

    Attributes
    ----------
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods per node in this node pool.
        Note that this does not work on node pools which are "route-based" - that is, node
        pools belonging to clusters that do not have IP Aliasing enabled.
        See the official documentation
        for more information.
    secondaryPodRange : str, default is Undefined, optional
        The name of the secondary range on the subnet which provides IP address for this pod range.
    subnetwork : str, default is Undefined, optional
        Name of the subnetwork where the additional pod network belongs.
    """


    maxPodsPerNode?: float

    secondaryPodRange?: str

    subnetwork?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0NetworkPerformanceConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider network config items0 network performance config items0

    Attributes
    ----------
    totalEgressBandwidthTier : str, default is Undefined, optional
        total egress bandwidth tier
    """


    totalEgressBandwidthTier?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNetworkConfigItems0PodCidrOverprovisionConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider network config items0 pod cidr overprovision config items0

    Attributes
    ----------
    disabled : bool, default is Undefined, optional
        disabled
    """


    disabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0

    Attributes
    ----------
    advancedMachineFeatures : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0AdvancedMachineFeaturesItems0], default is Undefined, optional
        advanced machine features
    bootDiskKmsKey : str, default is Undefined, optional
        boot disk kms key
    confidentialNodes : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ConfidentialNodesItems0], default is Undefined, optional
        Configuration for Confidential Nodes feature. Structure is documented below.
    containerdConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ContainerdConfigItems0], default is Undefined, optional
        containerd config
    diskSizeGb : float, default is Undefined, optional
        disk size gb
    diskType : str, default is Undefined, optional
        disk type
    enableConfidentialStorage : bool, default is Undefined, optional
        enable confidential storage
    ephemeralStorageLocalSsdConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0EphemeralStorageLocalSsdConfigItems0], default is Undefined, optional
        ephemeral storage local ssd config
    fastSocket : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0FastSocketItems0], default is Undefined, optional
        fast socket
    gcfsConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GcfsConfigItems0], default is Undefined, optional
        gcfs config
    guestAccelerator : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GuestAcceleratorItems0], default is Undefined, optional
        guest accelerator
    gvnic : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GvnicItems0], default is Undefined, optional
        gvnic
    hostMaintenancePolicy : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0HostMaintenancePolicyItems0], default is Undefined, optional
        host maintenance policy
    imageType : str, default is Undefined, optional
        image type
    index : str, default is "0", optional
        This is an injected field with a default value for being able to merge items of the parent object list.
    kubeletConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0KubeletConfigItems0], default is Undefined, optional
        kubelet config
    labels : {str:str}, default is Undefined, optional
        labels
    linuxNodeConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0LinuxNodeConfigItems0], default is Undefined, optional
        Parameters used in creating the node pool. See
        google_container_cluster for schema.
    localNvmeSsdBlockConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0LocalNvmeSsdBlockConfigItems0], default is Undefined, optional
        local nvme ssd block config
    localSsdCount : float, default is Undefined, optional
        local ssd count
    loggingVariant : str, default is Undefined, optional
        logging variant
    machineType : str, default is Undefined, optional
        machine type
    metadata : {str:str}, default is Undefined, optional
        metadata
    minCpuPlatform : str, default is Undefined, optional
        min Cpu platform
    nodeGroup : str, default is Undefined, optional
        node group
    oauthScopes : [str], default is Undefined, optional
        oauth scopes
    preemptible : bool, default is Undefined, optional
        preemptible
    reservationAffinity : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ReservationAffinityItems0], default is Undefined, optional
        reservation affinity
    resourceLabels : {str:str}, default is Undefined, optional
        resource labels
    resourceManagerTags : {str:str}, default is Undefined, optional
        resource manager tags
    secondaryBootDisks : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0SecondaryBootDisksItems0], default is Undefined, optional
        secondary boot disks
    serviceAccount : str, default is Undefined, optional
        service account
    serviceAccountRef : ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ServiceAccountRef, default is Undefined, optional
        service account ref
    serviceAccountSelector : ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ServiceAccountSelector, default is Undefined, optional
        service account selector
    shieldedInstanceConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ShieldedInstanceConfigItems0], default is Undefined, optional
        shielded instance config
    soleTenantConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0SoleTenantConfigItems0], default is Undefined, optional
        sole tenant config
    spot : bool, default is Undefined, optional
        spot
    tags : [str], default is Undefined, optional
        tags
    taint : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0TaintItems0], default is Undefined, optional
        taint
    workloadMetadataConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0WorkloadMetadataConfigItems0], default is Undefined, optional
        workload metadata config
    """


    advancedMachineFeatures?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0AdvancedMachineFeaturesItems0]

    bootDiskKmsKey?: str

    confidentialNodes?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ConfidentialNodesItems0]

    containerdConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ContainerdConfigItems0]

    diskSizeGb?: float

    diskType?: str

    enableConfidentialStorage?: bool

    ephemeralStorageLocalSsdConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0EphemeralStorageLocalSsdConfigItems0]

    fastSocket?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0FastSocketItems0]

    gcfsConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GcfsConfigItems0]

    guestAccelerator?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GuestAcceleratorItems0]

    gvnic?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GvnicItems0]

    hostMaintenancePolicy?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0HostMaintenancePolicyItems0]

    imageType?: str

    index?: str = "0"

    kubeletConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0KubeletConfigItems0]

    labels?: {str:str}

    linuxNodeConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0LinuxNodeConfigItems0]

    localNvmeSsdBlockConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0LocalNvmeSsdBlockConfigItems0]

    localSsdCount?: float

    loggingVariant?: str

    machineType?: str

    metadata?: {str:str}

    minCpuPlatform?: str

    nodeGroup?: str

    oauthScopes?: [str]

    preemptible?: bool

    reservationAffinity?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ReservationAffinityItems0]

    resourceLabels?: {str:str}

    resourceManagerTags?: {str:str}

    secondaryBootDisks?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0SecondaryBootDisksItems0]

    serviceAccount?: str

    serviceAccountRef?: ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ServiceAccountRef

    serviceAccountSelector?: ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ServiceAccountSelector

    shieldedInstanceConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ShieldedInstanceConfigItems0]

    soleTenantConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0SoleTenantConfigItems0]

    spot?: bool

    tags?: [str]

    taint?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0TaintItems0]

    workloadMetadataConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0WorkloadMetadataConfigItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0AdvancedMachineFeaturesItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 advanced machine features items0

    Attributes
    ----------
    enableNestedVirtualization : bool, default is Undefined, optional
        enable nested virtualization
    threadsPerCore : float, default is Undefined, optional
        threads per core
    """


    enableNestedVirtualization?: bool

    threadsPerCore?: float


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ConfidentialNodesItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 confidential nodes items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ContainerdConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 containerd config items0

    Attributes
    ----------
    privateRegistryAccessConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0], default is Undefined, optional
        private registry access config
    """


    privateRegistryAccessConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 containerd config items0 private registry access config items0

    Attributes
    ----------
    certificateAuthorityDomainConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0], default is Undefined, optional
        certificate authority domain config
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    certificateAuthorityDomainConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0]

    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 containerd config items0 private registry access config items0 certificate authority domain config items0

    Attributes
    ----------
    fqdns : [str], default is Undefined, optional
        fqdns
    gcpSecretManagerCertificateConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfigItems0], default is Undefined, optional
        gcp secret manager certificate config
    """


    fqdns?: [str]

    gcpSecretManagerCertificateConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfigItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 containerd config items0 private registry access config items0 certificate authority domain config items0 gcp secret manager certificate config items0

    Attributes
    ----------
    secretUri : str, default is Undefined, optional
        secret Uri
    """


    secretUri?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0EphemeralStorageLocalSsdConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 ephemeral storage local ssd config items0

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        local ssd count
    """


    localSsdCount?: float


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0FastSocketItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 fast socket items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GcfsConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 gcfs config items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GuestAcceleratorItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 guest accelerator items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        count
    gpuDriverInstallationConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GuestAcceleratorItems0GpuDriverInstallationConfigItems0], default is Undefined, optional
        gpu driver installation config
    gpuPartitionSize : str, default is Undefined, optional
        gpu partition size
    gpuSharingConfig : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GuestAcceleratorItems0GpuSharingConfigItems0], default is Undefined, optional
        gpu sharing config
    $type : str, default is Undefined, optional
        The type of the policy. Supports a single value: COMPACT.
        Specifying COMPACT placement policy type places node pool's nodes in a closer
        physical proximity in order to reduce network latency between nodes.
    """


    count?: float

    gpuDriverInstallationConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GuestAcceleratorItems0GpuDriverInstallationConfigItems0]

    gpuPartitionSize?: str

    gpuSharingConfig?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GuestAcceleratorItems0GpuSharingConfigItems0]

    $type?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GuestAcceleratorItems0GpuDriverInstallationConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 guest accelerator items0 gpu driver installation config items0

    Attributes
    ----------
    gpuDriverVersion : str, default is Undefined, optional
        The Kubernetes version for the nodes in this pool. Note that if this field
        and auto_upgrade are both specified, they will fight each other for what the node version should
        be, so setting both is highly discouraged.
    """


    gpuDriverVersion?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GuestAcceleratorItems0GpuSharingConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 guest accelerator items0 gpu sharing config items0

    Attributes
    ----------
    gpuSharingStrategy : str, default is Undefined, optional
        gpu sharing strategy
    maxSharedClientsPerGpu : float, default is Undefined, optional
        max shared clients per gpu
    """


    gpuSharingStrategy?: str

    maxSharedClientsPerGpu?: float


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0GvnicItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 gvnic items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0HostMaintenancePolicyItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 host maintenance policy items0

    Attributes
    ----------
    maintenanceInterval : str, default is Undefined, optional
        maintenance interval
    """


    maintenanceInterval?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0KubeletConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 kubelet config items0

    Attributes
    ----------
    cpuCfsQuota : bool, default is Undefined, optional
        cpu cfs quota
    cpuCfsQuotaPeriod : str, default is Undefined, optional
        cpu cfs quota period
    cpuManagerPolicy : str, default is Undefined, optional
        cpu manager policy
    insecureKubeletReadonlyPortEnabled : str, default is Undefined, optional
        insecure kubelet readonly port enabled
    podPidsLimit : float, default is Undefined, optional
        pod pids limit
    """


    cpuCfsQuota?: bool

    cpuCfsQuotaPeriod?: str

    cpuManagerPolicy?: str

    insecureKubeletReadonlyPortEnabled?: str

    podPidsLimit?: float


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0LinuxNodeConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 linux node config items0

    Attributes
    ----------
    cgroupMode : str, default is Undefined, optional
        cgroup mode
    sysctls : {str:str}, default is Undefined, optional
        sysctls
    """


    cgroupMode?: str

    sysctls?: {str:str}


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0LocalNvmeSsdBlockConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 local nvme ssd block config items0

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        local ssd count
    """


    localSsdCount?: float


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ReservationAffinityItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 reservation affinity items0

    Attributes
    ----------
    consumeReservationType : str, default is Undefined, optional
        consume reservation type
    key : str, default is Undefined, optional
        key
    values : [str], default is Undefined, optional
        values
    """


    consumeReservationType?: str

    key?: str

    values?: [str]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0SecondaryBootDisksItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 secondary boot disks items0

    Attributes
    ----------
    diskImage : str, default is Undefined, optional
        disk image
    mode : str, default is Undefined, optional
        mode
    """


    diskImage?: str

    mode?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ServiceAccountRef:
    r"""
    Reference to a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ServiceAccountRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ServiceAccountRefPolicy


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ServiceAccountRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ServiceAccountSelector:
    r"""
    Selector for a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ServiceAccountSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ServiceAccountSelectorPolicy


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ServiceAccountSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0ShieldedInstanceConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 shielded instance config items0

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        enable integrity monitoring
    enableSecureBoot : bool, default is Undefined, optional
        enable secure boot
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0SoleTenantConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 sole tenant config items0

    Attributes
    ----------
    nodeAffinity : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0SoleTenantConfigItems0NodeAffinityItems0], default is Undefined, optional
        node affinity
    """


    nodeAffinity?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0SoleTenantConfigItems0NodeAffinityItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0SoleTenantConfigItems0NodeAffinityItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 sole tenant config items0 node affinity items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    operator : str, default is Undefined, optional
        operator
    values : [str], default is Undefined, optional
        values
    """


    key?: str

    operator?: str

    values?: [str]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0TaintItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 taint items0

    Attributes
    ----------
    effect : str, default is Undefined, optional
        effect
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    effect?: str

    key?: str

    value?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderNodeConfigItems0WorkloadMetadataConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider node config items0 workload metadata config items0

    Attributes
    ----------
    mode : str, default is Undefined, optional
        mode
    """


    mode?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderPlacementPolicyItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider placement policy items0

    Attributes
    ----------
    policyName : str, default is Undefined, optional
        If set, refers to the name of a custom resource policy supplied by the user.
        The resource policy must be in the same project and region as the node pool.
        If not found, InvalidArgument error is returned.
    tpuTopology : str, default is Undefined, optional
        The TPU placement topology for pod slice node pool.
    $type : str, default is Undefined, optional
        The type of the policy. Supports a single value: COMPACT.
        Specifying COMPACT placement policy type places node pool's nodes in a closer
        physical proximity in order to reduce network latency between nodes.
    """


    policyName?: str

    tpuTopology?: str

    $type?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderQueuedProvisioningItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider queued provisioning items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderUpgradeSettingsItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider upgrade settings items0

    Attributes
    ----------
    blueGreenSettings : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderUpgradeSettingsItems0BlueGreenSettingsItems0], default is Undefined, optional
        The settings to adjust blue green upgrades.
        Structure is documented below
    maxSurge : float, default is Undefined, optional
        The number of additional nodes that can be added to the node pool during
        an upgrade. Increasing max_surge raises the number of nodes that can be upgraded simultaneously.
        Can be set to 0 or greater.
    maxUnavailable : float, default is Undefined, optional
        The number of nodes that can be simultaneously unavailable during
        an upgrade. Increasing max_unavailable raises the number of nodes that can be upgraded in
        parallel. Can be set to 0 or greater.
    strategy : str, default is Undefined, optional
        (Default SURGE) The upgrade stragey to be used for upgrading the nodes.
    """


    blueGreenSettings?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderUpgradeSettingsItems0BlueGreenSettingsItems0]

    maxSurge?: float

    maxUnavailable?: float

    strategy?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderUpgradeSettingsItems0BlueGreenSettingsItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider upgrade settings items0 blue green settings items0

    Attributes
    ----------
    nodePoolSoakDuration : str, default is Undefined, optional
        Time needed after draining the entire blue pool.
        After this period, the blue pool will be cleaned up.
    standardRolloutPolicy : [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderUpgradeSettingsItems0BlueGreenSettingsItems0StandardRolloutPolicyItems0], default is Undefined, optional
        Specifies the standard policy settings for blue-green upgrades.
    """


    nodePoolSoakDuration?: str

    standardRolloutPolicy?: [ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderUpgradeSettingsItems0BlueGreenSettingsItems0StandardRolloutPolicyItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolSpecInitProviderUpgradeSettingsItems0BlueGreenSettingsItems0StandardRolloutPolicyItems0:
    r"""
    container gcp upbound io v1beta1 node pool spec init provider upgrade settings items0 blue green settings items0 standard rollout policy items0

    Attributes
    ----------
    batchNodeCount : float, default is Undefined, optional
        Number of blue nodes to drain in a batch.
    batchPercentage : float, default is Undefined, optional
        Percentage of the blue pool nodes to drain in a batch.
    batchSoakDuration : str, default is Undefined, optional
        (Optionial) Soak time after each batch gets drained.
    """


    batchNodeCount?: float

    batchPercentage?: float

    batchSoakDuration?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerGcpUpboundIoV1beta1NodePoolSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerGcpUpboundIoV1beta1NodePoolSpecProviderConfigRefPolicy


schema ContainerGcpUpboundIoV1beta1NodePoolSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ContainerGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ContainerGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ContainerGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToConfigRef

    metadata?: ContainerGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToMetadata

    name: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToConfigRefPolicy


schema ContainerGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ContainerGcpUpboundIoV1beta1NodePoolSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatus:
    r"""
    NodePoolStatus defines the observed state of NodePool.

    Attributes
    ----------
    atProvider : ContainerGcpUpboundIoV1beta1NodePoolStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ContainerGcpUpboundIoV1beta1NodePoolStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ContainerGcpUpboundIoV1beta1NodePoolStatusAtProvider

    conditions?: [ContainerGcpUpboundIoV1beta1NodePoolStatusConditionsItems0]

    observedGeneration?: int


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProvider:
    r"""
    container gcp upbound io v1beta1 node pool status at provider

    Attributes
    ----------
    autoscaling : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderAutoscalingItems0], default is Undefined, optional
        Configuration required by cluster autoscaler to adjust
        the size of the node pool to the current cluster usage. Structure is documented below.
    cluster : str, default is Undefined, optional
        The cluster to create the node pool for. Cluster must be present in location provided for clusters. May be specified in the format projects/{{project}}/locations/{{location}}/clusters/{{cluster}} or as just the name of the cluster.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{project}}/{{location}}/{{cluster}}/{{name}}
    initialNodeCount : float, default is Undefined, optional
        The initial number of nodes for the pool. In
        regional or multi-zonal clusters, this is the number of nodes per zone. Changing
        this will force recreation of the resource.  If you don't
        need this value, don't set it.  If you do need it, you can use a lifecycle block to
        ignore subsequent changes to this field.
    instanceGroupUrls : [str], default is Undefined, optional
        The resource URLs of the managed instance groups associated with this node pool.
    location : str, default is Undefined, optional
        The location (region or zone) of the cluster.
    managedInstanceGroupUrls : [str], default is Undefined, optional
        List of instance group URLs which have been assigned to this node pool.
    management : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderManagementItems0], default is Undefined, optional
        Node management configuration, wherein auto-repair and
        auto-upgrade is configured. Structure is documented below.
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods per node in this node pool.
        Note that this does not work on node pools which are "route-based" - that is, node
        pools belonging to clusters that do not have IP Aliasing enabled.
        See the official documentation
        for more information.
    networkConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0], default is Undefined, optional
        The network configuration of the pool. Such as
        configuration for Adding Pod IP address ranges) to the node pool. Or enabling private nodes. Structure is
        documented below
    nodeConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0], default is Undefined, optional
        Parameters used in creating the node pool. See
        google_container_cluster for schema.
    nodeCount : float, default is Undefined, optional
        The number of nodes per instance group. This field can be used to
        update the number of nodes per instance group but should not be used alongside autoscaling.
    nodeLocations : [str], default is Undefined, optional
        The list of zones in which the node pool's nodes should be located. Nodes must
        be in the region of their regional cluster or in the same region as their
        cluster's zone for zonal clusters. If unspecified, the cluster-level
        node_locations will be used.
    operation : str, default is Undefined, optional
        operation
    placementPolicy : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderPlacementPolicyItems0], default is Undefined, optional
        Specifies a custom placement policy for the
        nodes.
    project : str, default is Undefined, optional
        The ID of the project in which to create the node pool. If blank,
        the provider-configured project will be used.
    queuedProvisioning : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderQueuedProvisioningItems0], default is Undefined, optional
        Specifies node pool-level settings of queued provisioning.
        Structure is documented below.
    upgradeSettings : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderUpgradeSettingsItems0], default is Undefined, optional
        Specify node upgrade settings to change how GKE upgrades nodes.
        The maximum number of nodes upgraded simultaneously is limited to 20. Structure is documented below.
    version : str, default is Undefined, optional
        The Kubernetes version for the nodes in this pool. Note that if this field
        and auto_upgrade are both specified, they will fight each other for what the node version should
        be, so setting both is highly discouraged.
    """


    autoscaling?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderAutoscalingItems0]

    cluster?: str

    id?: str

    initialNodeCount?: float

    instanceGroupUrls?: [str]

    location?: str

    managedInstanceGroupUrls?: [str]

    management?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderManagementItems0]

    maxPodsPerNode?: float

    networkConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0]

    nodeConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0]

    nodeCount?: float

    nodeLocations?: [str]

    operation?: str

    placementPolicy?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderPlacementPolicyItems0]

    project?: str

    queuedProvisioning?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderQueuedProvisioningItems0]

    upgradeSettings?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderUpgradeSettingsItems0]

    version?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderAutoscalingItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider autoscaling items0

    Attributes
    ----------
    locationPolicy : str, default is Undefined, optional
        Location policy specifies the algorithm used when
        scaling-up the node pool. Location policy is supported only in 1.24.1+ clusters.
    maxNodeCount : float, default is Undefined, optional
        Maximum number of nodes per zone in the NodePool.
        Must be >= min_node_count. Cannot be used with total limits.
    minNodeCount : float, default is Undefined, optional
        Minimum number of nodes per zone in the NodePool.
        Must be >=0 and <= max_node_count. Cannot be used with total limits.
    totalMaxNodeCount : float, default is Undefined, optional
        Total maximum number of nodes in the NodePool.
        Must be >= total_min_node_count. Cannot be used with per zone limits.
        Total size limits are supported only in 1.24.1+ clusters.
    totalMinNodeCount : float, default is Undefined, optional
        Total minimum number of nodes in the NodePool.
        Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
        Total size limits are supported only in 1.24.1+ clusters.
    """


    locationPolicy?: str

    maxNodeCount?: float

    minNodeCount?: float

    totalMaxNodeCount?: float

    totalMinNodeCount?: float


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderManagementItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider management items0

    Attributes
    ----------
    autoRepair : bool, default is Undefined, optional
        Whether the nodes will be automatically repaired. Enabled by default.
    autoUpgrade : bool, default is Undefined, optional
        Whether the nodes will be automatically upgraded. Enabled by default.
    """


    autoRepair?: bool

    autoUpgrade?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider network config items0

    Attributes
    ----------
    additionalNodeNetworkConfigs : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0AdditionalNodeNetworkConfigsItems0], default is Undefined, optional
        We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface.
        Structure is documented below
    additionalPodNetworkConfigs : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0AdditionalPodNetworkConfigsItems0], default is Undefined, optional
        We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node.
        Structure is documented below
    createPodRange : bool, default is Undefined, optional
        Whether to create a new range for pod IPs in this node pool. Defaults are provided for pod_range and pod_ipv4_cidr_block if they are not specified.
    enablePrivateNodes : bool, default is Undefined, optional
        Whether nodes have internal IP addresses only.
    networkPerformanceConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0NetworkPerformanceConfigItems0], default is Undefined, optional
        network performance config
    podCidrOverprovisionConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0PodCidrOverprovisionConfigItems0], default is Undefined, optional
        pod cidr overprovision config
    podIpv4CidrBlock : str, default is Undefined, optional
        The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
    podRange : str, default is Undefined, optional
        The ID of the secondary range for pod IPs. If create_pod_range is true, this ID is used for the new range. If create_pod_range is false, uses an existing secondary range with this ID.
    """


    additionalNodeNetworkConfigs?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0AdditionalNodeNetworkConfigsItems0]

    additionalPodNetworkConfigs?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0AdditionalPodNetworkConfigsItems0]

    createPodRange?: bool

    enablePrivateNodes?: bool

    networkPerformanceConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0NetworkPerformanceConfigItems0]

    podCidrOverprovisionConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0PodCidrOverprovisionConfigItems0]

    podIpv4CidrBlock?: str

    podRange?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0AdditionalNodeNetworkConfigsItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider network config items0 additional node network configs items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        Name of the VPC where the additional interface belongs.
    subnetwork : str, default is Undefined, optional
        Name of the subnetwork where the additional pod network belongs.
    """


    network?: str

    subnetwork?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0AdditionalPodNetworkConfigsItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider network config items0 additional pod network configs items0

    Attributes
    ----------
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods per node in this node pool.
        Note that this does not work on node pools which are "route-based" - that is, node
        pools belonging to clusters that do not have IP Aliasing enabled.
        See the official documentation
        for more information.
    secondaryPodRange : str, default is Undefined, optional
        The name of the secondary range on the subnet which provides IP address for this pod range.
    subnetwork : str, default is Undefined, optional
        Name of the subnetwork where the additional pod network belongs.
    """


    maxPodsPerNode?: float

    secondaryPodRange?: str

    subnetwork?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0NetworkPerformanceConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider network config items0 network performance config items0

    Attributes
    ----------
    totalEgressBandwidthTier : str, default is Undefined, optional
        total egress bandwidth tier
    """


    totalEgressBandwidthTier?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNetworkConfigItems0PodCidrOverprovisionConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider network config items0 pod cidr overprovision config items0

    Attributes
    ----------
    disabled : bool, default is Undefined, optional
        disabled
    """


    disabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0

    Attributes
    ----------
    advancedMachineFeatures : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0AdvancedMachineFeaturesItems0], default is Undefined, optional
        advanced machine features
    bootDiskKmsKey : str, default is Undefined, optional
        boot disk kms key
    confidentialNodes : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ConfidentialNodesItems0], default is Undefined, optional
        Configuration for Confidential Nodes feature. Structure is documented below.
    containerdConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ContainerdConfigItems0], default is Undefined, optional
        containerd config
    diskSizeGb : float, default is Undefined, optional
        disk size gb
    diskType : str, default is Undefined, optional
        disk type
    effectiveTaints : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0EffectiveTaintsItems0], default is Undefined, optional
        effective taints
    enableConfidentialStorage : bool, default is Undefined, optional
        enable confidential storage
    ephemeralStorageLocalSsdConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0EphemeralStorageLocalSsdConfigItems0], default is Undefined, optional
        ephemeral storage local ssd config
    fastSocket : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0FastSocketItems0], default is Undefined, optional
        fast socket
    gcfsConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GcfsConfigItems0], default is Undefined, optional
        gcfs config
    guestAccelerator : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GuestAcceleratorItems0], default is Undefined, optional
        guest accelerator
    gvnic : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GvnicItems0], default is Undefined, optional
        gvnic
    hostMaintenancePolicy : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0HostMaintenancePolicyItems0], default is Undefined, optional
        host maintenance policy
    imageType : str, default is Undefined, optional
        image type
    index : str, default is "0", optional
        This is an injected field with a default value for being able to merge items of the parent object list.
    kubeletConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0KubeletConfigItems0], default is Undefined, optional
        kubelet config
    labels : {str:str}, default is Undefined, optional
        labels
    linuxNodeConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0LinuxNodeConfigItems0], default is Undefined, optional
        Parameters used in creating the node pool. See
        google_container_cluster for schema.
    localNvmeSsdBlockConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0LocalNvmeSsdBlockConfigItems0], default is Undefined, optional
        local nvme ssd block config
    localSsdCount : float, default is Undefined, optional
        local ssd count
    loggingVariant : str, default is Undefined, optional
        logging variant
    machineType : str, default is Undefined, optional
        machine type
    metadata : {str:str}, default is Undefined, optional
        metadata
    minCpuPlatform : str, default is Undefined, optional
        min Cpu platform
    nodeGroup : str, default is Undefined, optional
        node group
    oauthScopes : [str], default is Undefined, optional
        oauth scopes
    preemptible : bool, default is Undefined, optional
        preemptible
    reservationAffinity : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ReservationAffinityItems0], default is Undefined, optional
        reservation affinity
    resourceLabels : {str:str}, default is Undefined, optional
        resource labels
    resourceManagerTags : {str:str}, default is Undefined, optional
        resource manager tags
    secondaryBootDisks : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0SecondaryBootDisksItems0], default is Undefined, optional
        secondary boot disks
    serviceAccount : str, default is Undefined, optional
        service account
    shieldedInstanceConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ShieldedInstanceConfigItems0], default is Undefined, optional
        shielded instance config
    soleTenantConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0SoleTenantConfigItems0], default is Undefined, optional
        sole tenant config
    spot : bool, default is Undefined, optional
        spot
    tags : [str], default is Undefined, optional
        tags
    taint : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0TaintItems0], default is Undefined, optional
        taint
    workloadMetadataConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0WorkloadMetadataConfigItems0], default is Undefined, optional
        workload metadata config
    """


    advancedMachineFeatures?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0AdvancedMachineFeaturesItems0]

    bootDiskKmsKey?: str

    confidentialNodes?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ConfidentialNodesItems0]

    containerdConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ContainerdConfigItems0]

    diskSizeGb?: float

    diskType?: str

    effectiveTaints?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0EffectiveTaintsItems0]

    enableConfidentialStorage?: bool

    ephemeralStorageLocalSsdConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0EphemeralStorageLocalSsdConfigItems0]

    fastSocket?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0FastSocketItems0]

    gcfsConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GcfsConfigItems0]

    guestAccelerator?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GuestAcceleratorItems0]

    gvnic?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GvnicItems0]

    hostMaintenancePolicy?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0HostMaintenancePolicyItems0]

    imageType?: str

    index?: str = "0"

    kubeletConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0KubeletConfigItems0]

    labels?: {str:str}

    linuxNodeConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0LinuxNodeConfigItems0]

    localNvmeSsdBlockConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0LocalNvmeSsdBlockConfigItems0]

    localSsdCount?: float

    loggingVariant?: str

    machineType?: str

    metadata?: {str:str}

    minCpuPlatform?: str

    nodeGroup?: str

    oauthScopes?: [str]

    preemptible?: bool

    reservationAffinity?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ReservationAffinityItems0]

    resourceLabels?: {str:str}

    resourceManagerTags?: {str:str}

    secondaryBootDisks?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0SecondaryBootDisksItems0]

    serviceAccount?: str

    shieldedInstanceConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ShieldedInstanceConfigItems0]

    soleTenantConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0SoleTenantConfigItems0]

    spot?: bool

    tags?: [str]

    taint?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0TaintItems0]

    workloadMetadataConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0WorkloadMetadataConfigItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0AdvancedMachineFeaturesItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 advanced machine features items0

    Attributes
    ----------
    enableNestedVirtualization : bool, default is Undefined, optional
        enable nested virtualization
    threadsPerCore : float, default is Undefined, optional
        threads per core
    """


    enableNestedVirtualization?: bool

    threadsPerCore?: float


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ConfidentialNodesItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 confidential nodes items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ContainerdConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 containerd config items0

    Attributes
    ----------
    privateRegistryAccessConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0], default is Undefined, optional
        private registry access config
    """


    privateRegistryAccessConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 containerd config items0 private registry access config items0

    Attributes
    ----------
    certificateAuthorityDomainConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0], default is Undefined, optional
        certificate authority domain config
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    certificateAuthorityDomainConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0]

    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 containerd config items0 private registry access config items0 certificate authority domain config items0

    Attributes
    ----------
    fqdns : [str], default is Undefined, optional
        fqdns
    gcpSecretManagerCertificateConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfigItems0], default is Undefined, optional
        gcp secret manager certificate config
    """


    fqdns?: [str]

    gcpSecretManagerCertificateConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfigItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ContainerdConfigItems0PrivateRegistryAccessConfigItems0CertificateAuthorityDomainConfigItems0GcpSecretManagerCertificateConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 containerd config items0 private registry access config items0 certificate authority domain config items0 gcp secret manager certificate config items0

    Attributes
    ----------
    secretUri : str, default is Undefined, optional
        secret Uri
    """


    secretUri?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0EffectiveTaintsItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 effective taints items0

    Attributes
    ----------
    effect : str, default is Undefined, optional
        effect
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    effect?: str

    key?: str

    value?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0EphemeralStorageLocalSsdConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 ephemeral storage local ssd config items0

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        local ssd count
    """


    localSsdCount?: float


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0FastSocketItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 fast socket items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GcfsConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 gcfs config items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GuestAcceleratorItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 guest accelerator items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        count
    gpuDriverInstallationConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GuestAcceleratorItems0GpuDriverInstallationConfigItems0], default is Undefined, optional
        gpu driver installation config
    gpuPartitionSize : str, default is Undefined, optional
        gpu partition size
    gpuSharingConfig : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GuestAcceleratorItems0GpuSharingConfigItems0], default is Undefined, optional
        gpu sharing config
    $type : str, default is Undefined, optional
        The type of the policy. Supports a single value: COMPACT.
        Specifying COMPACT placement policy type places node pool's nodes in a closer
        physical proximity in order to reduce network latency between nodes.
    """


    count?: float

    gpuDriverInstallationConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GuestAcceleratorItems0GpuDriverInstallationConfigItems0]

    gpuPartitionSize?: str

    gpuSharingConfig?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GuestAcceleratorItems0GpuSharingConfigItems0]

    $type?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GuestAcceleratorItems0GpuDriverInstallationConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 guest accelerator items0 gpu driver installation config items0

    Attributes
    ----------
    gpuDriverVersion : str, default is Undefined, optional
        The Kubernetes version for the nodes in this pool. Note that if this field
        and auto_upgrade are both specified, they will fight each other for what the node version should
        be, so setting both is highly discouraged.
    """


    gpuDriverVersion?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GuestAcceleratorItems0GpuSharingConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 guest accelerator items0 gpu sharing config items0

    Attributes
    ----------
    gpuSharingStrategy : str, default is Undefined, optional
        gpu sharing strategy
    maxSharedClientsPerGpu : float, default is Undefined, optional
        max shared clients per gpu
    """


    gpuSharingStrategy?: str

    maxSharedClientsPerGpu?: float


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0GvnicItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 gvnic items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0HostMaintenancePolicyItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 host maintenance policy items0

    Attributes
    ----------
    maintenanceInterval : str, default is Undefined, optional
        maintenance interval
    """


    maintenanceInterval?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0KubeletConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 kubelet config items0

    Attributes
    ----------
    cpuCfsQuota : bool, default is Undefined, optional
        cpu cfs quota
    cpuCfsQuotaPeriod : str, default is Undefined, optional
        cpu cfs quota period
    cpuManagerPolicy : str, default is Undefined, optional
        cpu manager policy
    insecureKubeletReadonlyPortEnabled : str, default is Undefined, optional
        insecure kubelet readonly port enabled
    podPidsLimit : float, default is Undefined, optional
        pod pids limit
    """


    cpuCfsQuota?: bool

    cpuCfsQuotaPeriod?: str

    cpuManagerPolicy?: str

    insecureKubeletReadonlyPortEnabled?: str

    podPidsLimit?: float


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0LinuxNodeConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 linux node config items0

    Attributes
    ----------
    cgroupMode : str, default is Undefined, optional
        cgroup mode
    sysctls : {str:str}, default is Undefined, optional
        sysctls
    """


    cgroupMode?: str

    sysctls?: {str:str}


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0LocalNvmeSsdBlockConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 local nvme ssd block config items0

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        local ssd count
    """


    localSsdCount?: float


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ReservationAffinityItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 reservation affinity items0

    Attributes
    ----------
    consumeReservationType : str, default is Undefined, optional
        consume reservation type
    key : str, default is Undefined, optional
        key
    values : [str], default is Undefined, optional
        values
    """


    consumeReservationType?: str

    key?: str

    values?: [str]


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0SecondaryBootDisksItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 secondary boot disks items0

    Attributes
    ----------
    diskImage : str, default is Undefined, optional
        disk image
    mode : str, default is Undefined, optional
        mode
    """


    diskImage?: str

    mode?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0ShieldedInstanceConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 shielded instance config items0

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        enable integrity monitoring
    enableSecureBoot : bool, default is Undefined, optional
        enable secure boot
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0SoleTenantConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 sole tenant config items0

    Attributes
    ----------
    nodeAffinity : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0SoleTenantConfigItems0NodeAffinityItems0], default is Undefined, optional
        node affinity
    """


    nodeAffinity?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0SoleTenantConfigItems0NodeAffinityItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0SoleTenantConfigItems0NodeAffinityItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 sole tenant config items0 node affinity items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    operator : str, default is Undefined, optional
        operator
    values : [str], default is Undefined, optional
        values
    """


    key?: str

    operator?: str

    values?: [str]


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0TaintItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 taint items0

    Attributes
    ----------
    effect : str, default is Undefined, optional
        effect
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    effect?: str

    key?: str

    value?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderNodeConfigItems0WorkloadMetadataConfigItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider node config items0 workload metadata config items0

    Attributes
    ----------
    mode : str, default is Undefined, optional
        mode
    """


    mode?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderPlacementPolicyItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider placement policy items0

    Attributes
    ----------
    policyName : str, default is Undefined, optional
        If set, refers to the name of a custom resource policy supplied by the user.
        The resource policy must be in the same project and region as the node pool.
        If not found, InvalidArgument error is returned.
    tpuTopology : str, default is Undefined, optional
        The TPU placement topology for pod slice node pool.
    $type : str, default is Undefined, optional
        The type of the policy. Supports a single value: COMPACT.
        Specifying COMPACT placement policy type places node pool's nodes in a closer
        physical proximity in order to reduce network latency between nodes.
    """


    policyName?: str

    tpuTopology?: str

    $type?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderQueuedProvisioningItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider queued provisioning items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Makes nodes obtainable through the ProvisioningRequest API exclusively.
    """


    enabled?: bool


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderUpgradeSettingsItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider upgrade settings items0

    Attributes
    ----------
    blueGreenSettings : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderUpgradeSettingsItems0BlueGreenSettingsItems0], default is Undefined, optional
        The settings to adjust blue green upgrades.
        Structure is documented below
    maxSurge : float, default is Undefined, optional
        The number of additional nodes that can be added to the node pool during
        an upgrade. Increasing max_surge raises the number of nodes that can be upgraded simultaneously.
        Can be set to 0 or greater.
    maxUnavailable : float, default is Undefined, optional
        The number of nodes that can be simultaneously unavailable during
        an upgrade. Increasing max_unavailable raises the number of nodes that can be upgraded in
        parallel. Can be set to 0 or greater.
    strategy : str, default is Undefined, optional
        (Default SURGE) The upgrade stragey to be used for upgrading the nodes.
    """


    blueGreenSettings?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderUpgradeSettingsItems0BlueGreenSettingsItems0]

    maxSurge?: float

    maxUnavailable?: float

    strategy?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderUpgradeSettingsItems0BlueGreenSettingsItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider upgrade settings items0 blue green settings items0

    Attributes
    ----------
    nodePoolSoakDuration : str, default is Undefined, optional
        Time needed after draining the entire blue pool.
        After this period, the blue pool will be cleaned up.
    standardRolloutPolicy : [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderUpgradeSettingsItems0BlueGreenSettingsItems0StandardRolloutPolicyItems0], default is Undefined, optional
        Specifies the standard policy settings for blue-green upgrades.
    """


    nodePoolSoakDuration?: str

    standardRolloutPolicy?: [ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderUpgradeSettingsItems0BlueGreenSettingsItems0StandardRolloutPolicyItems0]


schema ContainerGcpUpboundIoV1beta1NodePoolStatusAtProviderUpgradeSettingsItems0BlueGreenSettingsItems0StandardRolloutPolicyItems0:
    r"""
    container gcp upbound io v1beta1 node pool status at provider upgrade settings items0 blue green settings items0 standard rollout policy items0

    Attributes
    ----------
    batchNodeCount : float, default is Undefined, optional
        Number of blue nodes to drain in a batch.
    batchPercentage : float, default is Undefined, optional
        Percentage of the blue pool nodes to drain in a batch.
    batchSoakDuration : str, default is Undefined, optional
        (Optionial) Soak time after each batch gets drained.
    """


    batchNodeCount?: float

    batchPercentage?: float

    batchSoakDuration?: str


schema ContainerGcpUpboundIoV1beta1NodePoolStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


