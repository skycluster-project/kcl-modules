"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ProjectService:
    r"""
    ProjectService is the Schema for the ProjectServices API. Allows management of a single API service for a Google Cloud project.

    Attributes
    ----------
    apiVersion : str, default is "cloudplatform.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ProjectService", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpec, default is Undefined, required
        spec
    status : CloudplatformGcpUpboundIoV1beta1ProjectServiceStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudplatform.gcp.upbound.io/v1beta1" = "cloudplatform.gcp.upbound.io/v1beta1"

    kind: "ProjectService" = "ProjectService"

    metadata?: v1.ObjectMeta

    spec: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpec

    status?: CloudplatformGcpUpboundIoV1beta1ProjectServiceStatus


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpec:
    r"""
    ProjectServiceSpec defines the desired state of ProjectService

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProvider

    initProvider?: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecProviderConfigRef

    writeConnectionSecretToRef?: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecWriteConnectionSecretToRef


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProvider:
    r"""
    cloudplatform gcp upbound io v1beta1 project service spec for provider

    Attributes
    ----------
    disableDependentServices : bool, default is Undefined, optional
        If true, services that are enabled
        and which depend on this service should also be disabled when this service is
        destroyed. If false or unset, an error will be returned if any enabled
        services depend on this service when attempting to destroy it.
    disableOnDestroy : bool, default is Undefined, optional
        Defaults to true. Most configurations should
        set this to false; it should generally only be true or unset in configurations
        that manage the google_project resource itself.
    project : str, default is Undefined, optional
        The project ID. If not provided, the provider project
        is used.
    projectRef : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProviderProjectRef, default is Undefined, optional
        project ref
    projectSelector : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProviderProjectSelector, default is Undefined, optional
        project selector
    service : str, default is Undefined, optional
        The service to enable.
    """


    disableDependentServices?: bool

    disableOnDestroy?: bool

    project?: str

    projectRef?: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProviderProjectRef

    projectSelector?: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProviderProjectSelector

    service?: str


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProviderProjectRef:
    r"""
    Reference to a Project in cloudplatform to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProviderProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProviderProjectRefPolicy


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProviderProjectRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProviderProjectSelector:
    r"""
    Selector for a Project in cloudplatform to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProviderProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProviderProjectSelectorPolicy


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecForProviderProjectSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    disableDependentServices : bool, default is Undefined, optional
        If true, services that are enabled
        and which depend on this service should also be disabled when this service is
        destroyed. If false or unset, an error will be returned if any enabled
        services depend on this service when attempting to destroy it.
    disableOnDestroy : bool, default is Undefined, optional
        Defaults to true. Most configurations should
        set this to false; it should generally only be true or unset in configurations
        that manage the google_project resource itself.
    project : str, default is Undefined, optional
        The project ID. If not provided, the provider project
        is used.
    projectRef : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProviderProjectRef, default is Undefined, optional
        project ref
    projectSelector : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProviderProjectSelector, default is Undefined, optional
        project selector
    service : str, default is Undefined, optional
        The service to enable.
    """


    disableDependentServices?: bool

    disableOnDestroy?: bool

    project?: str

    projectRef?: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProviderProjectRef

    projectSelector?: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProviderProjectSelector

    service?: str


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProviderProjectRef:
    r"""
    Reference to a Project in cloudplatform to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProviderProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProviderProjectRefPolicy


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProviderProjectRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProviderProjectSelector:
    r"""
    Selector for a Project in cloudplatform to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProviderProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProviderProjectSelectorPolicy


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecInitProviderProjectSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecProviderConfigRefPolicy


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceStatus:
    r"""
    ProjectServiceStatus defines the observed state of ProjectService.

    Attributes
    ----------
    atProvider : CloudplatformGcpUpboundIoV1beta1ProjectServiceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudplatformGcpUpboundIoV1beta1ProjectServiceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CloudplatformGcpUpboundIoV1beta1ProjectServiceStatusAtProvider

    conditions?: [CloudplatformGcpUpboundIoV1beta1ProjectServiceStatusConditionsItems0]

    observedGeneration?: int


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceStatusAtProvider:
    r"""
    cloudplatform gcp upbound io v1beta1 project service status at provider

    Attributes
    ----------
    disableDependentServices : bool, default is Undefined, optional
        If true, services that are enabled
        and which depend on this service should also be disabled when this service is
        destroyed. If false or unset, an error will be returned if any enabled
        services depend on this service when attempting to destroy it.
    disableOnDestroy : bool, default is Undefined, optional
        Defaults to true. Most configurations should
        set this to false; it should generally only be true or unset in configurations
        that manage the google_project resource itself.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{project}}/{{service}}
    project : str, default is Undefined, optional
        The project ID. If not provided, the provider project
        is used.
    service : str, default is Undefined, optional
        The service to enable.
    """


    disableDependentServices?: bool

    disableOnDestroy?: bool

    id?: str

    project?: str

    service?: str


schema CloudplatformGcpUpboundIoV1beta1ProjectServiceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


