"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NetworkFirewallPolicyRule:
    r"""
    NetworkFirewallPolicyRule is the Schema for the NetworkFirewallPolicyRules API. The Compute NetworkFirewallPolicyRule resource

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NetworkFirewallPolicyRule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "NetworkFirewallPolicyRule" = "NetworkFirewallPolicyRule"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpec

    status?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatus


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpec:
    r"""
    NetworkFirewallPolicyRuleSpec defines the desired state of NetworkFirewallPolicyRule

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 network firewall policy rule spec for provider

    Attributes
    ----------
    action : str, default is Undefined, optional
        The Action to perform when the client connection triggers the rule. Valid actions are "allow", "deny", "goto_next" and "apply_security_profile_group".
    description : str, default is Undefined, optional
        An optional description for this resource.
    direction : str, default is Undefined, optional
        The direction in which this rule applies. Possible values: INGRESS, EGRESS
    disabled : bool, default is Undefined, optional
        Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
    enableLogging : bool, default is Undefined, optional
        Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules.
    firewallPolicy : str, default is Undefined, optional
        The firewall policy of the resource.
    firewallPolicyRef : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderFirewallPolicyRef, default is Undefined, optional
        firewall policy ref
    firewallPolicySelector : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderFirewallPolicySelector, default is Undefined, optional
        firewall policy selector
    match : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatch, default is Undefined, optional
        match
    priority : float, default is Undefined, required
        An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest prority.
    project : str, default is Undefined, optional
        The project for the resource
    ruleName : str, default is Undefined, optional
        An optional name for the rule. This field is not a unique identifier and can be updated.
    securityProfileGroup : str, default is Undefined, optional
        A fully-qualified URL of a SecurityProfileGroup resource. Example: https://networksecurity.googleapis.com/v1/organizations/{organizationId}/locations/global/securityProfileGroups/my-security-profile-group. It must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.
    targetSecureTags : [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderTargetSecureTagsItems0], default is Undefined, optional
        A list of secure tags that controls which instances the firewall rule applies to. If targetSecureTag are specified, then the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the target_secure_tag are in INEFFECTIVE state, then this rule will be ignored. targetSecureTag may not be set at the same time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule applies to all instances on the specified network. Maximum number of target label tags allowed is 256.
    targetServiceAccounts : [str], default is Undefined, optional
        A list of service accounts indicating the sets of instances that are applied with this rule.
    tlsInspect : bool, default is Undefined, optional
        Boolean flag indicating if the traffic should be TLS decrypted. It can be set only if action = 'apply_security_profile_group' and cannot be set for other actions.
    """


    action?: str

    description?: str

    direction?: str

    disabled?: bool

    enableLogging?: bool

    firewallPolicy?: str

    firewallPolicyRef?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderFirewallPolicyRef

    firewallPolicySelector?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderFirewallPolicySelector

    match?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatch

    priority: float

    project?: str

    ruleName?: str

    securityProfileGroup?: str

    targetSecureTags?: [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderTargetSecureTagsItems0]

    targetServiceAccounts?: [str]

    tlsInspect?: bool


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderFirewallPolicyRef:
    r"""
    Reference to a NetworkFirewallPolicy in compute to populate firewallPolicy.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderFirewallPolicyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderFirewallPolicyRefPolicy


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderFirewallPolicyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderFirewallPolicySelector:
    r"""
    Selector for a NetworkFirewallPolicy in compute to populate firewallPolicy.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderFirewallPolicySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderFirewallPolicySelectorPolicy


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderFirewallPolicySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatch:
    r"""
    A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.

    Attributes
    ----------
    destAddressGroups : [str], default is Undefined, optional
        Address groups which should be matched against the traffic destination. Maximum number of destination address groups is 10. Destination address groups is only supported in Egress rules.
    destFqdns : [str], default is Undefined, optional
        Domain names that will be used to match against the resolved domain name of destination of traffic. Can only be specified if DIRECTION is egress.
    destIpRanges : [str], default is Undefined, optional
        CIDR IP address range. Maximum number of destination CIDR IP ranges allowed is 5000.
    destRegionCodes : [str], default is Undefined, optional
        The Unicode country codes whose IP addresses will be used to match against the source of traffic. Can only be specified if DIRECTION is egress.
    destThreatIntelligences : [str], default is Undefined, optional
        Name of the Google Cloud Threat Intelligence list.
    layer4Configs : [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchLayer4ConfigsItems0], default is Undefined, optional
        Pairs of IP protocols and ports that the rule should match.
    srcAddressGroups : [str], default is Undefined, optional
        Address groups which should be matched against the traffic source. Maximum number of source address groups is 10. Source address groups is only supported in Ingress rules.
    srcAddressGroupsRefs : [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcAddressGroupsRefsItems0], default is Undefined, optional
        References to AddressGroup in networksecurity to populate srcAddressGroups.
    srcAddressGroupsSelector : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcAddressGroupsSelector, default is Undefined, optional
        src address groups selector
    srcFqdns : [str], default is Undefined, optional
        Domain names that will be used to match against the resolved domain name of source of traffic. Can only be specified if DIRECTION is ingress.
    srcIpRanges : [str], default is Undefined, optional
        CIDR IP address range. Maximum number of source CIDR IP ranges allowed is 5000.
    srcRegionCodes : [str], default is Undefined, optional
        The Unicode country codes whose IP addresses will be used to match against the source of traffic. Can only be specified if DIRECTION is ingress.
    srcSecureTags : [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0], default is Undefined, optional
        List of secure tag values, which should be matched at the source of the traffic. For INGRESS rule, if all the srcSecureTag are INEFFECTIVE, and there is no srcIpRange, this rule will be ignored. Maximum number of source tag values allowed is 256.
    srcThreatIntelligences : [str], default is Undefined, optional
        Name of the Google Cloud Threat Intelligence list.
    """


    destAddressGroups?: [str]

    destFqdns?: [str]

    destIpRanges?: [str]

    destRegionCodes?: [str]

    destThreatIntelligences?: [str]

    layer4Configs?: [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchLayer4ConfigsItems0]

    srcAddressGroups?: [str]

    srcAddressGroupsRefs?: [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcAddressGroupsRefsItems0]

    srcAddressGroupsSelector?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcAddressGroupsSelector

    srcFqdns?: [str]

    srcIpRanges?: [str]

    srcRegionCodes?: [str]

    srcSecureTags?: [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0]

    srcThreatIntelligences?: [str]


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchLayer4ConfigsItems0:
    r"""
    compute gcp upbound io v1beta1 network firewall policy rule spec for provider match layer4 configs items0

    Attributes
    ----------
    ipProtocol : str, default is Undefined, optional
        The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
    ports : [str], default is Undefined, optional
        An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: “.
    """


    ipProtocol?: str

    ports?: [str]


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcAddressGroupsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcAddressGroupsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcAddressGroupsRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcAddressGroupsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcAddressGroupsSelector:
    r"""
    Selector for a list of AddressGroup in networksecurity to populate srcAddressGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcAddressGroupsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcAddressGroupsSelectorPolicy


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcAddressGroupsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0:
    r"""
    compute gcp upbound io v1beta1 network firewall policy rule spec for provider match src secure tags items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the secure tag, created with TagManager's TagValue API. @pattern tagValues/[0-9]+
    nameRef : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0NameRef, default is Undefined, optional
        name ref
    nameSelector : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0NameSelector, default is Undefined, optional
        name selector
    """


    name?: str

    nameRef?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0NameRef

    nameSelector?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0NameSelector


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0NameRef:
    r"""
    Reference to a TagValue in tags to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0NameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0NameRefPolicy


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0NameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0NameSelector:
    r"""
    Selector for a TagValue in tags to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0NameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0NameSelectorPolicy


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderMatchSrcSecureTagsItems0NameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecForProviderTargetSecureTagsItems0:
    r"""
    compute gcp upbound io v1beta1 network firewall policy rule spec for provider target secure tags items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the secure tag, created with TagManager's TagValue API. @pattern tagValues/[0-9]+
    """


    name?: str


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    action : str, default is Undefined, optional
        The Action to perform when the client connection triggers the rule. Valid actions are "allow", "deny", "goto_next" and "apply_security_profile_group".
    description : str, default is Undefined, optional
        An optional description for this resource.
    direction : str, default is Undefined, optional
        The direction in which this rule applies. Possible values: INGRESS, EGRESS
    disabled : bool, default is Undefined, optional
        Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
    enableLogging : bool, default is Undefined, optional
        Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules.
    match : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatch, default is Undefined, optional
        match
    project : str, default is Undefined, optional
        The project for the resource
    ruleName : str, default is Undefined, optional
        An optional name for the rule. This field is not a unique identifier and can be updated.
    securityProfileGroup : str, default is Undefined, optional
        A fully-qualified URL of a SecurityProfileGroup resource. Example: https://networksecurity.googleapis.com/v1/organizations/{organizationId}/locations/global/securityProfileGroups/my-security-profile-group. It must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.
    targetSecureTags : [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderTargetSecureTagsItems0], default is Undefined, optional
        A list of secure tags that controls which instances the firewall rule applies to. If targetSecureTag are specified, then the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the target_secure_tag are in INEFFECTIVE state, then this rule will be ignored. targetSecureTag may not be set at the same time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule applies to all instances on the specified network. Maximum number of target label tags allowed is 256.
    targetServiceAccounts : [str], default is Undefined, optional
        A list of service accounts indicating the sets of instances that are applied with this rule.
    tlsInspect : bool, default is Undefined, optional
        Boolean flag indicating if the traffic should be TLS decrypted. It can be set only if action = 'apply_security_profile_group' and cannot be set for other actions.
    """


    action?: str

    description?: str

    direction?: str

    disabled?: bool

    enableLogging?: bool

    match?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatch

    project?: str

    ruleName?: str

    securityProfileGroup?: str

    targetSecureTags?: [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderTargetSecureTagsItems0]

    targetServiceAccounts?: [str]

    tlsInspect?: bool


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatch:
    r"""
    A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.

    Attributes
    ----------
    destAddressGroups : [str], default is Undefined, optional
        Address groups which should be matched against the traffic destination. Maximum number of destination address groups is 10. Destination address groups is only supported in Egress rules.
    destFqdns : [str], default is Undefined, optional
        Domain names that will be used to match against the resolved domain name of destination of traffic. Can only be specified if DIRECTION is egress.
    destIpRanges : [str], default is Undefined, optional
        CIDR IP address range. Maximum number of destination CIDR IP ranges allowed is 5000.
    destRegionCodes : [str], default is Undefined, optional
        The Unicode country codes whose IP addresses will be used to match against the source of traffic. Can only be specified if DIRECTION is egress.
    destThreatIntelligences : [str], default is Undefined, optional
        Name of the Google Cloud Threat Intelligence list.
    layer4Configs : [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchLayer4ConfigsItems0], default is Undefined, optional
        Pairs of IP protocols and ports that the rule should match.
    srcAddressGroups : [str], default is Undefined, optional
        Address groups which should be matched against the traffic source. Maximum number of source address groups is 10. Source address groups is only supported in Ingress rules.
    srcAddressGroupsRefs : [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcAddressGroupsRefsItems0], default is Undefined, optional
        References to AddressGroup in networksecurity to populate srcAddressGroups.
    srcAddressGroupsSelector : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcAddressGroupsSelector, default is Undefined, optional
        src address groups selector
    srcFqdns : [str], default is Undefined, optional
        Domain names that will be used to match against the resolved domain name of source of traffic. Can only be specified if DIRECTION is ingress.
    srcIpRanges : [str], default is Undefined, optional
        CIDR IP address range. Maximum number of source CIDR IP ranges allowed is 5000.
    srcRegionCodes : [str], default is Undefined, optional
        The Unicode country codes whose IP addresses will be used to match against the source of traffic. Can only be specified if DIRECTION is ingress.
    srcSecureTags : [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0], default is Undefined, optional
        List of secure tag values, which should be matched at the source of the traffic. For INGRESS rule, if all the srcSecureTag are INEFFECTIVE, and there is no srcIpRange, this rule will be ignored. Maximum number of source tag values allowed is 256.
    srcThreatIntelligences : [str], default is Undefined, optional
        Name of the Google Cloud Threat Intelligence list.
    """


    destAddressGroups?: [str]

    destFqdns?: [str]

    destIpRanges?: [str]

    destRegionCodes?: [str]

    destThreatIntelligences?: [str]

    layer4Configs?: [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchLayer4ConfigsItems0]

    srcAddressGroups?: [str]

    srcAddressGroupsRefs?: [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcAddressGroupsRefsItems0]

    srcAddressGroupsSelector?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcAddressGroupsSelector

    srcFqdns?: [str]

    srcIpRanges?: [str]

    srcRegionCodes?: [str]

    srcSecureTags?: [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0]

    srcThreatIntelligences?: [str]


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchLayer4ConfigsItems0:
    r"""
    compute gcp upbound io v1beta1 network firewall policy rule spec init provider match layer4 configs items0

    Attributes
    ----------
    ipProtocol : str, default is Undefined, optional
        The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
    ports : [str], default is Undefined, optional
        An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: “.
    """


    ipProtocol?: str

    ports?: [str]


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcAddressGroupsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcAddressGroupsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcAddressGroupsRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcAddressGroupsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcAddressGroupsSelector:
    r"""
    Selector for a list of AddressGroup in networksecurity to populate srcAddressGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcAddressGroupsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcAddressGroupsSelectorPolicy


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcAddressGroupsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0:
    r"""
    compute gcp upbound io v1beta1 network firewall policy rule spec init provider match src secure tags items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the secure tag, created with TagManager's TagValue API. @pattern tagValues/[0-9]+
    nameRef : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0NameRef, default is Undefined, optional
        name ref
    nameSelector : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0NameSelector, default is Undefined, optional
        name selector
    """


    name?: str

    nameRef?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0NameRef

    nameSelector?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0NameSelector


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0NameRef:
    r"""
    Reference to a TagValue in tags to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0NameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0NameRefPolicy


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0NameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0NameSelector:
    r"""
    Selector for a TagValue in tags to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0NameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0NameSelectorPolicy


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderMatchSrcSecureTagsItems0NameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecInitProviderTargetSecureTagsItems0:
    r"""
    compute gcp upbound io v1beta1 network firewall policy rule spec init provider target secure tags items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the secure tag, created with TagManager's TagValue API. @pattern tagValues/[0-9]+
    """


    name?: str


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatus:
    r"""
    NetworkFirewallPolicyRuleStatus defines the observed state of NetworkFirewallPolicyRule.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 network firewall policy rule status at provider

    Attributes
    ----------
    action : str, default is Undefined, optional
        The Action to perform when the client connection triggers the rule. Valid actions are "allow", "deny", "goto_next" and "apply_security_profile_group".
    description : str, default is Undefined, optional
        An optional description for this resource.
    direction : str, default is Undefined, optional
        The direction in which this rule applies. Possible values: INGRESS, EGRESS
    disabled : bool, default is Undefined, optional
        Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
    enableLogging : bool, default is Undefined, optional
        Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules.
    firewallPolicy : str, default is Undefined, optional
        The firewall policy of the resource.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/global/firewallPolicies/{{firewall_policy}}/rules/{{priority}}
    kind : str, default is Undefined, optional
        Type of the resource. Always compute#firewallPolicyRule for firewall policy rules
    match : ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProviderMatch, default is Undefined, optional
        match
    priority : float, default is Undefined, optional
        An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest prority.
    project : str, default is Undefined, optional
        The project for the resource
    ruleName : str, default is Undefined, optional
        An optional name for the rule. This field is not a unique identifier and can be updated.
    ruleTupleCount : float, default is Undefined, optional
        Calculation of the complexity of a single firewall policy rule.
    securityProfileGroup : str, default is Undefined, optional
        A fully-qualified URL of a SecurityProfileGroup resource. Example: https://networksecurity.googleapis.com/v1/organizations/{organizationId}/locations/global/securityProfileGroups/my-security-profile-group. It must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.
    targetSecureTags : [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProviderTargetSecureTagsItems0], default is Undefined, optional
        A list of secure tags that controls which instances the firewall rule applies to. If targetSecureTag are specified, then the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the target_secure_tag are in INEFFECTIVE state, then this rule will be ignored. targetSecureTag may not be set at the same time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule applies to all instances on the specified network. Maximum number of target label tags allowed is 256.
    targetServiceAccounts : [str], default is Undefined, optional
        A list of service accounts indicating the sets of instances that are applied with this rule.
    tlsInspect : bool, default is Undefined, optional
        Boolean flag indicating if the traffic should be TLS decrypted. It can be set only if action = 'apply_security_profile_group' and cannot be set for other actions.
    """


    action?: str

    description?: str

    direction?: str

    disabled?: bool

    enableLogging?: bool

    firewallPolicy?: str

    id?: str

    kind?: str

    match?: ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProviderMatch

    priority?: float

    project?: str

    ruleName?: str

    ruleTupleCount?: float

    securityProfileGroup?: str

    targetSecureTags?: [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProviderTargetSecureTagsItems0]

    targetServiceAccounts?: [str]

    tlsInspect?: bool


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProviderMatch:
    r"""
    A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.

    Attributes
    ----------
    destAddressGroups : [str], default is Undefined, optional
        Address groups which should be matched against the traffic destination. Maximum number of destination address groups is 10. Destination address groups is only supported in Egress rules.
    destFqdns : [str], default is Undefined, optional
        Domain names that will be used to match against the resolved domain name of destination of traffic. Can only be specified if DIRECTION is egress.
    destIpRanges : [str], default is Undefined, optional
        CIDR IP address range. Maximum number of destination CIDR IP ranges allowed is 5000.
    destRegionCodes : [str], default is Undefined, optional
        The Unicode country codes whose IP addresses will be used to match against the source of traffic. Can only be specified if DIRECTION is egress.
    destThreatIntelligences : [str], default is Undefined, optional
        Name of the Google Cloud Threat Intelligence list.
    layer4Configs : [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProviderMatchLayer4ConfigsItems0], default is Undefined, optional
        Pairs of IP protocols and ports that the rule should match.
    srcAddressGroups : [str], default is Undefined, optional
        Address groups which should be matched against the traffic source. Maximum number of source address groups is 10. Source address groups is only supported in Ingress rules.
    srcFqdns : [str], default is Undefined, optional
        Domain names that will be used to match against the resolved domain name of source of traffic. Can only be specified if DIRECTION is ingress.
    srcIpRanges : [str], default is Undefined, optional
        CIDR IP address range. Maximum number of source CIDR IP ranges allowed is 5000.
    srcRegionCodes : [str], default is Undefined, optional
        The Unicode country codes whose IP addresses will be used to match against the source of traffic. Can only be specified if DIRECTION is ingress.
    srcSecureTags : [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProviderMatchSrcSecureTagsItems0], default is Undefined, optional
        List of secure tag values, which should be matched at the source of the traffic. For INGRESS rule, if all the srcSecureTag are INEFFECTIVE, and there is no srcIpRange, this rule will be ignored. Maximum number of source tag values allowed is 256.
    srcThreatIntelligences : [str], default is Undefined, optional
        Name of the Google Cloud Threat Intelligence list.
    """


    destAddressGroups?: [str]

    destFqdns?: [str]

    destIpRanges?: [str]

    destRegionCodes?: [str]

    destThreatIntelligences?: [str]

    layer4Configs?: [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProviderMatchLayer4ConfigsItems0]

    srcAddressGroups?: [str]

    srcFqdns?: [str]

    srcIpRanges?: [str]

    srcRegionCodes?: [str]

    srcSecureTags?: [ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProviderMatchSrcSecureTagsItems0]

    srcThreatIntelligences?: [str]


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProviderMatchLayer4ConfigsItems0:
    r"""
    compute gcp upbound io v1beta1 network firewall policy rule status at provider match layer4 configs items0

    Attributes
    ----------
    ipProtocol : str, default is Undefined, optional
        The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
    ports : [str], default is Undefined, optional
        An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: “.
    """


    ipProtocol?: str

    ports?: [str]


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProviderMatchSrcSecureTagsItems0:
    r"""
    compute gcp upbound io v1beta1 network firewall policy rule status at provider match src secure tags items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the secure tag, created with TagManager's TagValue API. @pattern tagValues/[0-9]+
    state : str, default is Undefined, optional
        [Output Only] State of the secure tag, either EFFECTIVE or INEFFECTIVE. A secure tag is INEFFECTIVE when it is deleted or its network is deleted.
    """


    name?: str

    state?: str


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusAtProviderTargetSecureTagsItems0:
    r"""
    compute gcp upbound io v1beta1 network firewall policy rule status at provider target secure tags items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the secure tag, created with TagManager's TagValue API. @pattern tagValues/[0-9]+
    state : str, default is Undefined, optional
        [Output Only] State of the secure tag, either EFFECTIVE or INEFFECTIVE. A secure tag is INEFFECTIVE when it is deleted or its network is deleted.
    """


    name?: str

    state?: str


schema ComputeGcpUpboundIoV1beta1NetworkFirewallPolicyRuleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


