"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema MemberV2:
    r"""
    MemberV2 is the Schema for the MemberV2s API. Manages a V2 member resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "lb.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MemberV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LbOpenstackCrossplaneIoV1alpha1MemberV2Spec, default is Undefined, required
        spec
    status : LbOpenstackCrossplaneIoV1alpha1MemberV2Status, default is Undefined, optional
        status
    """


    apiVersion: "lb.openstack.crossplane.io/v1alpha1" = "lb.openstack.crossplane.io/v1alpha1"

    kind: "MemberV2" = "MemberV2"

    metadata?: v1.ObjectMeta

    spec: LbOpenstackCrossplaneIoV1alpha1MemberV2Spec

    status?: LbOpenstackCrossplaneIoV1alpha1MemberV2Status


schema LbOpenstackCrossplaneIoV1alpha1MemberV2Spec:
    r"""
    MemberV2Spec defines the desired state of MemberV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : LbOpenstackCrossplaneIoV1alpha1MemberV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : LbOpenstackCrossplaneIoV1alpha1MemberV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : LbOpenstackCrossplaneIoV1alpha1MemberV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : LbOpenstackCrossplaneIoV1alpha1MemberV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : LbOpenstackCrossplaneIoV1alpha1MemberV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: LbOpenstackCrossplaneIoV1alpha1MemberV2SpecForProvider

    initProvider?: LbOpenstackCrossplaneIoV1alpha1MemberV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: LbOpenstackCrossplaneIoV1alpha1MemberV2SpecProviderConfigRef

    publishConnectionDetailsTo?: LbOpenstackCrossplaneIoV1alpha1MemberV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: LbOpenstackCrossplaneIoV1alpha1MemberV2SpecWriteConnectionSecretToRef


schema LbOpenstackCrossplaneIoV1alpha1MemberV2SpecForProvider:
    r"""
    lb openstack crossplane io v1alpha1 member v2 spec for provider

    Attributes
    ----------
    address : str, default is Undefined, optional
        The IP address of the member to receive traffic from
        the load balancer. Changing this creates a new member.
    adminStateUp : bool, default is Undefined, optional
        The administrative state of the member.
        A valid value is true (UP) or false (DOWN). Defaults to true.
    backup : bool, default is Undefined, optional
        Boolean that indicates whether that member works as a backup or not. Available
        only for Octavia >= 2.1.
    monitorAddress : str, default is Undefined, optional
        An alternate IP address used for health monitoring a backend member.
        Available only for Octavia
    monitorPort : float, default is Undefined, optional
        An alternate protocol port used for health monitoring a backend member.
        Available only for Octavia
    name : str, default is Undefined, optional
        Human-readable name for the member.
    poolId : str, default is Undefined, optional
        The id of the pool that this member will be assigned
        to. Changing this creates a new member.
    protocolPort : float, default is Undefined, optional
        The port on which to listen for client traffic.
        Changing this creates a new member.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create a member. If omitted, the region
        argument of the provider is used. Changing this creates a new member.
    subnetId : str, default is Undefined, optional
        The subnet in which to access the member. Changing
        this creates a new member.
    tags : [str], default is Undefined, optional
        A list of simple strings assigned to the member.
        Available only for Octavia >= 2.5.
    tenantId : str, default is Undefined, optional
        Required for admins. The UUID of the tenant who owns
        the member.  Only administrative users can specify a tenant UUID
        other than their own. Changing this creates a new member.
    weight : float, default is Undefined, optional
        A positive integer value that indicates the relative
        portion of traffic that this member should receive from the pool. For
        example, a member with a weight of 10 receives five times as much traffic
        as a member with a weight of 2. Defaults to 1.
    """


    address?: str

    adminStateUp?: bool

    backup?: bool

    monitorAddress?: str

    monitorPort?: float

    name?: str

    poolId?: str

    protocolPort?: float

    region?: str

    subnetId?: str

    tags?: [str]

    tenantId?: str

    weight?: float


schema LbOpenstackCrossplaneIoV1alpha1MemberV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    address : str, default is Undefined, optional
        The IP address of the member to receive traffic from
        the load balancer. Changing this creates a new member.
    adminStateUp : bool, default is Undefined, optional
        The administrative state of the member.
        A valid value is true (UP) or false (DOWN). Defaults to true.
    backup : bool, default is Undefined, optional
        Boolean that indicates whether that member works as a backup or not. Available
        only for Octavia >= 2.1.
    monitorAddress : str, default is Undefined, optional
        An alternate IP address used for health monitoring a backend member.
        Available only for Octavia
    monitorPort : float, default is Undefined, optional
        An alternate protocol port used for health monitoring a backend member.
        Available only for Octavia
    name : str, default is Undefined, optional
        Human-readable name for the member.
    poolId : str, default is Undefined, optional
        The id of the pool that this member will be assigned
        to. Changing this creates a new member.
    protocolPort : float, default is Undefined, optional
        The port on which to listen for client traffic.
        Changing this creates a new member.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create a member. If omitted, the region
        argument of the provider is used. Changing this creates a new member.
    subnetId : str, default is Undefined, optional
        The subnet in which to access the member. Changing
        this creates a new member.
    tags : [str], default is Undefined, optional
        A list of simple strings assigned to the member.
        Available only for Octavia >= 2.5.
    tenantId : str, default is Undefined, optional
        Required for admins. The UUID of the tenant who owns
        the member.  Only administrative users can specify a tenant UUID
        other than their own. Changing this creates a new member.
    weight : float, default is Undefined, optional
        A positive integer value that indicates the relative
        portion of traffic that this member should receive from the pool. For
        example, a member with a weight of 10 receives five times as much traffic
        as a member with a weight of 2. Defaults to 1.
    """


    address?: str

    adminStateUp?: bool

    backup?: bool

    monitorAddress?: str

    monitorPort?: float

    name?: str

    poolId?: str

    protocolPort?: float

    region?: str

    subnetId?: str

    tags?: [str]

    tenantId?: str

    weight?: float


schema LbOpenstackCrossplaneIoV1alpha1MemberV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LbOpenstackCrossplaneIoV1alpha1MemberV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LbOpenstackCrossplaneIoV1alpha1MemberV2SpecProviderConfigRefPolicy


schema LbOpenstackCrossplaneIoV1alpha1MemberV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LbOpenstackCrossplaneIoV1alpha1MemberV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : LbOpenstackCrossplaneIoV1alpha1MemberV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : LbOpenstackCrossplaneIoV1alpha1MemberV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: LbOpenstackCrossplaneIoV1alpha1MemberV2SpecPublishConnectionDetailsToConfigRef

    metadata?: LbOpenstackCrossplaneIoV1alpha1MemberV2SpecPublishConnectionDetailsToMetadata

    name: str


schema LbOpenstackCrossplaneIoV1alpha1MemberV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LbOpenstackCrossplaneIoV1alpha1MemberV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LbOpenstackCrossplaneIoV1alpha1MemberV2SpecPublishConnectionDetailsToConfigRefPolicy


schema LbOpenstackCrossplaneIoV1alpha1MemberV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LbOpenstackCrossplaneIoV1alpha1MemberV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema LbOpenstackCrossplaneIoV1alpha1MemberV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema LbOpenstackCrossplaneIoV1alpha1MemberV2Status:
    r"""
    MemberV2Status defines the observed state of MemberV2.

    Attributes
    ----------
    atProvider : LbOpenstackCrossplaneIoV1alpha1MemberV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LbOpenstackCrossplaneIoV1alpha1MemberV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: LbOpenstackCrossplaneIoV1alpha1MemberV2StatusAtProvider

    conditions?: [LbOpenstackCrossplaneIoV1alpha1MemberV2StatusConditionsItems0]

    observedGeneration?: int


schema LbOpenstackCrossplaneIoV1alpha1MemberV2StatusAtProvider:
    r"""
    lb openstack crossplane io v1alpha1 member v2 status at provider

    Attributes
    ----------
    address : str, default is Undefined, optional
        The IP address of the member to receive traffic from
        the load balancer. Changing this creates a new member.
    adminStateUp : bool, default is Undefined, optional
        The administrative state of the member.
        A valid value is true (UP) or false (DOWN). Defaults to true.
    backup : bool, default is Undefined, optional
        Boolean that indicates whether that member works as a backup or not. Available
        only for Octavia >= 2.1.
    id : str, default is Undefined, optional
        The unique ID for the member.
    monitorAddress : str, default is Undefined, optional
        An alternate IP address used for health monitoring a backend member.
        Available only for Octavia
    monitorPort : float, default is Undefined, optional
        An alternate protocol port used for health monitoring a backend member.
        Available only for Octavia
    name : str, default is Undefined, optional
        Human-readable name for the member.
    poolId : str, default is Undefined, optional
        The id of the pool that this member will be assigned
        to. Changing this creates a new member.
    protocolPort : float, default is Undefined, optional
        The port on which to listen for client traffic.
        Changing this creates a new member.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create a member. If omitted, the region
        argument of the provider is used. Changing this creates a new member.
    subnetId : str, default is Undefined, optional
        The subnet in which to access the member. Changing
        this creates a new member.
    tags : [str], default is Undefined, optional
        A list of simple strings assigned to the member.
        Available only for Octavia >= 2.5.
    tenantId : str, default is Undefined, optional
        Required for admins. The UUID of the tenant who owns
        the member.  Only administrative users can specify a tenant UUID
        other than their own. Changing this creates a new member.
    weight : float, default is Undefined, optional
        A positive integer value that indicates the relative
        portion of traffic that this member should receive from the pool. For
        example, a member with a weight of 10 receives five times as much traffic
        as a member with a weight of 2. Defaults to 1.
    """


    address?: str

    adminStateUp?: bool

    backup?: bool

    id?: str

    monitorAddress?: str

    monitorPort?: float

    name?: str

    poolId?: str

    protocolPort?: float

    region?: str

    subnetId?: str

    tags?: [str]

    tenantId?: str

    weight?: float


schema LbOpenstackCrossplaneIoV1alpha1MemberV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


