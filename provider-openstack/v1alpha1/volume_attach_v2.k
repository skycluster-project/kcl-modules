"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VolumeAttachV2:
    r"""
    VolumeAttachV2 is the Schema for the VolumeAttachV2s API. Attaches a Block Storage Volume to an Instance.

    Attributes
    ----------
    apiVersion : str, default is "compute.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VolumeAttachV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2Spec, default is Undefined, required
        spec
    status : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2Status, default is Undefined, optional
        status
    """


    apiVersion: "compute.openstack.crossplane.io/v1alpha1" = "compute.openstack.crossplane.io/v1alpha1"

    kind: "VolumeAttachV2" = "VolumeAttachV2"

    metadata?: v1.ObjectMeta

    spec: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2Spec

    status?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2Status


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2Spec:
    r"""
    VolumeAttachV2Spec defines the desired state of VolumeAttachV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProvider

    initProvider?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecWriteConnectionSecretToRef


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProvider:
    r"""
    compute openstack crossplane io v1alpha1 volume attach v2 spec for provider

    Attributes
    ----------
    device : str, default is Undefined, optional
        The device of the volume attachment (ex: /dev/vdc).
        NOTE: Being able to specify a device is dependent upon the hypervisor in
        use. Please use with caution.
    instanceId : str, default is Undefined, optional
        The ID of the Instance to attach the Volume to.
    instanceIdRef : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderInstanceIDRef, default is Undefined, optional
        instance Id ref
    instanceIdSelector : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderInstanceIDSelector, default is Undefined, optional
        instance Id selector
    multiattach : bool, default is Undefined, optional
        Enable attachment of multiattach-capable volumes.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Compute client.
        A Compute client is needed to create a volume attachment. If omitted, the
        region argument of the provider is used. Changing this creates a
        new volume attachment.
    tag : str, default is Undefined, optional
        Add a device role tag that is applied to the volume when
        attaching it to the VM. Changing this creates a new volume attachment with
        the new tag. Requires microversion >= 2.49.
    vendorOptions : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVendorOptions, default is Undefined, optional
        vendor options
    volumeId : str, default is Undefined, optional
        The ID of the Volume to attach to an Instance.
    volumeIdRef : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVolumeIDRef, default is Undefined, optional
        volume Id ref
    volumeIdSelector : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVolumeIDSelector, default is Undefined, optional
        volume Id selector
    """


    device?: str

    instanceId?: str

    instanceIdRef?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderInstanceIDRef

    instanceIdSelector?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderInstanceIDSelector

    multiattach?: bool

    region?: str

    tag?: str

    vendorOptions?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVendorOptions

    volumeId?: str

    volumeIdRef?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVolumeIDRef

    volumeIdSelector?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVolumeIDSelector


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderInstanceIDRef:
    r"""
    Reference to a InstanceV2 in compute to populate instanceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderInstanceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderInstanceIDRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderInstanceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderInstanceIDSelector:
    r"""
    Selector for a InstanceV2 in compute to populate instanceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderInstanceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderInstanceIDSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderInstanceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVendorOptions:
    r"""
    Map of additional vendor-specific options.
    Supported options are described below.

    Attributes
    ----------
    ignoreVolumeConfirmation : bool, default is Undefined, optional
        Boolean to control whether
        to ignore volume status confirmation of the attached volume. This can be helpful
        to work with some OpenStack clouds which don't have the Block Storage V3 API available.
    """


    ignoreVolumeConfirmation?: bool


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVolumeIDRef:
    r"""
    Reference to a VolumeV3 in blockstorage to populate volumeId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVolumeIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVolumeIDRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVolumeIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVolumeIDSelector:
    r"""
    Selector for a VolumeV3 in blockstorage to populate volumeId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVolumeIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVolumeIDSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecForProviderVolumeIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    device : str, default is Undefined, optional
        The device of the volume attachment (ex: /dev/vdc).
        NOTE: Being able to specify a device is dependent upon the hypervisor in
        use. Please use with caution.
    instanceId : str, default is Undefined, optional
        The ID of the Instance to attach the Volume to.
    instanceIdRef : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderInstanceIDRef, default is Undefined, optional
        instance Id ref
    instanceIdSelector : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderInstanceIDSelector, default is Undefined, optional
        instance Id selector
    multiattach : bool, default is Undefined, optional
        Enable attachment of multiattach-capable volumes.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Compute client.
        A Compute client is needed to create a volume attachment. If omitted, the
        region argument of the provider is used. Changing this creates a
        new volume attachment.
    tag : str, default is Undefined, optional
        Add a device role tag that is applied to the volume when
        attaching it to the VM. Changing this creates a new volume attachment with
        the new tag. Requires microversion >= 2.49.
    vendorOptions : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVendorOptions, default is Undefined, optional
        vendor options
    volumeId : str, default is Undefined, optional
        The ID of the Volume to attach to an Instance.
    volumeIdRef : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVolumeIDRef, default is Undefined, optional
        volume Id ref
    volumeIdSelector : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVolumeIDSelector, default is Undefined, optional
        volume Id selector
    """


    device?: str

    instanceId?: str

    instanceIdRef?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderInstanceIDRef

    instanceIdSelector?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderInstanceIDSelector

    multiattach?: bool

    region?: str

    tag?: str

    vendorOptions?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVendorOptions

    volumeId?: str

    volumeIdRef?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVolumeIDRef

    volumeIdSelector?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVolumeIDSelector


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderInstanceIDRef:
    r"""
    Reference to a InstanceV2 in compute to populate instanceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderInstanceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderInstanceIDRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderInstanceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderInstanceIDSelector:
    r"""
    Selector for a InstanceV2 in compute to populate instanceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderInstanceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderInstanceIDSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderInstanceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVendorOptions:
    r"""
    Map of additional vendor-specific options.
    Supported options are described below.

    Attributes
    ----------
    ignoreVolumeConfirmation : bool, default is Undefined, optional
        Boolean to control whether
        to ignore volume status confirmation of the attached volume. This can be helpful
        to work with some OpenStack clouds which don't have the Block Storage V3 API available.
    """


    ignoreVolumeConfirmation?: bool


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVolumeIDRef:
    r"""
    Reference to a VolumeV3 in blockstorage to populate volumeId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVolumeIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVolumeIDRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVolumeIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVolumeIDSelector:
    r"""
    Selector for a VolumeV3 in blockstorage to populate volumeId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVolumeIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVolumeIDSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecInitProviderVolumeIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecProviderConfigRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2Status:
    r"""
    VolumeAttachV2Status defines the observed state of VolumeAttachV2.

    Attributes
    ----------
    atProvider : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2StatusAtProvider

    conditions?: [ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2StatusConditionsItems0]

    observedGeneration?: int


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2StatusAtProvider:
    r"""
    compute openstack crossplane io v1alpha1 volume attach v2 status at provider

    Attributes
    ----------
    device : str, default is Undefined, optional
        The device of the volume attachment (ex: /dev/vdc).
        NOTE: Being able to specify a device is dependent upon the hypervisor in
        use. Please use with caution.
    id : str, default is Undefined, optional
        id
    instanceId : str, default is Undefined, optional
        The ID of the Instance to attach the Volume to.
    multiattach : bool, default is Undefined, optional
        Enable attachment of multiattach-capable volumes.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Compute client.
        A Compute client is needed to create a volume attachment. If omitted, the
        region argument of the provider is used. Changing this creates a
        new volume attachment.
    tag : str, default is Undefined, optional
        Add a device role tag that is applied to the volume when
        attaching it to the VM. Changing this creates a new volume attachment with
        the new tag. Requires microversion >= 2.49.
    vendorOptions : ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2StatusAtProviderVendorOptions, default is Undefined, optional
        vendor options
    volumeId : str, default is Undefined, optional
        The ID of the Volume to attach to an Instance.
    """


    device?: str

    id?: str

    instanceId?: str

    multiattach?: bool

    region?: str

    tag?: str

    vendorOptions?: ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2StatusAtProviderVendorOptions

    volumeId?: str


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2StatusAtProviderVendorOptions:
    r"""
    Map of additional vendor-specific options.
    Supported options are described below.

    Attributes
    ----------
    ignoreVolumeConfirmation : bool, default is Undefined, optional
        Boolean to control whether
        to ignore volume status confirmation of the attached volume. This can be helpful
        to work with some OpenStack clouds which don't have the Block Storage V3 API available.
    """


    ignoreVolumeConfirmation?: bool


schema ComputeOpenstackCrossplaneIoV1alpha1VolumeAttachV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


