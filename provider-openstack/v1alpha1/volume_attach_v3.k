"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VolumeAttachV3:
    r"""
    VolumeAttachV3 is the Schema for the VolumeAttachV3s API. Creates an attachment connection to a Block Storage volume

    Attributes
    ----------
    apiVersion : str, default is "blockstorage.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VolumeAttachV3", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3Spec, default is Undefined, required
        spec
    status : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3Status, default is Undefined, optional
        status
    """


    apiVersion: "blockstorage.openstack.crossplane.io/v1alpha1" = "blockstorage.openstack.crossplane.io/v1alpha1"

    kind: "VolumeAttachV3" = "VolumeAttachV3"

    metadata?: v1.ObjectMeta

    spec: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3Spec

    status?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3Status


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3Spec:
    r"""
    VolumeAttachV3Spec defines the desired state of VolumeAttachV3

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProvider, default is Undefined, required
        for provider
    initProvider : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProvider

    initProvider?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecProviderConfigRef

    publishConnectionDetailsTo?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecWriteConnectionSecretToRef


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProvider:
    r"""
    blockstorage openstack crossplane io v1alpha1 volume attach v3 spec for provider

    Attributes
    ----------
    attachMode : str, default is Undefined, optional
        Specify whether to attach the volume as Read-Only
        (ro) or Read-Write (rw). Only values of ro and rw are accepted.
        If left unspecified, the Block Storage API will apply a default of rw.
    device : str, default is Undefined, optional
        The device to tell the Block Storage service this
        volume will be attached as. This is purely for informational purposes.
        You can specify auto or a device such as /dev/vdc.
    hostName : str, default is Undefined, optional
        The host to attach the volume to.
    initiator : str, default is Undefined, optional
        The iSCSI initiator string to make the connection.
    ipAddress : str, default is Undefined, optional
        The IP address of the host_name above.
    multipath : bool, default is Undefined, optional
        Whether to connect to this volume via multipath.
    osType : str, default is Undefined, optional
        The iSCSI initiator OS type.
    platform : str, default is Undefined, optional
        The iSCSI initiator platform.
    region : str, default is Undefined, optional
        The region in which to obtain the V3 Block Storage
        client. A Block Storage client is needed to create a volume attachment.
        If omitted, the region argument of the provider is used. Changing this
        creates a new volume attachment.
    volumeId : str, default is Undefined, optional
        The ID of the Volume to attach to an Instance.
    volumeIdRef : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProviderVolumeIDRef, default is Undefined, optional
        volume Id ref
    volumeIdSelector : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProviderVolumeIDSelector, default is Undefined, optional
        volume Id selector
    wwnn : str, default is Undefined, optional
        A wwnn name. Used for Fibre Channel connections.
    wwpn : [str], default is Undefined, optional
        An array of wwpn strings. Used for Fibre Channel
        connections.
    """


    attachMode?: str

    device?: str

    hostName?: str

    initiator?: str

    ipAddress?: str

    multipath?: bool

    osType?: str

    platform?: str

    region?: str

    volumeId?: str

    volumeIdRef?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProviderVolumeIDRef

    volumeIdSelector?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProviderVolumeIDSelector

    wwnn?: str

    wwpn?: [str]


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProviderVolumeIDRef:
    r"""
    Reference to a VolumeV3 in blockstorage to populate volumeId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProviderVolumeIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProviderVolumeIDRefPolicy


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProviderVolumeIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProviderVolumeIDSelector:
    r"""
    Selector for a VolumeV3 in blockstorage to populate volumeId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProviderVolumeIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProviderVolumeIDSelectorPolicy


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecForProviderVolumeIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    attachMode : str, default is Undefined, optional
        Specify whether to attach the volume as Read-Only
        (ro) or Read-Write (rw). Only values of ro and rw are accepted.
        If left unspecified, the Block Storage API will apply a default of rw.
    device : str, default is Undefined, optional
        The device to tell the Block Storage service this
        volume will be attached as. This is purely for informational purposes.
        You can specify auto or a device such as /dev/vdc.
    hostName : str, default is Undefined, optional
        The host to attach the volume to.
    initiator : str, default is Undefined, optional
        The iSCSI initiator string to make the connection.
    ipAddress : str, default is Undefined, optional
        The IP address of the host_name above.
    multipath : bool, default is Undefined, optional
        Whether to connect to this volume via multipath.
    osType : str, default is Undefined, optional
        The iSCSI initiator OS type.
    platform : str, default is Undefined, optional
        The iSCSI initiator platform.
    region : str, default is Undefined, optional
        The region in which to obtain the V3 Block Storage
        client. A Block Storage client is needed to create a volume attachment.
        If omitted, the region argument of the provider is used. Changing this
        creates a new volume attachment.
    volumeId : str, default is Undefined, optional
        The ID of the Volume to attach to an Instance.
    volumeIdRef : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProviderVolumeIDRef, default is Undefined, optional
        volume Id ref
    volumeIdSelector : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProviderVolumeIDSelector, default is Undefined, optional
        volume Id selector
    wwnn : str, default is Undefined, optional
        A wwnn name. Used for Fibre Channel connections.
    wwpn : [str], default is Undefined, optional
        An array of wwpn strings. Used for Fibre Channel
        connections.
    """


    attachMode?: str

    device?: str

    hostName?: str

    initiator?: str

    ipAddress?: str

    multipath?: bool

    osType?: str

    platform?: str

    region?: str

    volumeId?: str

    volumeIdRef?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProviderVolumeIDRef

    volumeIdSelector?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProviderVolumeIDSelector

    wwnn?: str

    wwpn?: [str]


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProviderVolumeIDRef:
    r"""
    Reference to a VolumeV3 in blockstorage to populate volumeId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProviderVolumeIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProviderVolumeIDRefPolicy


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProviderVolumeIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProviderVolumeIDSelector:
    r"""
    Selector for a VolumeV3 in blockstorage to populate volumeId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProviderVolumeIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProviderVolumeIDSelectorPolicy


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecInitProviderVolumeIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecProviderConfigRefPolicy


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecPublishConnectionDetailsToConfigRef

    metadata?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecPublishConnectionDetailsToMetadata

    name: str


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecPublishConnectionDetailsToConfigRefPolicy


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3Status:
    r"""
    VolumeAttachV3Status defines the observed state of VolumeAttachV3.

    Attributes
    ----------
    atProvider : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3StatusAtProvider

    conditions?: [BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3StatusConditionsItems0]

    observedGeneration?: int


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3StatusAtProvider:
    r"""
    blockstorage openstack crossplane io v1alpha1 volume attach v3 status at provider

    Attributes
    ----------
    attachMode : str, default is Undefined, optional
        Specify whether to attach the volume as Read-Only
        (ro) or Read-Write (rw). Only values of ro and rw are accepted.
        If left unspecified, the Block Storage API will apply a default of rw.
    device : str, default is Undefined, optional
        The device to tell the Block Storage service this
        volume will be attached as. This is purely for informational purposes.
        You can specify auto or a device such as /dev/vdc.
    driverVolumeType : str, default is Undefined, optional
        The storage driver that the volume is based on.
    hostName : str, default is Undefined, optional
        The host to attach the volume to.
    id : str, default is Undefined, optional
        id
    initiator : str, default is Undefined, optional
        The iSCSI initiator string to make the connection.
    ipAddress : str, default is Undefined, optional
        The IP address of the host_name above.
    mountPointBase : str, default is Undefined, optional
        A mount point base name for shared storage.
    multipath : bool, default is Undefined, optional
        Whether to connect to this volume via multipath.
    osType : str, default is Undefined, optional
        The iSCSI initiator OS type.
    platform : str, default is Undefined, optional
        The iSCSI initiator platform.
    region : str, default is Undefined, optional
        The region in which to obtain the V3 Block Storage
        client. A Block Storage client is needed to create a volume attachment.
        If omitted, the region argument of the provider is used. Changing this
        creates a new volume attachment.
    volumeId : str, default is Undefined, optional
        The ID of the Volume to attach to an Instance.
    wwnn : str, default is Undefined, optional
        A wwnn name. Used for Fibre Channel connections.
    wwpn : [str], default is Undefined, optional
        An array of wwpn strings. Used for Fibre Channel
        connections.
    """


    attachMode?: str

    device?: str

    driverVolumeType?: str

    hostName?: str

    id?: str

    initiator?: str

    ipAddress?: str

    mountPointBase?: str

    multipath?: bool

    osType?: str

    platform?: str

    region?: str

    volumeId?: str

    wwnn?: str

    wwpn?: [str]


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeAttachV3StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


