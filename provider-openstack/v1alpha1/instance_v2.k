"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema InstanceV2:
    r"""
    InstanceV2 is the Schema for the InstanceV2s API. Manages a V2 VM instance resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "compute.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "InstanceV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2Spec, default is Undefined, required
        spec
    status : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2Status, default is Undefined, optional
        status
    """


    apiVersion: "compute.openstack.crossplane.io/v1alpha1" = "compute.openstack.crossplane.io/v1alpha1"

    kind: "InstanceV2" = "InstanceV2"

    metadata?: v1.ObjectMeta

    spec: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2Spec

    status?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2Status


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2Spec:
    r"""
    InstanceV2Spec defines the desired state of InstanceV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProvider

    initProvider?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecWriteConnectionSecretToRef


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProvider:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 spec for provider

    Attributes
    ----------
    adminPassSecretRef : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderAdminPassSecretRef, default is Undefined, optional
        admin pass secret ref
    availabilityZone : str, default is Undefined, optional
        The availability zone in which to create
        the server. Conflicts with availability_zone_hints. Changing this creates
        a new server.
    availabilityZoneHints : str, default is Undefined, optional
        The availability zone in which to
        create the server. This argument is preferred to availability_zone, when
        scheduling the server on a
        particular
        host or node. Conflicts with availability_zone. Changing this creates a
        new server.
    blockDevice : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0], default is Undefined, optional
        Configuration of block devices. The block_device
        structure is documented below. Changing this creates a new server.
        You can specify multiple block devices which will create an instance with
        multiple disks. This configuration is very flexible, so please see the
        following reference
        for more information.
    configDrive : bool, default is Undefined, optional
        Whether to use the config_drive feature to
        configure the instance. Changing this creates a new server.
    flavorId : str, default is Undefined, optional
        The flavor ID of
        the desired flavor for the server. Changing this resizes the existing server.
    flavorIdRef : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderFlavorIDRef, default is Undefined, optional
        flavor Id ref
    flavorIdSelector : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderFlavorIDSelector, default is Undefined, optional
        flavor Id selector
    flavorName : str, default is Undefined, optional
        The name of the
        desired flavor for the server. Changing this resizes the existing server.
    forceDelete : bool, default is Undefined, optional
        Whether to force the OpenStack instance to be
        forcefully deleted. This is useful for environments that have reclaim / soft
        deletion enabled.
    hypervisorHostname : str, default is Undefined, optional
        Specifies the exact hypervisor hostname on
        which to create the instance. When provided, this parameter is included in
        the request to Nova, directing the scheduler to launch the instance on the
        specified host. Note: This option requires administrative privileges and a
        Nova microversion of 2.74 or later. Conflicts with personality. Changing
        this value forces a new instance to be created.
    imageId : str, default is Undefined, optional
        The image ID of
        the desired image for the server. Changing this rebuilds the existing
        server.
    imageName : str, default is Undefined, optional
        The name of the
        desired image for the server. Changing this rebuilds the existing server.
    keyPair : str, default is Undefined, optional
        The name of a key pair to put on the server. The key
        pair must already be created and associated with the tenant's account.
        Changing this creates a new server.
    keyPairRef : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderKeyPairRef, default is Undefined, optional
        key pair ref
    keyPairSelector : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderKeyPairSelector, default is Undefined, optional
        key pair selector
    metadata : {str:str}, default is Undefined, optional
        Metadata key/value pairs to make available from
        within the instance. Changing this updates the existing server metadata.
    name : str, default is Undefined, optional
        A unique name for the resource.
    network : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0], default is Undefined, optional
        An array of one or more networks to attach to the
        instance. The network object structure is documented below. Changing this
        creates a new server.
    networkMode : str, default is Undefined, optional
        Special string for network option to create
        the server. network_mode can be "auto" or "none".
        Please see the following reference for more information. Conflicts with network.
    personality : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderPersonalityItems0], default is Undefined, optional
        Customize the personality of an instance by
        defining one or more files and their contents. The personality structure is
        described below. Conflicts with hypervisor_hostname. Changing this rebuilds
        the existing server.
    powerState : str, default is Undefined, optional
        Provide the VM state. Only 'active', 'shutoff', 'paused'
        and 'shelved_offloaded' are supported values.
        Note: If the initial power_state is the shutoff or paused
        the VM will be stopped immediately after build and the provisioners like
        remote-exec or files are not supported.
    region : str, default is Undefined, optional
        The region in which to create the server instance. If
        omitted, the region argument of the provider is used. Changing this
        creates a new server.
    schedulerHints : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSchedulerHintsItems0], default is Undefined, optional
        Provide the Nova scheduler with hints on how
        the instance should be launched. The available hints are described below.
    securityGroups : [str], default is Undefined, optional
        An array of one or more security group names
        to associate with the server. Changing this results in adding/removing
        security groups from the existing server. Note: When attaching the
        instance to networks using Ports, place the security groups on the Port
        and not the instance. Note: Names should be used and not ids, as ids
        trigger unnecessary updates.
    securityGroupsRefs : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSecurityGroupsRefsItems0], default is Undefined, optional
        References to SecgroupV2 in networking to populate securityGroups.
    securityGroupsSelector : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSecurityGroupsSelector, default is Undefined, optional
        security groups selector
    stopBeforeDestroy : bool, default is Undefined, optional
        Whether to try stop instance gracefully
        before destroying it, thus giving chance for guest OS daemons to stop correctly.
        If instance doesn't stop within timeout, it will be destroyed anyway.
    tags : [str], default is Undefined, optional
        A set of string tags for the instance. Changing this
        updates the existing instance tags.
    userData : str, default is Undefined, optional
        The user data to provide when launching the instance.
        Changing this creates a new server.
    vendorOptions : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderVendorOptions, default is Undefined, optional
        vendor options
    """


    adminPassSecretRef?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderAdminPassSecretRef

    availabilityZone?: str

    availabilityZoneHints?: str

    blockDevice?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0]

    configDrive?: bool

    flavorId?: str

    flavorIdRef?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderFlavorIDRef

    flavorIdSelector?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderFlavorIDSelector

    flavorName?: str

    forceDelete?: bool

    hypervisorHostname?: str

    imageId?: str

    imageName?: str

    keyPair?: str

    keyPairRef?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderKeyPairRef

    keyPairSelector?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderKeyPairSelector

    metadata?: {str:str}

    name?: str

    network?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0]

    networkMode?: str

    personality?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderPersonalityItems0]

    powerState?: str

    region?: str

    schedulerHints?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSchedulerHintsItems0]

    securityGroups?: [str]

    securityGroupsRefs?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSecurityGroupsRefsItems0]

    securityGroupsSelector?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSecurityGroupsSelector

    stopBeforeDestroy?: bool

    tags?: [str]

    userData?: str

    vendorOptions?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderVendorOptions


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderAdminPassSecretRef:
    r"""
    The administrative password to assign to the server.
    Changing this changes the root password on the existing server.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 spec for provider block device items0

    Attributes
    ----------
    bootIndex : float, default is Undefined, optional
        The boot index of the volume. It defaults to 0.
        Changing this creates a new server.
    deleteOnTermination : bool, default is Undefined, optional
        Delete the volume / block device upon
        termination of the instance. Defaults to false. Changing this creates a
        new server.
    destinationType : str, default is Undefined, optional
        The type that gets created. Possible values
        are "volume" and "local". Changing this creates a new server.
    deviceType : str, default is Undefined, optional
        The low-level device type that will be used. Most
        common thing is to leave this empty. Changing this creates a new server.
    diskBus : str, default is Undefined, optional
        The low-level disk bus that will be used. Most common
        thing is to leave this empty. Changing this creates a new server.
    guestFormat : str, default is Undefined, optional
        Specifies the guest server disk file system format,
        such as ext2, ext3, ext4, xfs or swap. Swap block device mappings
        have the following restrictions: source_type must be blank and destination_type
        must be local and only one swap disk per server and the size of the swap disk
        must be less than or equal to the swap size of the flavor. Changing this
        creates a new server.
    multiattach : bool, default is Undefined, optional
        Enable the attachment of multiattach-capable
        volumes.
    sourceType : str, default is Undefined, optional
        The source type of the device. Must be one of
        "blank", "image", "volume", or "snapshot". Changing this creates a new
        server.
    uuid : str, default is Undefined, optional
        The UUID of
        the image, volume, or snapshot. Changing this creates a new server.
    uuidRef : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0UUIDRef, default is Undefined, optional
        uuid ref
    uuidSelector : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0UUIDSelector, default is Undefined, optional
        uuid selector
    volumeSize : float, default is Undefined, optional
        The size of the volume to create (in gigabytes). Required
        in the following combinations: source=image and destination=volume,
        source=blank and destination=local, and source=blank and destination=volume.
        Changing this creates a new server.
    volumeType : str, default is Undefined, optional
        The volume type that will be used, for example SSD
        or HDD storage. The available options depend on how your specific OpenStack
        cloud is configured and what classes of storage are provided. Changing this
        creates a new server.
    """


    bootIndex?: float

    deleteOnTermination?: bool

    destinationType?: str

    deviceType?: str

    diskBus?: str

    guestFormat?: str

    multiattach?: bool

    sourceType?: str

    uuid?: str

    uuidRef?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0UUIDRef

    uuidSelector?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0UUIDSelector

    volumeSize?: float

    volumeType?: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0UUIDRef:
    r"""
    Reference to a VolumeV3 in blockstorage to populate uuid.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0UUIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0UUIDRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0UUIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0UUIDSelector:
    r"""
    Selector for a VolumeV3 in blockstorage to populate uuid.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0UUIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0UUIDSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderBlockDeviceItems0UUIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderFlavorIDRef:
    r"""
    Reference to a FlavorV2 in compute to populate flavorId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderFlavorIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderFlavorIDRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderFlavorIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderFlavorIDSelector:
    r"""
    Selector for a FlavorV2 in compute to populate flavorId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderFlavorIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderFlavorIDSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderFlavorIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderKeyPairRef:
    r"""
    Reference to a KeypairV2 in compute to populate keyPair.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderKeyPairRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderKeyPairRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderKeyPairRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderKeyPairSelector:
    r"""
    Selector for a KeypairV2 in compute to populate keyPair.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderKeyPairSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderKeyPairSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderKeyPairSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 spec for provider network items0

    Attributes
    ----------
    accessNetwork : bool, default is Undefined, optional
        Specifies if this network should be used for
        provisioning access. Accepts true or false. Defaults to false.
    fixedIpV4 : str, default is Undefined, optional
        Specifies a fixed IPv4 address to be used on this
        network. Changing this creates a new server.
    fixedIpV6 : str, default is Undefined, optional
        fixed Ip v6
    name : str, default is Undefined, optional
        The human-readable
        name of the network. Changing this creates a new server.
    port : str, default is Undefined, optional
        The port UUID of a
        network to attach to the server. Changing this creates a new server.
    portRef : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0PortRef, default is Undefined, optional
        port ref
    portSelector : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0PortSelector, default is Undefined, optional
        port selector
    uuid : str, default is Undefined, optional
        The network UUID to
        attach to the server. Changing this creates a new server.
    """


    accessNetwork?: bool

    fixedIpV4?: str

    fixedIpV6?: str

    name?: str

    port?: str

    portRef?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0PortRef

    portSelector?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0PortSelector

    uuid?: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0PortRef:
    r"""
    Reference to a PortV2 in networking to populate port.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0PortRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0PortRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0PortRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0PortSelector:
    r"""
    Selector for a PortV2 in networking to populate port.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0PortSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0PortSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderNetworkItems0PortSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderPersonalityItems0:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 spec for provider personality items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The contents of the file. Limited to 255 bytes.
    file : str, default is Undefined, optional
        The absolute path of the destination file.
    """


    content?: str

    file?: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSchedulerHintsItems0:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 spec for provider scheduler hints items0

    Attributes
    ----------
    additionalProperties : {str:str}, default is Undefined, optional
        Arbitrary key/value pairs of additional
        properties to pass to the scheduler.
    buildNearHostIp : str, default is Undefined, optional
        An IP Address in CIDR form. The instance
        will be placed on a compute node that is in the same subnet.
    differentCell : [str], default is Undefined, optional
        The names of cells where not to build the instance.
    differentHost : [str], default is Undefined, optional
        A list of instance UUIDs. The instance will
        be scheduled on a different host than all other instances.
    group : str, default is Undefined, optional
        A UUID of a Server Group. The instance will be placed
        into that group. See reference
        for details on managing servergroup resources
    query : [str], default is Undefined, optional
        A conditional query that a compute node must pass in
        order to host an instance. The query must use the JsonFilter syntax
        which is described
        here.
        At this time, only simple queries are supported. Compound queries using
        and, or, or not are not supported. An example of a simple query is:
    sameHost : [str], default is Undefined, optional
        A list of instance UUIDs. The instance will be
        scheduled on the same host of those specified.
    targetCell : str, default is Undefined, optional
        The name of a cell to host the instance.
    """


    additionalProperties?: {str:str}

    buildNearHostIp?: str

    differentCell?: [str]

    differentHost?: [str]

    group?: str

    query?: [str]

    sameHost?: [str]

    targetCell?: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSecurityGroupsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSecurityGroupsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSecurityGroupsRefsItems0Policy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSecurityGroupsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSecurityGroupsSelector:
    r"""
    Selector for a list of SecgroupV2 in networking to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSecurityGroupsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSecurityGroupsSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderSecurityGroupsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecForProviderVendorOptions:
    r"""
    Map of additional vendor-specific options.
    Supported options are described below.

    Attributes
    ----------
    detachPortsBeforeDestroy : bool, default is Undefined, optional
        Whether to try to detach all attached
        ports to the vm before destroying it to make sure the port state is correct
        after the vm destruction. This is helpful when the port is not deleted.
    ignoreResizeConfirmation : bool, default is Undefined, optional
        Boolean to control whether
        to ignore manual confirmation of the instance resizing. This can be helpful
        to work with some OpenStack clouds which automatically confirm resizing of
        instances after some timeout.
    """


    detachPortsBeforeDestroy?: bool

    ignoreResizeConfirmation?: bool


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    adminPassSecretRef : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderAdminPassSecretRef, default is Undefined, optional
        admin pass secret ref
    availabilityZone : str, default is Undefined, optional
        The availability zone in which to create
        the server. Conflicts with availability_zone_hints. Changing this creates
        a new server.
    availabilityZoneHints : str, default is Undefined, optional
        The availability zone in which to
        create the server. This argument is preferred to availability_zone, when
        scheduling the server on a
        particular
        host or node. Conflicts with availability_zone. Changing this creates a
        new server.
    blockDevice : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0], default is Undefined, optional
        Configuration of block devices. The block_device
        structure is documented below. Changing this creates a new server.
        You can specify multiple block devices which will create an instance with
        multiple disks. This configuration is very flexible, so please see the
        following reference
        for more information.
    configDrive : bool, default is Undefined, optional
        Whether to use the config_drive feature to
        configure the instance. Changing this creates a new server.
    flavorId : str, default is Undefined, optional
        The flavor ID of
        the desired flavor for the server. Changing this resizes the existing server.
    flavorIdRef : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderFlavorIDRef, default is Undefined, optional
        flavor Id ref
    flavorIdSelector : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderFlavorIDSelector, default is Undefined, optional
        flavor Id selector
    flavorName : str, default is Undefined, optional
        The name of the
        desired flavor for the server. Changing this resizes the existing server.
    forceDelete : bool, default is Undefined, optional
        Whether to force the OpenStack instance to be
        forcefully deleted. This is useful for environments that have reclaim / soft
        deletion enabled.
    hypervisorHostname : str, default is Undefined, optional
        Specifies the exact hypervisor hostname on
        which to create the instance. When provided, this parameter is included in
        the request to Nova, directing the scheduler to launch the instance on the
        specified host. Note: This option requires administrative privileges and a
        Nova microversion of 2.74 or later. Conflicts with personality. Changing
        this value forces a new instance to be created.
    imageId : str, default is Undefined, optional
        The image ID of
        the desired image for the server. Changing this rebuilds the existing
        server.
    imageName : str, default is Undefined, optional
        The name of the
        desired image for the server. Changing this rebuilds the existing server.
    keyPair : str, default is Undefined, optional
        The name of a key pair to put on the server. The key
        pair must already be created and associated with the tenant's account.
        Changing this creates a new server.
    keyPairRef : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderKeyPairRef, default is Undefined, optional
        key pair ref
    keyPairSelector : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderKeyPairSelector, default is Undefined, optional
        key pair selector
    metadata : {str:str}, default is Undefined, optional
        Metadata key/value pairs to make available from
        within the instance. Changing this updates the existing server metadata.
    name : str, default is Undefined, optional
        A unique name for the resource.
    network : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0], default is Undefined, optional
        An array of one or more networks to attach to the
        instance. The network object structure is documented below. Changing this
        creates a new server.
    networkMode : str, default is Undefined, optional
        Special string for network option to create
        the server. network_mode can be "auto" or "none".
        Please see the following reference for more information. Conflicts with network.
    personality : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderPersonalityItems0], default is Undefined, optional
        Customize the personality of an instance by
        defining one or more files and their contents. The personality structure is
        described below. Conflicts with hypervisor_hostname. Changing this rebuilds
        the existing server.
    powerState : str, default is Undefined, optional
        Provide the VM state. Only 'active', 'shutoff', 'paused'
        and 'shelved_offloaded' are supported values.
        Note: If the initial power_state is the shutoff or paused
        the VM will be stopped immediately after build and the provisioners like
        remote-exec or files are not supported.
    region : str, default is Undefined, optional
        The region in which to create the server instance. If
        omitted, the region argument of the provider is used. Changing this
        creates a new server.
    schedulerHints : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSchedulerHintsItems0], default is Undefined, optional
        Provide the Nova scheduler with hints on how
        the instance should be launched. The available hints are described below.
    securityGroups : [str], default is Undefined, optional
        An array of one or more security group names
        to associate with the server. Changing this results in adding/removing
        security groups from the existing server. Note: When attaching the
        instance to networks using Ports, place the security groups on the Port
        and not the instance. Note: Names should be used and not ids, as ids
        trigger unnecessary updates.
    securityGroupsRefs : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSecurityGroupsRefsItems0], default is Undefined, optional
        References to SecgroupV2 in networking to populate securityGroups.
    securityGroupsSelector : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSecurityGroupsSelector, default is Undefined, optional
        security groups selector
    stopBeforeDestroy : bool, default is Undefined, optional
        Whether to try stop instance gracefully
        before destroying it, thus giving chance for guest OS daemons to stop correctly.
        If instance doesn't stop within timeout, it will be destroyed anyway.
    tags : [str], default is Undefined, optional
        A set of string tags for the instance. Changing this
        updates the existing instance tags.
    userData : str, default is Undefined, optional
        The user data to provide when launching the instance.
        Changing this creates a new server.
    vendorOptions : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderVendorOptions, default is Undefined, optional
        vendor options
    """


    adminPassSecretRef?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderAdminPassSecretRef

    availabilityZone?: str

    availabilityZoneHints?: str

    blockDevice?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0]

    configDrive?: bool

    flavorId?: str

    flavorIdRef?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderFlavorIDRef

    flavorIdSelector?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderFlavorIDSelector

    flavorName?: str

    forceDelete?: bool

    hypervisorHostname?: str

    imageId?: str

    imageName?: str

    keyPair?: str

    keyPairRef?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderKeyPairRef

    keyPairSelector?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderKeyPairSelector

    metadata?: {str:str}

    name?: str

    network?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0]

    networkMode?: str

    personality?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderPersonalityItems0]

    powerState?: str

    region?: str

    schedulerHints?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSchedulerHintsItems0]

    securityGroups?: [str]

    securityGroupsRefs?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSecurityGroupsRefsItems0]

    securityGroupsSelector?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSecurityGroupsSelector

    stopBeforeDestroy?: bool

    tags?: [str]

    userData?: str

    vendorOptions?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderVendorOptions


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderAdminPassSecretRef:
    r"""
    The administrative password to assign to the server.
    Changing this changes the root password on the existing server.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 spec init provider block device items0

    Attributes
    ----------
    bootIndex : float, default is Undefined, optional
        The boot index of the volume. It defaults to 0.
        Changing this creates a new server.
    deleteOnTermination : bool, default is Undefined, optional
        Delete the volume / block device upon
        termination of the instance. Defaults to false. Changing this creates a
        new server.
    destinationType : str, default is Undefined, optional
        The type that gets created. Possible values
        are "volume" and "local". Changing this creates a new server.
    deviceType : str, default is Undefined, optional
        The low-level device type that will be used. Most
        common thing is to leave this empty. Changing this creates a new server.
    diskBus : str, default is Undefined, optional
        The low-level disk bus that will be used. Most common
        thing is to leave this empty. Changing this creates a new server.
    guestFormat : str, default is Undefined, optional
        Specifies the guest server disk file system format,
        such as ext2, ext3, ext4, xfs or swap. Swap block device mappings
        have the following restrictions: source_type must be blank and destination_type
        must be local and only one swap disk per server and the size of the swap disk
        must be less than or equal to the swap size of the flavor. Changing this
        creates a new server.
    multiattach : bool, default is Undefined, optional
        Enable the attachment of multiattach-capable
        volumes.
    sourceType : str, default is Undefined, optional
        The source type of the device. Must be one of
        "blank", "image", "volume", or "snapshot". Changing this creates a new
        server.
    uuid : str, default is Undefined, optional
        The UUID of
        the image, volume, or snapshot. Changing this creates a new server.
    uuidRef : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0UUIDRef, default is Undefined, optional
        uuid ref
    uuidSelector : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0UUIDSelector, default is Undefined, optional
        uuid selector
    volumeSize : float, default is Undefined, optional
        The size of the volume to create (in gigabytes). Required
        in the following combinations: source=image and destination=volume,
        source=blank and destination=local, and source=blank and destination=volume.
        Changing this creates a new server.
    volumeType : str, default is Undefined, optional
        The volume type that will be used, for example SSD
        or HDD storage. The available options depend on how your specific OpenStack
        cloud is configured and what classes of storage are provided. Changing this
        creates a new server.
    """


    bootIndex?: float

    deleteOnTermination?: bool

    destinationType?: str

    deviceType?: str

    diskBus?: str

    guestFormat?: str

    multiattach?: bool

    sourceType?: str

    uuid?: str

    uuidRef?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0UUIDRef

    uuidSelector?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0UUIDSelector

    volumeSize?: float

    volumeType?: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0UUIDRef:
    r"""
    Reference to a VolumeV3 in blockstorage to populate uuid.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0UUIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0UUIDRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0UUIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0UUIDSelector:
    r"""
    Selector for a VolumeV3 in blockstorage to populate uuid.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0UUIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0UUIDSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderBlockDeviceItems0UUIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderFlavorIDRef:
    r"""
    Reference to a FlavorV2 in compute to populate flavorId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderFlavorIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderFlavorIDRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderFlavorIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderFlavorIDSelector:
    r"""
    Selector for a FlavorV2 in compute to populate flavorId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderFlavorIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderFlavorIDSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderFlavorIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderKeyPairRef:
    r"""
    Reference to a KeypairV2 in compute to populate keyPair.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderKeyPairRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderKeyPairRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderKeyPairRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderKeyPairSelector:
    r"""
    Selector for a KeypairV2 in compute to populate keyPair.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderKeyPairSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderKeyPairSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderKeyPairSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 spec init provider network items0

    Attributes
    ----------
    accessNetwork : bool, default is Undefined, optional
        Specifies if this network should be used for
        provisioning access. Accepts true or false. Defaults to false.
    fixedIpV4 : str, default is Undefined, optional
        Specifies a fixed IPv4 address to be used on this
        network. Changing this creates a new server.
    fixedIpV6 : str, default is Undefined, optional
        fixed Ip v6
    name : str, default is Undefined, optional
        The human-readable
        name of the network. Changing this creates a new server.
    port : str, default is Undefined, optional
        The port UUID of a
        network to attach to the server. Changing this creates a new server.
    portRef : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0PortRef, default is Undefined, optional
        port ref
    portSelector : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0PortSelector, default is Undefined, optional
        port selector
    uuid : str, default is Undefined, optional
        The network UUID to
        attach to the server. Changing this creates a new server.
    """


    accessNetwork?: bool

    fixedIpV4?: str

    fixedIpV6?: str

    name?: str

    port?: str

    portRef?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0PortRef

    portSelector?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0PortSelector

    uuid?: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0PortRef:
    r"""
    Reference to a PortV2 in networking to populate port.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0PortRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0PortRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0PortRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0PortSelector:
    r"""
    Selector for a PortV2 in networking to populate port.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0PortSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0PortSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderNetworkItems0PortSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderPersonalityItems0:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 spec init provider personality items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The contents of the file. Limited to 255 bytes.
    file : str, default is Undefined, optional
        The absolute path of the destination file.
    """


    content?: str

    file?: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSchedulerHintsItems0:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 spec init provider scheduler hints items0

    Attributes
    ----------
    additionalProperties : {str:str}, default is Undefined, optional
        Arbitrary key/value pairs of additional
        properties to pass to the scheduler.
    buildNearHostIp : str, default is Undefined, optional
        An IP Address in CIDR form. The instance
        will be placed on a compute node that is in the same subnet.
    differentCell : [str], default is Undefined, optional
        The names of cells where not to build the instance.
    differentHost : [str], default is Undefined, optional
        A list of instance UUIDs. The instance will
        be scheduled on a different host than all other instances.
    group : str, default is Undefined, optional
        A UUID of a Server Group. The instance will be placed
        into that group. See reference
        for details on managing servergroup resources
    query : [str], default is Undefined, optional
        A conditional query that a compute node must pass in
        order to host an instance. The query must use the JsonFilter syntax
        which is described
        here.
        At this time, only simple queries are supported. Compound queries using
        and, or, or not are not supported. An example of a simple query is:
    sameHost : [str], default is Undefined, optional
        A list of instance UUIDs. The instance will be
        scheduled on the same host of those specified.
    targetCell : str, default is Undefined, optional
        The name of a cell to host the instance.
    """


    additionalProperties?: {str:str}

    buildNearHostIp?: str

    differentCell?: [str]

    differentHost?: [str]

    group?: str

    query?: [str]

    sameHost?: [str]

    targetCell?: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSecurityGroupsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSecurityGroupsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSecurityGroupsRefsItems0Policy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSecurityGroupsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSecurityGroupsSelector:
    r"""
    Selector for a list of SecgroupV2 in networking to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSecurityGroupsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSecurityGroupsSelectorPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderSecurityGroupsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecInitProviderVendorOptions:
    r"""
    Map of additional vendor-specific options.
    Supported options are described below.

    Attributes
    ----------
    detachPortsBeforeDestroy : bool, default is Undefined, optional
        Whether to try to detach all attached
        ports to the vm before destroying it to make sure the port state is correct
        after the vm destruction. This is helpful when the port is not deleted.
    ignoreResizeConfirmation : bool, default is Undefined, optional
        Boolean to control whether
        to ignore manual confirmation of the instance resizing. This can be helpful
        to work with some OpenStack clouds which automatically confirm resizing of
        instances after some timeout.
    """


    detachPortsBeforeDestroy?: bool

    ignoreResizeConfirmation?: bool


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecProviderConfigRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2Status:
    r"""
    InstanceV2Status defines the observed state of InstanceV2.

    Attributes
    ----------
    atProvider : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProvider

    conditions?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusConditionsItems0]

    observedGeneration?: int


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProvider:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 status at provider

    Attributes
    ----------
    accessIpV4 : str, default is Undefined, optional
        The first detected Fixed IPv4 address.
    accessIpV6 : str, default is Undefined, optional
        The first detected Fixed IPv6 address.
    allMetadata : {str:str}, default is Undefined, optional
        all metadata
    allTags : [str], default is Undefined, optional
        The collection of tags assigned on the instance, which have
        been explicitly and implicitly added.
    availabilityZone : str, default is Undefined, optional
        The availability zone in which to create
        the server. Conflicts with availability_zone_hints. Changing this creates
        a new server.
    availabilityZoneHints : str, default is Undefined, optional
        The availability zone in which to
        create the server. This argument is preferred to availability_zone, when
        scheduling the server on a
        particular
        host or node. Conflicts with availability_zone. Changing this creates a
        new server.
    blockDevice : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderBlockDeviceItems0], default is Undefined, optional
        Configuration of block devices. The block_device
        structure is documented below. Changing this creates a new server.
        You can specify multiple block devices which will create an instance with
        multiple disks. This configuration is very flexible, so please see the
        following reference
        for more information.
    configDrive : bool, default is Undefined, optional
        Whether to use the config_drive feature to
        configure the instance. Changing this creates a new server.
    created : str, default is Undefined, optional
        The creation time of the instance.
    flavorId : str, default is Undefined, optional
        The flavor ID of
        the desired flavor for the server. Changing this resizes the existing server.
    flavorName : str, default is Undefined, optional
        The name of the
        desired flavor for the server. Changing this resizes the existing server.
    forceDelete : bool, default is Undefined, optional
        Whether to force the OpenStack instance to be
        forcefully deleted. This is useful for environments that have reclaim / soft
        deletion enabled.
    hypervisorHostname : str, default is Undefined, optional
        Specifies the exact hypervisor hostname on
        which to create the instance. When provided, this parameter is included in
        the request to Nova, directing the scheduler to launch the instance on the
        specified host. Note: This option requires administrative privileges and a
        Nova microversion of 2.74 or later. Conflicts with personality. Changing
        this value forces a new instance to be created.
    id : str, default is Undefined, optional
        id
    imageId : str, default is Undefined, optional
        The image ID of
        the desired image for the server. Changing this rebuilds the existing
        server.
    imageName : str, default is Undefined, optional
        The name of the
        desired image for the server. Changing this rebuilds the existing server.
    keyPair : str, default is Undefined, optional
        The name of a key pair to put on the server. The key
        pair must already be created and associated with the tenant's account.
        Changing this creates a new server.
    metadata : {str:str}, default is Undefined, optional
        Metadata key/value pairs to make available from
        within the instance. Changing this updates the existing server metadata.
    name : str, default is Undefined, optional
        A unique name for the resource.
    network : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderNetworkItems0], default is Undefined, optional
        An array of one or more networks to attach to the
        instance. The network object structure is documented below. Changing this
        creates a new server.
    networkMode : str, default is Undefined, optional
        Special string for network option to create
        the server. network_mode can be "auto" or "none".
        Please see the following reference for more information. Conflicts with network.
    personality : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderPersonalityItems0], default is Undefined, optional
        Customize the personality of an instance by
        defining one or more files and their contents. The personality structure is
        described below. Conflicts with hypervisor_hostname. Changing this rebuilds
        the existing server.
    powerState : str, default is Undefined, optional
        Provide the VM state. Only 'active', 'shutoff', 'paused'
        and 'shelved_offloaded' are supported values.
        Note: If the initial power_state is the shutoff or paused
        the VM will be stopped immediately after build and the provisioners like
        remote-exec or files are not supported.
    region : str, default is Undefined, optional
        The region in which to create the server instance. If
        omitted, the region argument of the provider is used. Changing this
        creates a new server.
    schedulerHints : [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderSchedulerHintsItems0], default is Undefined, optional
        Provide the Nova scheduler with hints on how
        the instance should be launched. The available hints are described below.
    securityGroups : [str], default is Undefined, optional
        An array of one or more security group names
        to associate with the server. Changing this results in adding/removing
        security groups from the existing server. Note: When attaching the
        instance to networks using Ports, place the security groups on the Port
        and not the instance. Note: Names should be used and not ids, as ids
        trigger unnecessary updates.
    stopBeforeDestroy : bool, default is Undefined, optional
        Whether to try stop instance gracefully
        before destroying it, thus giving chance for guest OS daemons to stop correctly.
        If instance doesn't stop within timeout, it will be destroyed anyway.
    tags : [str], default is Undefined, optional
        A set of string tags for the instance. Changing this
        updates the existing instance tags.
    updated : str, default is Undefined, optional
        The time when the instance was last updated.
    userData : str, default is Undefined, optional
        The user data to provide when launching the instance.
        Changing this creates a new server.
    vendorOptions : ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderVendorOptions, default is Undefined, optional
        vendor options
    """


    accessIpV4?: str

    accessIpV6?: str

    allMetadata?: {str:str}

    allTags?: [str]

    availabilityZone?: str

    availabilityZoneHints?: str

    blockDevice?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderBlockDeviceItems0]

    configDrive?: bool

    created?: str

    flavorId?: str

    flavorName?: str

    forceDelete?: bool

    hypervisorHostname?: str

    id?: str

    imageId?: str

    imageName?: str

    keyPair?: str

    metadata?: {str:str}

    name?: str

    network?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderNetworkItems0]

    networkMode?: str

    personality?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderPersonalityItems0]

    powerState?: str

    region?: str

    schedulerHints?: [ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderSchedulerHintsItems0]

    securityGroups?: [str]

    stopBeforeDestroy?: bool

    tags?: [str]

    updated?: str

    userData?: str

    vendorOptions?: ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderVendorOptions


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderBlockDeviceItems0:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 status at provider block device items0

    Attributes
    ----------
    bootIndex : float, default is Undefined, optional
        The boot index of the volume. It defaults to 0.
        Changing this creates a new server.
    deleteOnTermination : bool, default is Undefined, optional
        Delete the volume / block device upon
        termination of the instance. Defaults to false. Changing this creates a
        new server.
    destinationType : str, default is Undefined, optional
        The type that gets created. Possible values
        are "volume" and "local". Changing this creates a new server.
    deviceType : str, default is Undefined, optional
        The low-level device type that will be used. Most
        common thing is to leave this empty. Changing this creates a new server.
    diskBus : str, default is Undefined, optional
        The low-level disk bus that will be used. Most common
        thing is to leave this empty. Changing this creates a new server.
    guestFormat : str, default is Undefined, optional
        Specifies the guest server disk file system format,
        such as ext2, ext3, ext4, xfs or swap. Swap block device mappings
        have the following restrictions: source_type must be blank and destination_type
        must be local and only one swap disk per server and the size of the swap disk
        must be less than or equal to the swap size of the flavor. Changing this
        creates a new server.
    multiattach : bool, default is Undefined, optional
        Enable the attachment of multiattach-capable
        volumes.
    sourceType : str, default is Undefined, optional
        The source type of the device. Must be one of
        "blank", "image", "volume", or "snapshot". Changing this creates a new
        server.
    uuid : str, default is Undefined, optional
        The UUID of
        the image, volume, or snapshot. Changing this creates a new server.
    volumeSize : float, default is Undefined, optional
        The size of the volume to create (in gigabytes). Required
        in the following combinations: source=image and destination=volume,
        source=blank and destination=local, and source=blank and destination=volume.
        Changing this creates a new server.
    volumeType : str, default is Undefined, optional
        The volume type that will be used, for example SSD
        or HDD storage. The available options depend on how your specific OpenStack
        cloud is configured and what classes of storage are provided. Changing this
        creates a new server.
    """


    bootIndex?: float

    deleteOnTermination?: bool

    destinationType?: str

    deviceType?: str

    diskBus?: str

    guestFormat?: str

    multiattach?: bool

    sourceType?: str

    uuid?: str

    volumeSize?: float

    volumeType?: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderNetworkItems0:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 status at provider network items0

    Attributes
    ----------
    accessNetwork : bool, default is Undefined, optional
        Specifies if this network should be used for
        provisioning access. Accepts true or false. Defaults to false.
    fixedIpV4 : str, default is Undefined, optional
        Specifies a fixed IPv4 address to be used on this
        network. Changing this creates a new server.
    fixedIpV6 : str, default is Undefined, optional
        fixed Ip v6
    mac : str, default is Undefined, optional
        mac
    name : str, default is Undefined, optional
        The human-readable
        name of the network. Changing this creates a new server.
    port : str, default is Undefined, optional
        The port UUID of a
        network to attach to the server. Changing this creates a new server.
    uuid : str, default is Undefined, optional
        The network UUID to
        attach to the server. Changing this creates a new server.
    """


    accessNetwork?: bool

    fixedIpV4?: str

    fixedIpV6?: str

    mac?: str

    name?: str

    port?: str

    uuid?: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderPersonalityItems0:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 status at provider personality items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The contents of the file. Limited to 255 bytes.
    file : str, default is Undefined, optional
        The absolute path of the destination file.
    """


    content?: str

    file?: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderSchedulerHintsItems0:
    r"""
    compute openstack crossplane io v1alpha1 instance v2 status at provider scheduler hints items0

    Attributes
    ----------
    additionalProperties : {str:str}, default is Undefined, optional
        Arbitrary key/value pairs of additional
        properties to pass to the scheduler.
    buildNearHostIp : str, default is Undefined, optional
        An IP Address in CIDR form. The instance
        will be placed on a compute node that is in the same subnet.
    differentCell : [str], default is Undefined, optional
        The names of cells where not to build the instance.
    differentHost : [str], default is Undefined, optional
        A list of instance UUIDs. The instance will
        be scheduled on a different host than all other instances.
    group : str, default is Undefined, optional
        A UUID of a Server Group. The instance will be placed
        into that group. See reference
        for details on managing servergroup resources
    query : [str], default is Undefined, optional
        A conditional query that a compute node must pass in
        order to host an instance. The query must use the JsonFilter syntax
        which is described
        here.
        At this time, only simple queries are supported. Compound queries using
        and, or, or not are not supported. An example of a simple query is:
    sameHost : [str], default is Undefined, optional
        A list of instance UUIDs. The instance will be
        scheduled on the same host of those specified.
    targetCell : str, default is Undefined, optional
        The name of a cell to host the instance.
    """


    additionalProperties?: {str:str}

    buildNearHostIp?: str

    differentCell?: [str]

    differentHost?: [str]

    group?: str

    query?: [str]

    sameHost?: [str]

    targetCell?: str


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusAtProviderVendorOptions:
    r"""
    Map of additional vendor-specific options.
    Supported options are described below.

    Attributes
    ----------
    detachPortsBeforeDestroy : bool, default is Undefined, optional
        Whether to try to detach all attached
        ports to the vm before destroying it to make sure the port state is correct
        after the vm destruction. This is helpful when the port is not deleted.
    ignoreResizeConfirmation : bool, default is Undefined, optional
        Boolean to control whether
        to ignore manual confirmation of the instance resizing. This can be helpful
        to work with some OpenStack clouds which automatically confirm resizing of
        instances after some timeout.
    """


    detachPortsBeforeDestroy?: bool

    ignoreResizeConfirmation?: bool


schema ComputeOpenstackCrossplaneIoV1alpha1InstanceV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


