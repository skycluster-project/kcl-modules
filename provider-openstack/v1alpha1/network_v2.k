"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NetworkV2:
    r"""
    NetworkV2 is the Schema for the NetworkV2s API. Manages a V2 Neutron network resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "networking.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NetworkV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2Spec, default is Undefined, required
        spec
    status : NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2Status, default is Undefined, optional
        status
    """


    apiVersion: "networking.openstack.crossplane.io/v1alpha1" = "networking.openstack.crossplane.io/v1alpha1"

    kind: "NetworkV2" = "NetworkV2"

    metadata?: v1.ObjectMeta

    spec: NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2Spec

    status?: NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2Status


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2Spec:
    r"""
    NetworkV2Spec defines the desired state of NetworkV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecForProvider

    initProvider?: NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecWriteConnectionSecretToRef


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecForProvider:
    r"""
    networking openstack crossplane io v1alpha1 network v2 spec for provider

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        The administrative state of the network.
        Acceptable values are "true" and "false". Changing this value updates the
        state of the existing network.
    availabilityZoneHints : [str], default is Undefined, optional
        An availability zone is used to make
        network resources highly available. Used for resources with high availability
        so that they are scheduled on different availability zones. Changing this
        creates a new network.
    description : str, default is Undefined, optional
        Human-readable description of the network. Changing this
        updates the name of the existing network.
    dnsDomain : str, default is Undefined, optional
        The network DNS domain. Available, when Neutron DNS
        extension is enabled. The dns_domain of a network in conjunction with the
        dns_name attribute of its ports will be published in an external DNS
        service when Neutron is configured to integrate with such a service.
    external : bool, default is Undefined, optional
        Specifies whether the network resource has the
        external routing facility. Valid values are true and false. Defaults to
        false. Changing this updates the external attribute of the existing network.
    mtu : float, default is Undefined, optional
        The network MTU. Available for read-only, when Neutron
        net-mtu extension is enabled. Available for the modification, when
        Neutron net-mtu-writable extension is enabled.
    name : str, default is Undefined, optional
        The name of the network. Changing this updates the name of
        the existing network.
    portSecurityEnabled : bool, default is Undefined, optional
        Whether to explicitly enable or disable
        port security on the network. Port Security is usually enabled by default, so
        omitting this argument will usually result in a value of "true". Setting this
        explicitly to false will disable port security. Valid values are true and
        false.
    qosPolicyId : str, default is Undefined, optional
        Reference to the associated QoS policy.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create a Neutron network. If omitted, the
        region argument of the provider is used. Changing this creates a new
        network.
    segments : [NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecForProviderSegmentsItems0], default is Undefined, optional
        An array of one or more provider segment objects.
        Note: most Networking plug-ins (e.g. ML2 Plugin) and drivers do not support
        updating any provider related segments attributes. Check your plug-in whether
        it supports updating.
    shared : bool, default is Undefined, optional
        Specifies whether the network resource can be accessed
        by any tenant or not. Changing this updates the sharing capabilities of the
        existing network.
    tags : [str], default is Undefined, optional
        A set of string tags for the network.
    tenantId : str, default is Undefined, optional
        The owner of the network. Required if admin wants to
        create a network for another tenant. Changing this creates a new network.
    transparentVlan : bool, default is Undefined, optional
        Specifies whether the network resource has the
        VLAN transparent attribute set. Valid values are true and false. Defaults to
        false. Changing this updates the transparent_vlan attribute of the existing
        network.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional options.
    """


    adminStateUp?: bool

    availabilityZoneHints?: [str]

    description?: str

    dnsDomain?: str

    external?: bool

    mtu?: float

    name?: str

    portSecurityEnabled?: bool

    qosPolicyId?: str

    region?: str

    segments?: [NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecForProviderSegmentsItems0]

    shared?: bool

    tags?: [str]

    tenantId?: str

    transparentVlan?: bool

    valueSpecs?: {str:str}


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecForProviderSegmentsItems0:
    r"""
    networking openstack crossplane io v1alpha1 network v2 spec for provider segments items0

    Attributes
    ----------
    networkType : str, default is Undefined, optional
        The type of physical network.
    physicalNetwork : str, default is Undefined, optional
        The physical network where this network is implemented.
    segmentationId : float, default is Undefined, optional
        An isolated segment on the physical network.
    """


    networkType?: str

    physicalNetwork?: str

    segmentationId?: float


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        The administrative state of the network.
        Acceptable values are "true" and "false". Changing this value updates the
        state of the existing network.
    availabilityZoneHints : [str], default is Undefined, optional
        An availability zone is used to make
        network resources highly available. Used for resources with high availability
        so that they are scheduled on different availability zones. Changing this
        creates a new network.
    description : str, default is Undefined, optional
        Human-readable description of the network. Changing this
        updates the name of the existing network.
    dnsDomain : str, default is Undefined, optional
        The network DNS domain. Available, when Neutron DNS
        extension is enabled. The dns_domain of a network in conjunction with the
        dns_name attribute of its ports will be published in an external DNS
        service when Neutron is configured to integrate with such a service.
    external : bool, default is Undefined, optional
        Specifies whether the network resource has the
        external routing facility. Valid values are true and false. Defaults to
        false. Changing this updates the external attribute of the existing network.
    mtu : float, default is Undefined, optional
        The network MTU. Available for read-only, when Neutron
        net-mtu extension is enabled. Available for the modification, when
        Neutron net-mtu-writable extension is enabled.
    name : str, default is Undefined, optional
        The name of the network. Changing this updates the name of
        the existing network.
    portSecurityEnabled : bool, default is Undefined, optional
        Whether to explicitly enable or disable
        port security on the network. Port Security is usually enabled by default, so
        omitting this argument will usually result in a value of "true". Setting this
        explicitly to false will disable port security. Valid values are true and
        false.
    qosPolicyId : str, default is Undefined, optional
        Reference to the associated QoS policy.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create a Neutron network. If omitted, the
        region argument of the provider is used. Changing this creates a new
        network.
    segments : [NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecInitProviderSegmentsItems0], default is Undefined, optional
        An array of one or more provider segment objects.
        Note: most Networking plug-ins (e.g. ML2 Plugin) and drivers do not support
        updating any provider related segments attributes. Check your plug-in whether
        it supports updating.
    shared : bool, default is Undefined, optional
        Specifies whether the network resource can be accessed
        by any tenant or not. Changing this updates the sharing capabilities of the
        existing network.
    tags : [str], default is Undefined, optional
        A set of string tags for the network.
    tenantId : str, default is Undefined, optional
        The owner of the network. Required if admin wants to
        create a network for another tenant. Changing this creates a new network.
    transparentVlan : bool, default is Undefined, optional
        Specifies whether the network resource has the
        VLAN transparent attribute set. Valid values are true and false. Defaults to
        false. Changing this updates the transparent_vlan attribute of the existing
        network.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional options.
    """


    adminStateUp?: bool

    availabilityZoneHints?: [str]

    description?: str

    dnsDomain?: str

    external?: bool

    mtu?: float

    name?: str

    portSecurityEnabled?: bool

    qosPolicyId?: str

    region?: str

    segments?: [NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecInitProviderSegmentsItems0]

    shared?: bool

    tags?: [str]

    tenantId?: str

    transparentVlan?: bool

    valueSpecs?: {str:str}


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecInitProviderSegmentsItems0:
    r"""
    networking openstack crossplane io v1alpha1 network v2 spec init provider segments items0

    Attributes
    ----------
    networkType : str, default is Undefined, optional
        The type of physical network.
    physicalNetwork : str, default is Undefined, optional
        The physical network where this network is implemented.
    segmentationId : float, default is Undefined, optional
        An isolated segment on the physical network.
    """


    networkType?: str

    physicalNetwork?: str

    segmentationId?: float


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecProviderConfigRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2Status:
    r"""
    NetworkV2Status defines the observed state of NetworkV2.

    Attributes
    ----------
    atProvider : NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2StatusAtProvider

    conditions?: [NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2StatusConditionsItems0]

    observedGeneration?: int


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2StatusAtProvider:
    r"""
    networking openstack crossplane io v1alpha1 network v2 status at provider

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        The administrative state of the network.
        Acceptable values are "true" and "false". Changing this value updates the
        state of the existing network.
    allTags : [str], default is Undefined, optional
        The collection of tags assigned on the network, which have been
        explicitly and implicitly added.
    availabilityZoneHints : [str], default is Undefined, optional
        An availability zone is used to make
        network resources highly available. Used for resources with high availability
        so that they are scheduled on different availability zones. Changing this
        creates a new network.
    description : str, default is Undefined, optional
        Human-readable description of the network. Changing this
        updates the name of the existing network.
    dnsDomain : str, default is Undefined, optional
        The network DNS domain. Available, when Neutron DNS
        extension is enabled. The dns_domain of a network in conjunction with the
        dns_name attribute of its ports will be published in an external DNS
        service when Neutron is configured to integrate with such a service.
    external : bool, default is Undefined, optional
        Specifies whether the network resource has the
        external routing facility. Valid values are true and false. Defaults to
        false. Changing this updates the external attribute of the existing network.
    id : str, default is Undefined, optional
        id
    mtu : float, default is Undefined, optional
        The network MTU. Available for read-only, when Neutron
        net-mtu extension is enabled. Available for the modification, when
        Neutron net-mtu-writable extension is enabled.
    name : str, default is Undefined, optional
        The name of the network. Changing this updates the name of
        the existing network.
    portSecurityEnabled : bool, default is Undefined, optional
        Whether to explicitly enable or disable
        port security on the network. Port Security is usually enabled by default, so
        omitting this argument will usually result in a value of "true". Setting this
        explicitly to false will disable port security. Valid values are true and
        false.
    qosPolicyId : str, default is Undefined, optional
        Reference to the associated QoS policy.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create a Neutron network. If omitted, the
        region argument of the provider is used. Changing this creates a new
        network.
    segments : [NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2StatusAtProviderSegmentsItems0], default is Undefined, optional
        An array of one or more provider segment objects.
        Note: most Networking plug-ins (e.g. ML2 Plugin) and drivers do not support
        updating any provider related segments attributes. Check your plug-in whether
        it supports updating.
    shared : bool, default is Undefined, optional
        Specifies whether the network resource can be accessed
        by any tenant or not. Changing this updates the sharing capabilities of the
        existing network.
    tags : [str], default is Undefined, optional
        A set of string tags for the network.
    tenantId : str, default is Undefined, optional
        The owner of the network. Required if admin wants to
        create a network for another tenant. Changing this creates a new network.
    transparentVlan : bool, default is Undefined, optional
        Specifies whether the network resource has the
        VLAN transparent attribute set. Valid values are true and false. Defaults to
        false. Changing this updates the transparent_vlan attribute of the existing
        network.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional options.
    """


    adminStateUp?: bool

    allTags?: [str]

    availabilityZoneHints?: [str]

    description?: str

    dnsDomain?: str

    external?: bool

    id?: str

    mtu?: float

    name?: str

    portSecurityEnabled?: bool

    qosPolicyId?: str

    region?: str

    segments?: [NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2StatusAtProviderSegmentsItems0]

    shared?: bool

    tags?: [str]

    tenantId?: str

    transparentVlan?: bool

    valueSpecs?: {str:str}


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2StatusAtProviderSegmentsItems0:
    r"""
    networking openstack crossplane io v1alpha1 network v2 status at provider segments items0

    Attributes
    ----------
    networkType : str, default is Undefined, optional
        The type of physical network.
    physicalNetwork : str, default is Undefined, optional
        The physical network where this network is implemented.
    segmentationId : float, default is Undefined, optional
        An isolated segment on the physical network.
    """


    networkType?: str

    physicalNetwork?: str

    segmentationId?: float


schema NetworkingOpenstackCrossplaneIoV1alpha1NetworkV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


