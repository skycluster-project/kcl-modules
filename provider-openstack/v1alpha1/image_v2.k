"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ImageV2:
    r"""
    ImageV2 is the Schema for the ImageV2s API. Manages a V2 Image resource within OpenStack Glance.

    Attributes
    ----------
    apiVersion : str, default is "images.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ImageV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ImagesOpenstackCrossplaneIoV1alpha1ImageV2Spec, default is Undefined, required
        spec
    status : ImagesOpenstackCrossplaneIoV1alpha1ImageV2Status, default is Undefined, optional
        status
    """


    apiVersion: "images.openstack.crossplane.io/v1alpha1" = "images.openstack.crossplane.io/v1alpha1"

    kind: "ImageV2" = "ImageV2"

    metadata?: v1.ObjectMeta

    spec: ImagesOpenstackCrossplaneIoV1alpha1ImageV2Spec

    status?: ImagesOpenstackCrossplaneIoV1alpha1ImageV2Status


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2Spec:
    r"""
    ImageV2Spec defines the desired state of ImageV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecForProvider

    initProvider?: ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecProviderConfigRef

    publishConnectionDetailsTo?: ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecWriteConnectionSecretToRef


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecForProvider:
    r"""
    images openstack crossplane io v1alpha1 image v2 spec for provider

    Attributes
    ----------
    containerFormat : str, default is Undefined, optional
        The container format. Must be one of "bare",
        "ovf", "aki", "ari", "ami", "ova", "docker", "compressed".
    decompress : bool, default is Undefined, optional
        If true, this provider will decompress downloaded
        image before uploading it to OpenStack. Decompression algorithm is chosen by
        checking "Content-Type" or Content-Disposition header to detect the
        filename extension. Supported algorithms are: gzip, bzip2, xz and zst.
        Defaults to false. Changing this creates a new Image.
    diskFormat : str, default is Undefined, optional
        The disk format. Must be one of "raw", "vhd",
        "vhdx", "vmdk", "vdi", "iso", "ploop", "qcow2", "aki", "ari", "ami"
    hidden : bool, default is Undefined, optional
        If true, image will be hidden from public list.
        Defaults to false.
    imageCachePath : str, default is Undefined, optional
        This is the directory where the images will
        be downloaded. Images will be stored with a filename corresponding to the
        url's md5 hash. Defaults to "$HOME/
    imageId : str, default is Undefined, optional
        Unique ID (valid UUID) of image to create. Changing
        this creates a new image.
    imageSourcePasswordSecretRef : ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecForProviderImageSourcePasswordSecretRef, default is Undefined, optional
        image source password secret ref
    imageSourceUrl : str, default is Undefined, optional
        This is the url of the raw image. If
        web_download is not used, then the image will be downloaded in the
        image_cache_path before being uploaded to Glance. Conflicts with
        local_file_path.
    imageSourceUsername : str, default is Undefined, optional
        The username of basic auth to download
        image_source_url.
    localFilePath : str, default is Undefined, optional
        This is the filepath of the raw image file
        that will be uploaded to Glance. Conflicts with image_source_url and
        web_download.
    minDiskGb : float, default is Undefined, optional
        Amount of disk space (in GB) required to boot
        image. Defaults to 0.
    minRamMb : float, default is Undefined, optional
        Amount of ram (in MB) required to boot image.
        Defauts to 0.
    name : str, default is Undefined, optional
        The name of the image.
    properties : {str:str}, default is Undefined, optional
        A map of key/value pairs to set freeform
        information about an image. See the "Notes" section for further information
        about properties.
    protected : bool, default is Undefined, optional
        If true, image will not be deletable. Defaults to
        false.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Glance client. A
        Glance client is needed to create an Image that can be used with a compute
        instance. If omitted, the region argument of the provider is used. Changing
        this creates a new Image.
    tags : [str], default is Undefined, optional
        The tags of the image. It must be a list of strings. At
        this time, it is not possible to delete all tags of an image.
    verifyChecksum : bool, default is Undefined, optional
        If false, the checksum will not be verified
        once the image is finished uploading. Conflicts with web_download. Defaults
        to true when not using web_download.
    visibility : str, default is Undefined, optional
        The visibility of the image. Must be one of
        "public", "private", "community", or "shared". The ability to set the
        visibility depends upon the configuration of the OpenStack cloud.
    webDownload : bool, default is Undefined, optional
        If true, the "web-download" import method will be
        used to let Openstack download the image directly from the remote source.
        Conflicts with local_file_path. Defaults to false.
    """


    containerFormat?: str

    decompress?: bool

    diskFormat?: str

    hidden?: bool

    imageCachePath?: str

    imageId?: str

    imageSourcePasswordSecretRef?: ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecForProviderImageSourcePasswordSecretRef

    imageSourceUrl?: str

    imageSourceUsername?: str

    localFilePath?: str

    minDiskGb?: float

    minRamMb?: float

    name?: str

    properties?: {str:str}

    protected?: bool

    region?: str

    tags?: [str]

    verifyChecksum?: bool

    visibility?: str

    webDownload?: bool


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecForProviderImageSourcePasswordSecretRef:
    r"""
    The password of basic auth to download
    image_source_url.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    containerFormat : str, default is Undefined, optional
        The container format. Must be one of "bare",
        "ovf", "aki", "ari", "ami", "ova", "docker", "compressed".
    decompress : bool, default is Undefined, optional
        If true, this provider will decompress downloaded
        image before uploading it to OpenStack. Decompression algorithm is chosen by
        checking "Content-Type" or Content-Disposition header to detect the
        filename extension. Supported algorithms are: gzip, bzip2, xz and zst.
        Defaults to false. Changing this creates a new Image.
    diskFormat : str, default is Undefined, optional
        The disk format. Must be one of "raw", "vhd",
        "vhdx", "vmdk", "vdi", "iso", "ploop", "qcow2", "aki", "ari", "ami"
    hidden : bool, default is Undefined, optional
        If true, image will be hidden from public list.
        Defaults to false.
    imageCachePath : str, default is Undefined, optional
        This is the directory where the images will
        be downloaded. Images will be stored with a filename corresponding to the
        url's md5 hash. Defaults to "$HOME/
    imageId : str, default is Undefined, optional
        Unique ID (valid UUID) of image to create. Changing
        this creates a new image.
    imageSourcePasswordSecretRef : ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecInitProviderImageSourcePasswordSecretRef, default is Undefined, optional
        image source password secret ref
    imageSourceUrl : str, default is Undefined, optional
        This is the url of the raw image. If
        web_download is not used, then the image will be downloaded in the
        image_cache_path before being uploaded to Glance. Conflicts with
        local_file_path.
    imageSourceUsername : str, default is Undefined, optional
        The username of basic auth to download
        image_source_url.
    localFilePath : str, default is Undefined, optional
        This is the filepath of the raw image file
        that will be uploaded to Glance. Conflicts with image_source_url and
        web_download.
    minDiskGb : float, default is Undefined, optional
        Amount of disk space (in GB) required to boot
        image. Defaults to 0.
    minRamMb : float, default is Undefined, optional
        Amount of ram (in MB) required to boot image.
        Defauts to 0.
    name : str, default is Undefined, optional
        The name of the image.
    properties : {str:str}, default is Undefined, optional
        A map of key/value pairs to set freeform
        information about an image. See the "Notes" section for further information
        about properties.
    protected : bool, default is Undefined, optional
        If true, image will not be deletable. Defaults to
        false.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Glance client. A
        Glance client is needed to create an Image that can be used with a compute
        instance. If omitted, the region argument of the provider is used. Changing
        this creates a new Image.
    tags : [str], default is Undefined, optional
        The tags of the image. It must be a list of strings. At
        this time, it is not possible to delete all tags of an image.
    verifyChecksum : bool, default is Undefined, optional
        If false, the checksum will not be verified
        once the image is finished uploading. Conflicts with web_download. Defaults
        to true when not using web_download.
    visibility : str, default is Undefined, optional
        The visibility of the image. Must be one of
        "public", "private", "community", or "shared". The ability to set the
        visibility depends upon the configuration of the OpenStack cloud.
    webDownload : bool, default is Undefined, optional
        If true, the "web-download" import method will be
        used to let Openstack download the image directly from the remote source.
        Conflicts with local_file_path. Defaults to false.
    """


    containerFormat?: str

    decompress?: bool

    diskFormat?: str

    hidden?: bool

    imageCachePath?: str

    imageId?: str

    imageSourcePasswordSecretRef?: ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecInitProviderImageSourcePasswordSecretRef

    imageSourceUrl?: str

    imageSourceUsername?: str

    localFilePath?: str

    minDiskGb?: float

    minRamMb?: float

    name?: str

    properties?: {str:str}

    protected?: bool

    region?: str

    tags?: [str]

    verifyChecksum?: bool

    visibility?: str

    webDownload?: bool


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecInitProviderImageSourcePasswordSecretRef:
    r"""
    The password of basic auth to download
    image_source_url.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecProviderConfigRefPolicy


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecPublishConnectionDetailsToConfigRef

    metadata?: ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecPublishConnectionDetailsToMetadata

    name: str


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecPublishConnectionDetailsToConfigRefPolicy


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2Status:
    r"""
    ImageV2Status defines the observed state of ImageV2.

    Attributes
    ----------
    atProvider : ImagesOpenstackCrossplaneIoV1alpha1ImageV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ImagesOpenstackCrossplaneIoV1alpha1ImageV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ImagesOpenstackCrossplaneIoV1alpha1ImageV2StatusAtProvider

    conditions?: [ImagesOpenstackCrossplaneIoV1alpha1ImageV2StatusConditionsItems0]

    observedGeneration?: int


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2StatusAtProvider:
    r"""
    images openstack crossplane io v1alpha1 image v2 status at provider

    Attributes
    ----------
    checksum : str, default is Undefined, optional
        The checksum of the data associated with the image.
    containerFormat : str, default is Undefined, optional
        The container format. Must be one of "bare",
        "ovf", "aki", "ari", "ami", "ova", "docker", "compressed".
    createdAt : str, default is Undefined, optional
        The date the image was created.
    decompress : bool, default is Undefined, optional
        If true, this provider will decompress downloaded
        image before uploading it to OpenStack. Decompression algorithm is chosen by
        checking "Content-Type" or Content-Disposition header to detect the
        filename extension. Supported algorithms are: gzip, bzip2, xz and zst.
        Defaults to false. Changing this creates a new Image.
    diskFormat : str, default is Undefined, optional
        The disk format. Must be one of "raw", "vhd",
        "vhdx", "vmdk", "vdi", "iso", "ploop", "qcow2", "aki", "ari", "ami"
    file : str, default is Undefined, optional
        the trailing path after the glance
        endpoint that represent the location of the image
        or the path to retrieve it.
    hidden : bool, default is Undefined, optional
        If true, image will be hidden from public list.
        Defaults to false.
    id : str, default is Undefined, optional
        A unique ID assigned by Glance.
    imageCachePath : str, default is Undefined, optional
        This is the directory where the images will
        be downloaded. Images will be stored with a filename corresponding to the
        url's md5 hash. Defaults to "$HOME/
    imageId : str, default is Undefined, optional
        Unique ID (valid UUID) of image to create. Changing
        this creates a new image.
    imageSourceUrl : str, default is Undefined, optional
        This is the url of the raw image. If
        web_download is not used, then the image will be downloaded in the
        image_cache_path before being uploaded to Glance. Conflicts with
        local_file_path.
    imageSourceUsername : str, default is Undefined, optional
        The username of basic auth to download
        image_source_url.
    localFilePath : str, default is Undefined, optional
        This is the filepath of the raw image file
        that will be uploaded to Glance. Conflicts with image_source_url and
        web_download.
    metadata : {str:str}, default is Undefined, optional
        The metadata associated with the image.
        Image metadata allow for meaningfully define the image properties
        and tags. See https://docs.openstack.org/glance/latest/user/metadefs-concepts.html.
    minDiskGb : float, default is Undefined, optional
        Amount of disk space (in GB) required to boot
        image. Defaults to 0.
    minRamMb : float, default is Undefined, optional
        Amount of ram (in MB) required to boot image.
        Defauts to 0.
    name : str, default is Undefined, optional
        The name of the image.
    owner : str, default is Undefined, optional
        The id of the openstack user who owns the image.
    properties : {str:str}, default is Undefined, optional
        A map of key/value pairs to set freeform
        information about an image. See the "Notes" section for further information
        about properties.
    protected : bool, default is Undefined, optional
        If true, image will not be deletable. Defaults to
        false.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Glance client. A
        Glance client is needed to create an Image that can be used with a compute
        instance. If omitted, the region argument of the provider is used. Changing
        this creates a new Image.
    $schema : str, default is Undefined, optional
        The path to the JSON-schema that represent
        the image or image
    sizeBytes : float, default is Undefined, optional
        The size in bytes of the data associated with the image.
    status : str, default is Undefined, optional
        The status of the image. It can be "queued", "active"
        or "saving".
    tags : [str], default is Undefined, optional
        The tags of the image. It must be a list of strings. At
        this time, it is not possible to delete all tags of an image.
    updatedAt : str, default is Undefined, optional
        The date the image was last updated.
    verifyChecksum : bool, default is Undefined, optional
        If false, the checksum will not be verified
        once the image is finished uploading. Conflicts with web_download. Defaults
        to true when not using web_download.
    visibility : str, default is Undefined, optional
        The visibility of the image. Must be one of
        "public", "private", "community", or "shared". The ability to set the
        visibility depends upon the configuration of the OpenStack cloud.
    webDownload : bool, default is Undefined, optional
        If true, the "web-download" import method will be
        used to let Openstack download the image directly from the remote source.
        Conflicts with local_file_path. Defaults to false.
    """


    checksum?: str

    containerFormat?: str

    createdAt?: str

    decompress?: bool

    diskFormat?: str

    file?: str

    hidden?: bool

    id?: str

    imageCachePath?: str

    imageId?: str

    imageSourceUrl?: str

    imageSourceUsername?: str

    localFilePath?: str

    metadata?: {str:str}

    minDiskGb?: float

    minRamMb?: float

    name?: str

    owner?: str

    properties?: {str:str}

    protected?: bool

    region?: str

    $schema?: str

    sizeBytes?: float

    status?: str

    tags?: [str]

    updatedAt?: str

    verifyChecksum?: bool

    visibility?: str

    webDownload?: bool


schema ImagesOpenstackCrossplaneIoV1alpha1ImageV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


