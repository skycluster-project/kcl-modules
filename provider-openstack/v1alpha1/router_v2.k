"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RouterV2:
    r"""
    RouterV2 is the Schema for the RouterV2s API. Manages a V2 router resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "networking.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RouterV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2Spec, default is Undefined, required
        spec
    status : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2Status, default is Undefined, optional
        status
    """


    apiVersion: "networking.openstack.crossplane.io/v1alpha1" = "networking.openstack.crossplane.io/v1alpha1"

    kind: "RouterV2" = "RouterV2"

    metadata?: v1.ObjectMeta

    spec: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2Spec

    status?: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2Status


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2Spec:
    r"""
    RouterV2Spec defines the desired state of RouterV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecForProvider

    initProvider?: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecWriteConnectionSecretToRef


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecForProvider:
    r"""
    networking openstack crossplane io v1alpha1 router v2 spec for provider

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        Administrative up/down status for the router
        (must be "true" or "false" if provided). Changing this updates the
        admin_state_up of an existing router.
    availabilityZoneHints : [str], default is Undefined, optional
        An availability zone is used to make
        network resources highly available. Used for resources with high availability
        so that they are scheduled on different availability zones. Changing this
        creates a new router.
    description : str, default is Undefined, optional
        Human-readable description for the router.
    distributed : bool, default is Undefined, optional
        Indicates whether or not to create a
        distributed router. The default policy setting in Neutron restricts
        usage of this property to administrative users only.
    enableSnat : bool, default is Undefined, optional
        Enable Source NAT for the router. Valid values are
        "true" or "false". An external_network_id has to be set in order to
        set this property. Changing this updates the enable_snat of the router.
        Setting this value requires an ext-gw-mode extension to be enabled
        in OpenStack Neutron.
    externalFixedIp : [NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecForProviderExternalFixedIPItems0], default is Undefined, optional
        An external fixed IP for the router. This
        can be repeated. The structure is described below. An external_network_id
        has to be set in order to set this property. Changing this updates the
        external fixed IPs of the router.
    externalNetworkId : str, default is Undefined, optional
        The network UUID of an external gateway
        for the router. A router with an external gateway is required if any
        compute instances or load balancers will be using floating IPs. Changing
        this updates the external gateway of the router.
    externalQosPolicyId : str, default is Undefined, optional
        The QoS policy UUID that will be applied
        on the external gateway for the router. Changing this updates the external
        gateway of the router.
    externalSubnetIds : [str], default is Undefined, optional
        A list of external subnet IDs to try over
        each to obtain a fixed IP for the router. If a subnet ID in a list has
        exhausted floating IP pool, the next subnet ID will be tried. This argument is
        used only during the router creation and allows to set only one external fixed
        IP. Conflicts with an external_fixed_ip argument.
    name : str, default is Undefined, optional
        A unique name for the router. Changing this
        updates the name of an existing router.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 networking client.
        A networking client is needed to create a router. If omitted, the
        region argument of the provider is used. Changing this creates a new
        router.
    tags : [str], default is Undefined, optional
        A set of string tags for the router.
    tenantId : str, default is Undefined, optional
        The owner of the floating IP. Required if admin wants
        to create a router for another tenant. Changing this creates a new router.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional driver-specific options.
    vendorOptions : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecForProviderVendorOptions, default is Undefined, optional
        vendor options
    """


    adminStateUp?: bool

    availabilityZoneHints?: [str]

    description?: str

    distributed?: bool

    enableSnat?: bool

    externalFixedIp?: [NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecForProviderExternalFixedIPItems0]

    externalNetworkId?: str

    externalQosPolicyId?: str

    externalSubnetIds?: [str]

    name?: str

    region?: str

    tags?: [str]

    tenantId?: str

    valueSpecs?: {str:str}

    vendorOptions?: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecForProviderVendorOptions


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecForProviderExternalFixedIPItems0:
    r"""
    networking openstack crossplane io v1alpha1 router v2 spec for provider external fixed IP items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The IP address to set on the router.
    subnetId : str, default is Undefined, optional
        Subnet in which the fixed IP belongs to.
    """


    ipAddress?: str

    subnetId?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecForProviderVendorOptions:
    r"""
    Map of additional vendor-specific options.
    Supported options are described below.

    Attributes
    ----------
    setRouterGatewayAfterCreate : bool, default is Undefined, optional
        Boolean to control whether
        the Router gateway is assigned during creation or updated after creation.
    """


    setRouterGatewayAfterCreate?: bool


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        Administrative up/down status for the router
        (must be "true" or "false" if provided). Changing this updates the
        admin_state_up of an existing router.
    availabilityZoneHints : [str], default is Undefined, optional
        An availability zone is used to make
        network resources highly available. Used for resources with high availability
        so that they are scheduled on different availability zones. Changing this
        creates a new router.
    description : str, default is Undefined, optional
        Human-readable description for the router.
    distributed : bool, default is Undefined, optional
        Indicates whether or not to create a
        distributed router. The default policy setting in Neutron restricts
        usage of this property to administrative users only.
    enableSnat : bool, default is Undefined, optional
        Enable Source NAT for the router. Valid values are
        "true" or "false". An external_network_id has to be set in order to
        set this property. Changing this updates the enable_snat of the router.
        Setting this value requires an ext-gw-mode extension to be enabled
        in OpenStack Neutron.
    externalFixedIp : [NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecInitProviderExternalFixedIPItems0], default is Undefined, optional
        An external fixed IP for the router. This
        can be repeated. The structure is described below. An external_network_id
        has to be set in order to set this property. Changing this updates the
        external fixed IPs of the router.
    externalNetworkId : str, default is Undefined, optional
        The network UUID of an external gateway
        for the router. A router with an external gateway is required if any
        compute instances or load balancers will be using floating IPs. Changing
        this updates the external gateway of the router.
    externalQosPolicyId : str, default is Undefined, optional
        The QoS policy UUID that will be applied
        on the external gateway for the router. Changing this updates the external
        gateway of the router.
    externalSubnetIds : [str], default is Undefined, optional
        A list of external subnet IDs to try over
        each to obtain a fixed IP for the router. If a subnet ID in a list has
        exhausted floating IP pool, the next subnet ID will be tried. This argument is
        used only during the router creation and allows to set only one external fixed
        IP. Conflicts with an external_fixed_ip argument.
    name : str, default is Undefined, optional
        A unique name for the router. Changing this
        updates the name of an existing router.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 networking client.
        A networking client is needed to create a router. If omitted, the
        region argument of the provider is used. Changing this creates a new
        router.
    tags : [str], default is Undefined, optional
        A set of string tags for the router.
    tenantId : str, default is Undefined, optional
        The owner of the floating IP. Required if admin wants
        to create a router for another tenant. Changing this creates a new router.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional driver-specific options.
    vendorOptions : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecInitProviderVendorOptions, default is Undefined, optional
        vendor options
    """


    adminStateUp?: bool

    availabilityZoneHints?: [str]

    description?: str

    distributed?: bool

    enableSnat?: bool

    externalFixedIp?: [NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecInitProviderExternalFixedIPItems0]

    externalNetworkId?: str

    externalQosPolicyId?: str

    externalSubnetIds?: [str]

    name?: str

    region?: str

    tags?: [str]

    tenantId?: str

    valueSpecs?: {str:str}

    vendorOptions?: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecInitProviderVendorOptions


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecInitProviderExternalFixedIPItems0:
    r"""
    networking openstack crossplane io v1alpha1 router v2 spec init provider external fixed IP items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The IP address to set on the router.
    subnetId : str, default is Undefined, optional
        Subnet in which the fixed IP belongs to.
    """


    ipAddress?: str

    subnetId?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecInitProviderVendorOptions:
    r"""
    Map of additional vendor-specific options.
    Supported options are described below.

    Attributes
    ----------
    setRouterGatewayAfterCreate : bool, default is Undefined, optional
        Boolean to control whether
        the Router gateway is assigned during creation or updated after creation.
    """


    setRouterGatewayAfterCreate?: bool


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecProviderConfigRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2Status:
    r"""
    RouterV2Status defines the observed state of RouterV2.

    Attributes
    ----------
    atProvider : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkingOpenstackCrossplaneIoV1alpha1RouterV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2StatusAtProvider

    conditions?: [NetworkingOpenstackCrossplaneIoV1alpha1RouterV2StatusConditionsItems0]

    observedGeneration?: int


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2StatusAtProvider:
    r"""
    networking openstack crossplane io v1alpha1 router v2 status at provider

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        Administrative up/down status for the router
        (must be "true" or "false" if provided). Changing this updates the
        admin_state_up of an existing router.
    allTags : [str], default is Undefined, optional
        The collection of tags assigned on the router, which have been
        explicitly and implicitly added.
    availabilityZoneHints : [str], default is Undefined, optional
        An availability zone is used to make
        network resources highly available. Used for resources with high availability
        so that they are scheduled on different availability zones. Changing this
        creates a new router.
    description : str, default is Undefined, optional
        Human-readable description for the router.
    distributed : bool, default is Undefined, optional
        Indicates whether or not to create a
        distributed router. The default policy setting in Neutron restricts
        usage of this property to administrative users only.
    enableSnat : bool, default is Undefined, optional
        Enable Source NAT for the router. Valid values are
        "true" or "false". An external_network_id has to be set in order to
        set this property. Changing this updates the enable_snat of the router.
        Setting this value requires an ext-gw-mode extension to be enabled
        in OpenStack Neutron.
    externalFixedIp : [NetworkingOpenstackCrossplaneIoV1alpha1RouterV2StatusAtProviderExternalFixedIPItems0], default is Undefined, optional
        An external fixed IP for the router. This
        can be repeated. The structure is described below. An external_network_id
        has to be set in order to set this property. Changing this updates the
        external fixed IPs of the router.
    externalNetworkId : str, default is Undefined, optional
        The network UUID of an external gateway
        for the router. A router with an external gateway is required if any
        compute instances or load balancers will be using floating IPs. Changing
        this updates the external gateway of the router.
    externalQosPolicyId : str, default is Undefined, optional
        The QoS policy UUID that will be applied
        on the external gateway for the router. Changing this updates the external
        gateway of the router.
    externalSubnetIds : [str], default is Undefined, optional
        A list of external subnet IDs to try over
        each to obtain a fixed IP for the router. If a subnet ID in a list has
        exhausted floating IP pool, the next subnet ID will be tried. This argument is
        used only during the router creation and allows to set only one external fixed
        IP. Conflicts with an external_fixed_ip argument.
    id : str, default is Undefined, optional
        ID of the router.
    name : str, default is Undefined, optional
        A unique name for the router. Changing this
        updates the name of an existing router.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 networking client.
        A networking client is needed to create a router. If omitted, the
        region argument of the provider is used. Changing this creates a new
        router.
    tags : [str], default is Undefined, optional
        A set of string tags for the router.
    tenantId : str, default is Undefined, optional
        The owner of the floating IP. Required if admin wants
        to create a router for another tenant. Changing this creates a new router.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional driver-specific options.
    vendorOptions : NetworkingOpenstackCrossplaneIoV1alpha1RouterV2StatusAtProviderVendorOptions, default is Undefined, optional
        vendor options
    """


    adminStateUp?: bool

    allTags?: [str]

    availabilityZoneHints?: [str]

    description?: str

    distributed?: bool

    enableSnat?: bool

    externalFixedIp?: [NetworkingOpenstackCrossplaneIoV1alpha1RouterV2StatusAtProviderExternalFixedIPItems0]

    externalNetworkId?: str

    externalQosPolicyId?: str

    externalSubnetIds?: [str]

    id?: str

    name?: str

    region?: str

    tags?: [str]

    tenantId?: str

    valueSpecs?: {str:str}

    vendorOptions?: NetworkingOpenstackCrossplaneIoV1alpha1RouterV2StatusAtProviderVendorOptions


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2StatusAtProviderExternalFixedIPItems0:
    r"""
    networking openstack crossplane io v1alpha1 router v2 status at provider external fixed IP items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The IP address to set on the router.
    subnetId : str, default is Undefined, optional
        Subnet in which the fixed IP belongs to.
    """


    ipAddress?: str

    subnetId?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2StatusAtProviderVendorOptions:
    r"""
    Map of additional vendor-specific options.
    Supported options are described below.

    Attributes
    ----------
    setRouterGatewayAfterCreate : bool, default is Undefined, optional
        Boolean to control whether
        the Router gateway is assigned during creation or updated after creation.
    """


    setRouterGatewayAfterCreate?: bool


schema NetworkingOpenstackCrossplaneIoV1alpha1RouterV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


