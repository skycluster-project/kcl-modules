"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ImageAccessV2:
    r"""
    ImageAccessV2 is the Schema for the ImageAccessV2s API. Manages a V2 Image member resource within OpenStack Glance.

    Attributes
    ----------
    apiVersion : str, default is "images.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ImageAccessV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2Spec, default is Undefined, required
        spec
    status : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2Status, default is Undefined, optional
        status
    """


    apiVersion: "images.openstack.crossplane.io/v1alpha1" = "images.openstack.crossplane.io/v1alpha1"

    kind: "ImageAccessV2" = "ImageAccessV2"

    metadata?: v1.ObjectMeta

    spec: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2Spec

    status?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2Status


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2Spec:
    r"""
    ImageAccessV2Spec defines the desired state of ImageAccessV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProvider

    initProvider?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecProviderConfigRef

    publishConnectionDetailsTo?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecWriteConnectionSecretToRef


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProvider:
    r"""
    images openstack crossplane io v1alpha1 image access v2 spec for provider

    Attributes
    ----------
    imageId : str, default is Undefined, optional
        The image ID.
    imageIdRef : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProviderImageIDRef, default is Undefined, optional
        image Id ref
    imageIdSelector : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProviderImageIDSelector, default is Undefined, optional
        image Id selector
    memberId : str, default is Undefined, optional
        The member ID, e.g. the target project ID.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Glance client.
        A Glance client is needed to manage Image members. If omitted, the region
        argument of the provider is used. Changing this creates a new resource.
    status : str, default is Undefined, optional
        The member proposal status. Optional if admin wants to
        force the member proposal acceptance. Can either be accepted, rejected or
        pending. Defaults to pending. Foridden for non-admin users.
    """


    imageId?: str

    imageIdRef?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProviderImageIDRef

    imageIdSelector?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProviderImageIDSelector

    memberId?: str

    region?: str

    status?: str


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProviderImageIDRef:
    r"""
    Reference to a ImageV2 in images to populate imageId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProviderImageIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProviderImageIDRefPolicy


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProviderImageIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProviderImageIDSelector:
    r"""
    Selector for a ImageV2 in images to populate imageId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProviderImageIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProviderImageIDSelectorPolicy


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecForProviderImageIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    imageId : str, default is Undefined, optional
        The image ID.
    imageIdRef : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProviderImageIDRef, default is Undefined, optional
        image Id ref
    imageIdSelector : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProviderImageIDSelector, default is Undefined, optional
        image Id selector
    memberId : str, default is Undefined, optional
        The member ID, e.g. the target project ID.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Glance client.
        A Glance client is needed to manage Image members. If omitted, the region
        argument of the provider is used. Changing this creates a new resource.
    status : str, default is Undefined, optional
        The member proposal status. Optional if admin wants to
        force the member proposal acceptance. Can either be accepted, rejected or
        pending. Defaults to pending. Foridden for non-admin users.
    """


    imageId?: str

    imageIdRef?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProviderImageIDRef

    imageIdSelector?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProviderImageIDSelector

    memberId?: str

    region?: str

    status?: str


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProviderImageIDRef:
    r"""
    Reference to a ImageV2 in images to populate imageId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProviderImageIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProviderImageIDRefPolicy


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProviderImageIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProviderImageIDSelector:
    r"""
    Selector for a ImageV2 in images to populate imageId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProviderImageIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProviderImageIDSelectorPolicy


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecInitProviderImageIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecProviderConfigRefPolicy


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecPublishConnectionDetailsToConfigRef

    metadata?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecPublishConnectionDetailsToMetadata

    name: str


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecPublishConnectionDetailsToConfigRefPolicy


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2Status:
    r"""
    ImageAccessV2Status defines the observed state of ImageAccessV2.

    Attributes
    ----------
    atProvider : ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2StatusAtProvider

    conditions?: [ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2StatusConditionsItems0]

    observedGeneration?: int


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2StatusAtProvider:
    r"""
    images openstack crossplane io v1alpha1 image access v2 status at provider

    Attributes
    ----------
    createdAt : str, default is Undefined, optional
        The date the image access was created.
    id : str, default is Undefined, optional
        id
    imageId : str, default is Undefined, optional
        The image ID.
    memberId : str, default is Undefined, optional
        The member ID, e.g. the target project ID.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Glance client.
        A Glance client is needed to manage Image members. If omitted, the region
        argument of the provider is used. Changing this creates a new resource.
    $schema : str, default is Undefined, optional
        The member schema.
    status : str, default is Undefined, optional
        The member proposal status. Optional if admin wants to
        force the member proposal acceptance. Can either be accepted, rejected or
        pending. Defaults to pending. Foridden for non-admin users.
    updatedAt : str, default is Undefined, optional
        The date the image access was last updated.
    """


    createdAt?: str

    id?: str

    imageId?: str

    memberId?: str

    region?: str

    $schema?: str

    status?: str

    updatedAt?: str


schema ImagesOpenstackCrossplaneIoV1alpha1ImageAccessV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


