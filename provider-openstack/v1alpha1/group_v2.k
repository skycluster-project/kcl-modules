"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema GroupV2:
    r"""
    GroupV2 is the Schema for the GroupV2s API. Manages a v2 firewall group resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "fw.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GroupV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : FwOpenstackCrossplaneIoV1alpha1GroupV2Spec, default is Undefined, required
        spec
    status : FwOpenstackCrossplaneIoV1alpha1GroupV2Status, default is Undefined, optional
        status
    """


    apiVersion: "fw.openstack.crossplane.io/v1alpha1" = "fw.openstack.crossplane.io/v1alpha1"

    kind: "GroupV2" = "GroupV2"

    metadata?: v1.ObjectMeta

    spec: FwOpenstackCrossplaneIoV1alpha1GroupV2Spec

    status?: FwOpenstackCrossplaneIoV1alpha1GroupV2Status


schema FwOpenstackCrossplaneIoV1alpha1GroupV2Spec:
    r"""
    GroupV2Spec defines the desired state of GroupV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProvider

    initProvider?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecProviderConfigRef

    publishConnectionDetailsTo?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecWriteConnectionSecretToRef


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProvider:
    r"""
    fw openstack crossplane io v1alpha1 group v2 spec for provider

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        Administrative up/down status for the firewall
        group (must be "true" or "false" if provided - defaults to "true").
        Changing this updates the admin_state_up of an existing firewall group.
    description : str, default is Undefined, optional
        A description for the firewall group. Changing this
        updates the description of an existing firewall group.
    egressFirewallPolicyId : str, default is Undefined, optional
        The egress firewall policy resource
        id for the firewall group. Changing this updates the
        egress_firewall_policy_id of an existing firewall group.
    egressFirewallPolicyIdRef : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderEgressFirewallPolicyIDRef, default is Undefined, optional
        egress firewall policy Id ref
    egressFirewallPolicyIdSelector : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderEgressFirewallPolicyIDSelector, default is Undefined, optional
        egress firewall policy Id selector
    ingressFirewallPolicyId : str, default is Undefined, optional
        The ingress firewall policy resource
        id for the firewall group. Changing this updates the
        ingress_firewall_policy_id of an existing firewall group.
    ingressFirewallPolicyIdRef : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderIngressFirewallPolicyIDRef, default is Undefined, optional
        ingress firewall policy Id ref
    ingressFirewallPolicyIdSelector : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderIngressFirewallPolicyIDSelector, default is Undefined, optional
        ingress firewall policy Id selector
    name : str, default is Undefined, optional
        A name for the firewall group. Changing this
        updates the name of an existing firewall.
    ports : [str], default is Undefined, optional
        Port(s) to associate this firewall group
        with. Must be a list of strings. Changing this updates the associated ports
        of an existing firewall group.
    projectId : str, default is Undefined, optional
        - This argument conflicts and  is interchangeable
        with tenant_id. The owner of the firewall group. Required if admin wants
        to create a firewall group for another project. Changing this creates a new
        firewall group.
    region : str, default is Undefined, optional
        The region in which to obtain the v2 networking client.
        A networking client is needed to create a firewall group. If omitted, the
        region argument of the provider is used. Changing this creates a new
        firewall group.
    shared : bool, default is Undefined, optional
        Sharing status of the firewall group (must be "true"
        or "false" if provided). If this is "true" the firewall group is visible to,
        and can be used in, firewalls in other tenants. Changing this updates the
        shared status of an existing firewall group. Only administrative users
        can specify if the firewall group should be shared.
    tenantId : str, default is Undefined, optional
        - This argument conflicts and is interchangeable with
        project_id. The owner of the firewall group. Required if admin wants to
        create a firewall group for another tenant. Changing this creates a new
        firewall group.
    """


    adminStateUp?: bool

    description?: str

    egressFirewallPolicyId?: str

    egressFirewallPolicyIdRef?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderEgressFirewallPolicyIDRef

    egressFirewallPolicyIdSelector?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderEgressFirewallPolicyIDSelector

    ingressFirewallPolicyId?: str

    ingressFirewallPolicyIdRef?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderIngressFirewallPolicyIDRef

    ingressFirewallPolicyIdSelector?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderIngressFirewallPolicyIDSelector

    name?: str

    ports?: [str]

    projectId?: str

    region?: str

    shared?: bool

    tenantId?: str


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderEgressFirewallPolicyIDRef:
    r"""
    Reference to a PolicyV2 in fw to populate egressFirewallPolicyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderEgressFirewallPolicyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderEgressFirewallPolicyIDRefPolicy


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderEgressFirewallPolicyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderEgressFirewallPolicyIDSelector:
    r"""
    Selector for a PolicyV2 in fw to populate egressFirewallPolicyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderEgressFirewallPolicyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderEgressFirewallPolicyIDSelectorPolicy


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderEgressFirewallPolicyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderIngressFirewallPolicyIDRef:
    r"""
    Reference to a PolicyV2 in fw to populate ingressFirewallPolicyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderIngressFirewallPolicyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderIngressFirewallPolicyIDRefPolicy


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderIngressFirewallPolicyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderIngressFirewallPolicyIDSelector:
    r"""
    Selector for a PolicyV2 in fw to populate ingressFirewallPolicyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderIngressFirewallPolicyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderIngressFirewallPolicyIDSelectorPolicy


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecForProviderIngressFirewallPolicyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        Administrative up/down status for the firewall
        group (must be "true" or "false" if provided - defaults to "true").
        Changing this updates the admin_state_up of an existing firewall group.
    description : str, default is Undefined, optional
        A description for the firewall group. Changing this
        updates the description of an existing firewall group.
    egressFirewallPolicyId : str, default is Undefined, optional
        The egress firewall policy resource
        id for the firewall group. Changing this updates the
        egress_firewall_policy_id of an existing firewall group.
    egressFirewallPolicyIdRef : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderEgressFirewallPolicyIDRef, default is Undefined, optional
        egress firewall policy Id ref
    egressFirewallPolicyIdSelector : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderEgressFirewallPolicyIDSelector, default is Undefined, optional
        egress firewall policy Id selector
    ingressFirewallPolicyId : str, default is Undefined, optional
        The ingress firewall policy resource
        id for the firewall group. Changing this updates the
        ingress_firewall_policy_id of an existing firewall group.
    ingressFirewallPolicyIdRef : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderIngressFirewallPolicyIDRef, default is Undefined, optional
        ingress firewall policy Id ref
    ingressFirewallPolicyIdSelector : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderIngressFirewallPolicyIDSelector, default is Undefined, optional
        ingress firewall policy Id selector
    name : str, default is Undefined, optional
        A name for the firewall group. Changing this
        updates the name of an existing firewall.
    ports : [str], default is Undefined, optional
        Port(s) to associate this firewall group
        with. Must be a list of strings. Changing this updates the associated ports
        of an existing firewall group.
    projectId : str, default is Undefined, optional
        - This argument conflicts and  is interchangeable
        with tenant_id. The owner of the firewall group. Required if admin wants
        to create a firewall group for another project. Changing this creates a new
        firewall group.
    region : str, default is Undefined, optional
        The region in which to obtain the v2 networking client.
        A networking client is needed to create a firewall group. If omitted, the
        region argument of the provider is used. Changing this creates a new
        firewall group.
    shared : bool, default is Undefined, optional
        Sharing status of the firewall group (must be "true"
        or "false" if provided). If this is "true" the firewall group is visible to,
        and can be used in, firewalls in other tenants. Changing this updates the
        shared status of an existing firewall group. Only administrative users
        can specify if the firewall group should be shared.
    tenantId : str, default is Undefined, optional
        - This argument conflicts and is interchangeable with
        project_id. The owner of the firewall group. Required if admin wants to
        create a firewall group for another tenant. Changing this creates a new
        firewall group.
    """


    adminStateUp?: bool

    description?: str

    egressFirewallPolicyId?: str

    egressFirewallPolicyIdRef?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderEgressFirewallPolicyIDRef

    egressFirewallPolicyIdSelector?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderEgressFirewallPolicyIDSelector

    ingressFirewallPolicyId?: str

    ingressFirewallPolicyIdRef?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderIngressFirewallPolicyIDRef

    ingressFirewallPolicyIdSelector?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderIngressFirewallPolicyIDSelector

    name?: str

    ports?: [str]

    projectId?: str

    region?: str

    shared?: bool

    tenantId?: str


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderEgressFirewallPolicyIDRef:
    r"""
    Reference to a PolicyV2 in fw to populate egressFirewallPolicyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderEgressFirewallPolicyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderEgressFirewallPolicyIDRefPolicy


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderEgressFirewallPolicyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderEgressFirewallPolicyIDSelector:
    r"""
    Selector for a PolicyV2 in fw to populate egressFirewallPolicyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderEgressFirewallPolicyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderEgressFirewallPolicyIDSelectorPolicy


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderEgressFirewallPolicyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderIngressFirewallPolicyIDRef:
    r"""
    Reference to a PolicyV2 in fw to populate ingressFirewallPolicyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderIngressFirewallPolicyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderIngressFirewallPolicyIDRefPolicy


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderIngressFirewallPolicyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderIngressFirewallPolicyIDSelector:
    r"""
    Selector for a PolicyV2 in fw to populate ingressFirewallPolicyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderIngressFirewallPolicyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderIngressFirewallPolicyIDSelectorPolicy


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecInitProviderIngressFirewallPolicyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecProviderConfigRefPolicy


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecPublishConnectionDetailsToConfigRef

    metadata?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecPublishConnectionDetailsToMetadata

    name: str


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FwOpenstackCrossplaneIoV1alpha1GroupV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FwOpenstackCrossplaneIoV1alpha1GroupV2SpecPublishConnectionDetailsToConfigRefPolicy


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema FwOpenstackCrossplaneIoV1alpha1GroupV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema FwOpenstackCrossplaneIoV1alpha1GroupV2Status:
    r"""
    GroupV2Status defines the observed state of GroupV2.

    Attributes
    ----------
    atProvider : FwOpenstackCrossplaneIoV1alpha1GroupV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [FwOpenstackCrossplaneIoV1alpha1GroupV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: FwOpenstackCrossplaneIoV1alpha1GroupV2StatusAtProvider

    conditions?: [FwOpenstackCrossplaneIoV1alpha1GroupV2StatusConditionsItems0]

    observedGeneration?: int


schema FwOpenstackCrossplaneIoV1alpha1GroupV2StatusAtProvider:
    r"""
    fw openstack crossplane io v1alpha1 group v2 status at provider

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        Administrative up/down status for the firewall
        group (must be "true" or "false" if provided - defaults to "true").
        Changing this updates the admin_state_up of an existing firewall group.
    description : str, default is Undefined, optional
        A description for the firewall group. Changing this
        updates the description of an existing firewall group.
    egressFirewallPolicyId : str, default is Undefined, optional
        The egress firewall policy resource
        id for the firewall group. Changing this updates the
        egress_firewall_policy_id of an existing firewall group.
    id : str, default is Undefined, optional
        id
    ingressFirewallPolicyId : str, default is Undefined, optional
        The ingress firewall policy resource
        id for the firewall group. Changing this updates the
        ingress_firewall_policy_id of an existing firewall group.
    name : str, default is Undefined, optional
        A name for the firewall group. Changing this
        updates the name of an existing firewall.
    ports : [str], default is Undefined, optional
        Port(s) to associate this firewall group
        with. Must be a list of strings. Changing this updates the associated ports
        of an existing firewall group.
    projectId : str, default is Undefined, optional
        - This argument conflicts and  is interchangeable
        with tenant_id. The owner of the firewall group. Required if admin wants
        to create a firewall group for another project. Changing this creates a new
        firewall group.
    region : str, default is Undefined, optional
        The region in which to obtain the v2 networking client.
        A networking client is needed to create a firewall group. If omitted, the
        region argument of the provider is used. Changing this creates a new
        firewall group.
    shared : bool, default is Undefined, optional
        Sharing status of the firewall group (must be "true"
        or "false" if provided). If this is "true" the firewall group is visible to,
        and can be used in, firewalls in other tenants. Changing this updates the
        shared status of an existing firewall group. Only administrative users
        can specify if the firewall group should be shared.
    status : str, default is Undefined, optional
        The status of the firewall group.
    tenantId : str, default is Undefined, optional
        - This argument conflicts and is interchangeable with
        project_id. The owner of the firewall group. Required if admin wants to
        create a firewall group for another tenant. Changing this creates a new
        firewall group.
    """


    adminStateUp?: bool

    description?: str

    egressFirewallPolicyId?: str

    id?: str

    ingressFirewallPolicyId?: str

    name?: str

    ports?: [str]

    projectId?: str

    region?: str

    shared?: bool

    status?: str

    tenantId?: str


schema FwOpenstackCrossplaneIoV1alpha1GroupV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


