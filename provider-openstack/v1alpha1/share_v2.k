"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ShareV2:
    r"""
    ShareV2 is the Schema for the ShareV2s API. Configure a Shared File System share.

    Attributes
    ----------
    apiVersion : str, default is "sharedfilesystem.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ShareV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2Spec, default is Undefined, required
        spec
    status : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2Status, default is Undefined, optional
        status
    """


    apiVersion: "sharedfilesystem.openstack.crossplane.io/v1alpha1" = "sharedfilesystem.openstack.crossplane.io/v1alpha1"

    kind: "ShareV2" = "ShareV2"

    metadata?: v1.ObjectMeta

    spec: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2Spec

    status?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2Status


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2Spec:
    r"""
    ShareV2Spec defines the desired state of ShareV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProvider

    initProvider?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecProviderConfigRef

    publishConnectionDetailsTo?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecWriteConnectionSecretToRef


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProvider:
    r"""
    sharedfilesystem openstack crossplane io v1alpha1 share v2 spec for provider

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        The share availability zone. Changing this creates a
        new share.
    description : str, default is Undefined, optional
        The human-readable description for the share.
        Changing this updates the description of the existing share.
    isPublic : bool, default is Undefined, optional
        The level of visibility for the share. Set to true to make
        share public. Set to false to make it private. Default value is false. Changing this
        updates the existing share.
    metadata : {str:str}, default is Undefined, optional
        One or more metadata key and value pairs as a dictionary of
        strings.
    name : str, default is Undefined, optional
        The name of the share. Changing this updates the name
        of the existing share.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Shared File System
        client. A Shared File System client is needed to create a share. Changing
        this creates a new share.
    shareNetworkId : str, default is Undefined, optional
        The UUID of a share network where the share server exists
        or will be created. If share_network_id is not set and you provide a snapshot_id,
        the share_network_id value from the snapshot is used. Changing this creates a new share.
    shareNetworkIdRef : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProviderShareNetworkIDRef, default is Undefined, optional
        share network Id ref
    shareNetworkIdSelector : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProviderShareNetworkIDSelector, default is Undefined, optional
        share network Id selector
    shareProto : str, default is Undefined, optional
        The share protocol - can either be NFS, CIFS,
        CEPHFS, GLUSTERFS, HDFS or MAPRFS. Changing this creates a new share.
    shareType : str, default is Undefined, optional
        The share type name. If you omit this parameter, the default
        share type is used.
    size : float, default is Undefined, optional
        The share size, in GBs. The requested share size cannot be greater
        than the allowed GB quota. Changing this resizes the existing share.
    snapshotId : str, default is Undefined, optional
        The UUID of the share's base snapshot. Changing this creates
        a new share.
    """


    availabilityZone?: str

    description?: str

    isPublic?: bool

    metadata?: {str:str}

    name?: str

    region?: str

    shareNetworkId?: str

    shareNetworkIdRef?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProviderShareNetworkIDRef

    shareNetworkIdSelector?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProviderShareNetworkIDSelector

    shareProto?: str

    shareType?: str

    size?: float

    snapshotId?: str


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProviderShareNetworkIDRef:
    r"""
    Reference to a SharenetworkV2 in sharedfilesystem to populate shareNetworkId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProviderShareNetworkIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProviderShareNetworkIDRefPolicy


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProviderShareNetworkIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProviderShareNetworkIDSelector:
    r"""
    Selector for a SharenetworkV2 in sharedfilesystem to populate shareNetworkId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProviderShareNetworkIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProviderShareNetworkIDSelectorPolicy


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecForProviderShareNetworkIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        The share availability zone. Changing this creates a
        new share.
    description : str, default is Undefined, optional
        The human-readable description for the share.
        Changing this updates the description of the existing share.
    isPublic : bool, default is Undefined, optional
        The level of visibility for the share. Set to true to make
        share public. Set to false to make it private. Default value is false. Changing this
        updates the existing share.
    metadata : {str:str}, default is Undefined, optional
        One or more metadata key and value pairs as a dictionary of
        strings.
    name : str, default is Undefined, optional
        The name of the share. Changing this updates the name
        of the existing share.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Shared File System
        client. A Shared File System client is needed to create a share. Changing
        this creates a new share.
    shareNetworkId : str, default is Undefined, optional
        The UUID of a share network where the share server exists
        or will be created. If share_network_id is not set and you provide a snapshot_id,
        the share_network_id value from the snapshot is used. Changing this creates a new share.
    shareNetworkIdRef : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProviderShareNetworkIDRef, default is Undefined, optional
        share network Id ref
    shareNetworkIdSelector : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProviderShareNetworkIDSelector, default is Undefined, optional
        share network Id selector
    shareProto : str, default is Undefined, optional
        The share protocol - can either be NFS, CIFS,
        CEPHFS, GLUSTERFS, HDFS or MAPRFS. Changing this creates a new share.
    shareType : str, default is Undefined, optional
        The share type name. If you omit this parameter, the default
        share type is used.
    size : float, default is Undefined, optional
        The share size, in GBs. The requested share size cannot be greater
        than the allowed GB quota. Changing this resizes the existing share.
    snapshotId : str, default is Undefined, optional
        The UUID of the share's base snapshot. Changing this creates
        a new share.
    """


    availabilityZone?: str

    description?: str

    isPublic?: bool

    metadata?: {str:str}

    name?: str

    region?: str

    shareNetworkId?: str

    shareNetworkIdRef?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProviderShareNetworkIDRef

    shareNetworkIdSelector?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProviderShareNetworkIDSelector

    shareProto?: str

    shareType?: str

    size?: float

    snapshotId?: str


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProviderShareNetworkIDRef:
    r"""
    Reference to a SharenetworkV2 in sharedfilesystem to populate shareNetworkId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProviderShareNetworkIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProviderShareNetworkIDRefPolicy


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProviderShareNetworkIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProviderShareNetworkIDSelector:
    r"""
    Selector for a SharenetworkV2 in sharedfilesystem to populate shareNetworkId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProviderShareNetworkIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProviderShareNetworkIDSelectorPolicy


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecInitProviderShareNetworkIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecProviderConfigRefPolicy


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecPublishConnectionDetailsToConfigRef

    metadata?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecPublishConnectionDetailsToMetadata

    name: str


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecPublishConnectionDetailsToConfigRefPolicy


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2Status:
    r"""
    ShareV2Status defines the observed state of ShareV2.

    Attributes
    ----------
    atProvider : SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2StatusAtProvider

    conditions?: [SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2StatusConditionsItems0]

    observedGeneration?: int


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2StatusAtProvider:
    r"""
    sharedfilesystem openstack crossplane io v1alpha1 share v2 status at provider

    Attributes
    ----------
    allMetadata : {str:str}, default is Undefined, optional
        The map of metadata, assigned on the share, which has been
        explicitly and implicitly added.
    availabilityZone : str, default is Undefined, optional
        The share availability zone. Changing this creates a
        new share.
    description : str, default is Undefined, optional
        The human-readable description for the share.
        Changing this updates the description of the existing share.
    exportLocations : [SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2StatusAtProviderExportLocationsItems0], default is Undefined, optional
        A list of export locations. For example, when a share server
        has more than one network interface, it can have multiple export locations.
    hasReplicas : bool, default is Undefined, optional
        Indicates whether a share has replicas or not.
    host : str, default is Undefined, optional
        The share host name.
    id : str, default is Undefined, optional
        The unique ID for the Share.
    isPublic : bool, default is Undefined, optional
        The level of visibility for the share. Set to true to make
        share public. Set to false to make it private. Default value is false. Changing this
        updates the existing share.
    metadata : {str:str}, default is Undefined, optional
        One or more metadata key and value pairs as a dictionary of
        strings.
    name : str, default is Undefined, optional
        The name of the share. Changing this updates the name
        of the existing share.
    projectId : str, default is Undefined, optional
        The owner of the Share.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Shared File System
        client. A Shared File System client is needed to create a share. Changing
        this creates a new share.
    replicationType : str, default is Undefined, optional
        The share replication type.
    shareNetworkId : str, default is Undefined, optional
        The UUID of a share network where the share server exists
        or will be created. If share_network_id is not set and you provide a snapshot_id,
        the share_network_id value from the snapshot is used. Changing this creates a new share.
    shareProto : str, default is Undefined, optional
        The share protocol - can either be NFS, CIFS,
        CEPHFS, GLUSTERFS, HDFS or MAPRFS. Changing this creates a new share.
    shareServerId : str, default is Undefined, optional
        The UUID of the share server.
    shareType : str, default is Undefined, optional
        The share type name. If you omit this parameter, the default
        share type is used.
    size : float, default is Undefined, optional
        The share size, in GBs. The requested share size cannot be greater
        than the allowed GB quota. Changing this resizes the existing share.
    snapshotId : str, default is Undefined, optional
        The UUID of the share's base snapshot. Changing this creates
        a new share.
    """


    allMetadata?: {str:str}

    availabilityZone?: str

    description?: str

    exportLocations?: [SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2StatusAtProviderExportLocationsItems0]

    hasReplicas?: bool

    host?: str

    id?: str

    isPublic?: bool

    metadata?: {str:str}

    name?: str

    projectId?: str

    region?: str

    replicationType?: str

    shareNetworkId?: str

    shareProto?: str

    shareServerId?: str

    shareType?: str

    size?: float

    snapshotId?: str


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2StatusAtProviderExportLocationsItems0:
    r"""
    sharedfilesystem openstack crossplane io v1alpha1 share v2 status at provider export locations items0

    Attributes
    ----------
    path : str, default is Undefined, optional
        path
    preferred : str, default is Undefined, optional
        preferred
    """


    path?: str

    preferred?: str


schema SharedfilesystemOpenstackCrossplaneIoV1alpha1ShareV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


