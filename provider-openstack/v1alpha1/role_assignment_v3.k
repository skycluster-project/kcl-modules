"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RoleAssignmentV3:
    r"""
    RoleAssignmentV3 is the Schema for the RoleAssignmentV3s API. Manages a V3 Role assignment within OpenStack Keystone.

    Attributes
    ----------
    apiVersion : str, default is "identity.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RoleAssignmentV3", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3Spec, default is Undefined, required
        spec
    status : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3Status, default is Undefined, optional
        status
    """


    apiVersion: "identity.openstack.crossplane.io/v1alpha1" = "identity.openstack.crossplane.io/v1alpha1"

    kind: "RoleAssignmentV3" = "RoleAssignmentV3"

    metadata?: v1.ObjectMeta

    spec: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3Spec

    status?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3Status


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3Spec:
    r"""
    RoleAssignmentV3Spec defines the desired state of RoleAssignmentV3

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProvider, default is Undefined, required
        for provider
    initProvider : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProvider

    initProvider?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecProviderConfigRef

    publishConnectionDetailsTo?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecWriteConnectionSecretToRef


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProvider:
    r"""
    identity openstack crossplane io v1alpha1 role assignment v3 spec for provider

    Attributes
    ----------
    domainId : str, default is Undefined, optional
        The domain to assign the role in.
    groupId : str, default is Undefined, optional
        The group to assign the role to.
    projectId : str, default is Undefined, optional
        The project to assign the role in.
    projectIdRef : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderProjectIDRef, default is Undefined, optional
        project Id ref
    projectIdSelector : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderProjectIDSelector, default is Undefined, optional
        project Id selector
    region : str, default is Undefined, optional
        The region in which to obtain the V3 Keystone client.
        If omitted, the region argument of the provider is used. Changing this
        creates a new role assignment.
    roleId : str, default is Undefined, optional
        The role to assign.
    roleIdRef : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderRoleIDRef, default is Undefined, optional
        role Id ref
    roleIdSelector : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderRoleIDSelector, default is Undefined, optional
        role Id selector
    userId : str, default is Undefined, optional
        The user to assign the role to.
    userIdRef : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderUserIDRef, default is Undefined, optional
        user Id ref
    userIdSelector : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderUserIDSelector, default is Undefined, optional
        user Id selector
    """


    domainId?: str

    groupId?: str

    projectId?: str

    projectIdRef?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderProjectIDRef

    projectIdSelector?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderProjectIDSelector

    region?: str

    roleId?: str

    roleIdRef?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderRoleIDRef

    roleIdSelector?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderRoleIDSelector

    userId?: str

    userIdRef?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderUserIDRef

    userIdSelector?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderUserIDSelector


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderProjectIDRef:
    r"""
    Reference to a ProjectV3 in identity to populate projectId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderProjectIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderProjectIDRefPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderProjectIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderProjectIDSelector:
    r"""
    Selector for a ProjectV3 in identity to populate projectId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderProjectIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderProjectIDSelectorPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderProjectIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderRoleIDRef:
    r"""
    Reference to a RoleV3 in identity to populate roleId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderRoleIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderRoleIDRefPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderRoleIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderRoleIDSelector:
    r"""
    Selector for a RoleV3 in identity to populate roleId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderRoleIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderRoleIDSelectorPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderRoleIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderUserIDRef:
    r"""
    Reference to a UserV3 in identity to populate userId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderUserIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderUserIDRefPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderUserIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderUserIDSelector:
    r"""
    Selector for a UserV3 in identity to populate userId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderUserIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderUserIDSelectorPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecForProviderUserIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    domainId : str, default is Undefined, optional
        The domain to assign the role in.
    groupId : str, default is Undefined, optional
        The group to assign the role to.
    projectId : str, default is Undefined, optional
        The project to assign the role in.
    projectIdRef : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderProjectIDRef, default is Undefined, optional
        project Id ref
    projectIdSelector : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderProjectIDSelector, default is Undefined, optional
        project Id selector
    region : str, default is Undefined, optional
        The region in which to obtain the V3 Keystone client.
        If omitted, the region argument of the provider is used. Changing this
        creates a new role assignment.
    roleId : str, default is Undefined, optional
        The role to assign.
    roleIdRef : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderRoleIDRef, default is Undefined, optional
        role Id ref
    roleIdSelector : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderRoleIDSelector, default is Undefined, optional
        role Id selector
    userId : str, default is Undefined, optional
        The user to assign the role to.
    userIdRef : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderUserIDRef, default is Undefined, optional
        user Id ref
    userIdSelector : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderUserIDSelector, default is Undefined, optional
        user Id selector
    """


    domainId?: str

    groupId?: str

    projectId?: str

    projectIdRef?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderProjectIDRef

    projectIdSelector?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderProjectIDSelector

    region?: str

    roleId?: str

    roleIdRef?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderRoleIDRef

    roleIdSelector?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderRoleIDSelector

    userId?: str

    userIdRef?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderUserIDRef

    userIdSelector?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderUserIDSelector


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderProjectIDRef:
    r"""
    Reference to a ProjectV3 in identity to populate projectId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderProjectIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderProjectIDRefPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderProjectIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderProjectIDSelector:
    r"""
    Selector for a ProjectV3 in identity to populate projectId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderProjectIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderProjectIDSelectorPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderProjectIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderRoleIDRef:
    r"""
    Reference to a RoleV3 in identity to populate roleId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderRoleIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderRoleIDRefPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderRoleIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderRoleIDSelector:
    r"""
    Selector for a RoleV3 in identity to populate roleId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderRoleIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderRoleIDSelectorPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderRoleIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderUserIDRef:
    r"""
    Reference to a UserV3 in identity to populate userId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderUserIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderUserIDRefPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderUserIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderUserIDSelector:
    r"""
    Selector for a UserV3 in identity to populate userId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderUserIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderUserIDSelectorPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecInitProviderUserIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecProviderConfigRefPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecPublishConnectionDetailsToConfigRef

    metadata?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecPublishConnectionDetailsToMetadata

    name: str


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecPublishConnectionDetailsToConfigRefPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3Status:
    r"""
    RoleAssignmentV3Status defines the observed state of RoleAssignmentV3.

    Attributes
    ----------
    atProvider : IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3StatusAtProvider

    conditions?: [IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3StatusConditionsItems0]

    observedGeneration?: int


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3StatusAtProvider:
    r"""
    identity openstack crossplane io v1alpha1 role assignment v3 status at provider

    Attributes
    ----------
    domainId : str, default is Undefined, optional
        The domain to assign the role in.
    groupId : str, default is Undefined, optional
        The group to assign the role to.
    id : str, default is Undefined, optional
        id
    projectId : str, default is Undefined, optional
        The project to assign the role in.
    region : str, default is Undefined, optional
        The region in which to obtain the V3 Keystone client.
        If omitted, the region argument of the provider is used. Changing this
        creates a new role assignment.
    roleId : str, default is Undefined, optional
        The role to assign.
    userId : str, default is Undefined, optional
        The user to assign the role to.
    """


    domainId?: str

    groupId?: str

    id?: str

    projectId?: str

    region?: str

    roleId?: str

    userId?: str


schema IdentityOpenstackCrossplaneIoV1alpha1RoleAssignmentV3StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


