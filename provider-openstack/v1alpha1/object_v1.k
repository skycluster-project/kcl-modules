"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ObjectV1:
    r"""
    ObjectV1 is the Schema for the ObjectV1s API. Manages a V1 container object resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "objectstorage.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ObjectV1", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1Spec, default is Undefined, required
        spec
    status : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1Status, default is Undefined, optional
        status
    """


    apiVersion: "objectstorage.openstack.crossplane.io/v1alpha1" = "objectstorage.openstack.crossplane.io/v1alpha1"

    kind: "ObjectV1" = "ObjectV1"

    metadata?: v1.ObjectMeta

    spec: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1Spec

    status?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1Status


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1Spec:
    r"""
    ObjectV1Spec defines the desired state of ObjectV1

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProvider, default is Undefined, required
        for provider
    initProvider : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProvider

    initProvider?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecProviderConfigRef

    publishConnectionDetailsTo?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecWriteConnectionSecretToRef


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProvider:
    r"""
    objectstorage openstack crossplane io v1alpha1 object v1 spec for provider

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        A unique (within an account) name for the container.
        The container name must be from 1 to 256 characters long and can start
        with any character and contain any pattern. Character set must be UTF-8.
        The container name cannot contain a slash (/) character because this
        character delimits the container and object name. For example, the path
        /v1/account/www/pages specifies the www container, not the www/pages container.
    containerNameRef : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProviderContainerNameRef, default is Undefined, optional
        container name ref
    containerNameSelector : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProviderContainerNameSelector, default is Undefined, optional
        container name selector
    content : str, default is Undefined, optional
        A string representing the content of the object. Conflicts with
        source and copy_from.
    contentDisposition : str, default is Undefined, optional
        A string which specifies the override behavior for
        the browser. For example, this header might specify that the browser use a download
        program to save this file rather than show the file, which is the default.
    contentEncoding : str, default is Undefined, optional
        A string representing the value of the Content-Encoding
        metadata.
    contentType : str, default is Undefined, optional
        A string which sets the MIME type for the object.
    copyFrom : str, default is Undefined, optional
        A string representing the name of an object
        used to create the new object by copying the copy_from object. The value is in form
        {container}/{object}. You must UTF-8-encode and then URL-encode the names of the
        container and object before you include them in the header. Conflicts with source and
        content.
    deleteAfter : float, default is Undefined, optional
        An integer representing the number of seconds after which the
        system removes the object. Internally, the Object Storage system stores this value in
        the X-Delete-At metadata item.
    deleteAt : str, default is Undefined, optional
        An string representing the date when the system removes the object.
        For example, "2015-08-26" is equivalent to Mon, Wed, 26 Aug 2015 00:00:00 GMT.
    detectContentType : bool, default is Undefined, optional
        If set to true, Object Storage guesses the content
        type based on the file extension and ignores the value sent in the Content-Type
        header, if present.
    etag : str, default is Undefined, optional
        Used to trigger updates. The only meaningful value is ${md5(file("path/to/file"))}.
    metadata : {str:str}, default is Undefined, optional
        metadata
    name : str, default is Undefined, optional
        A unique name for the object.
    objectManifest : str, default is Undefined, optional
        A string set to specify that this is a dynamic large
        object manifest object. The value is the container and object name prefix of the
        segment objects in the form container/prefix. You must UTF-8-encode and then
        URL-encode the names of the container and prefix before you include them in this
        header.
    region : str, default is Undefined, optional
        The region in which to create the container. If
        omitted, the region argument of the provider is used. Changing this
        creates a new container.
    source : str, default is Undefined, optional
        A string representing the local path of a file which will be used
        as the object's content. Conflicts with source and copy_from.
    """


    containerName?: str

    containerNameRef?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProviderContainerNameRef

    containerNameSelector?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProviderContainerNameSelector

    content?: str

    contentDisposition?: str

    contentEncoding?: str

    contentType?: str

    copyFrom?: str

    deleteAfter?: float

    deleteAt?: str

    detectContentType?: bool

    etag?: str

    metadata?: {str:str}

    name?: str

    objectManifest?: str

    region?: str

    source?: str


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProviderContainerNameRef:
    r"""
    Reference to a ContainerV1 in objectstorage to populate containerName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProviderContainerNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProviderContainerNameRefPolicy


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProviderContainerNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProviderContainerNameSelector:
    r"""
    Selector for a ContainerV1 in objectstorage to populate containerName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProviderContainerNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProviderContainerNameSelectorPolicy


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecForProviderContainerNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        A unique (within an account) name for the container.
        The container name must be from 1 to 256 characters long and can start
        with any character and contain any pattern. Character set must be UTF-8.
        The container name cannot contain a slash (/) character because this
        character delimits the container and object name. For example, the path
        /v1/account/www/pages specifies the www container, not the www/pages container.
    containerNameRef : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProviderContainerNameRef, default is Undefined, optional
        container name ref
    containerNameSelector : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProviderContainerNameSelector, default is Undefined, optional
        container name selector
    content : str, default is Undefined, optional
        A string representing the content of the object. Conflicts with
        source and copy_from.
    contentDisposition : str, default is Undefined, optional
        A string which specifies the override behavior for
        the browser. For example, this header might specify that the browser use a download
        program to save this file rather than show the file, which is the default.
    contentEncoding : str, default is Undefined, optional
        A string representing the value of the Content-Encoding
        metadata.
    contentType : str, default is Undefined, optional
        A string which sets the MIME type for the object.
    copyFrom : str, default is Undefined, optional
        A string representing the name of an object
        used to create the new object by copying the copy_from object. The value is in form
        {container}/{object}. You must UTF-8-encode and then URL-encode the names of the
        container and object before you include them in the header. Conflicts with source and
        content.
    deleteAfter : float, default is Undefined, optional
        An integer representing the number of seconds after which the
        system removes the object. Internally, the Object Storage system stores this value in
        the X-Delete-At metadata item.
    deleteAt : str, default is Undefined, optional
        An string representing the date when the system removes the object.
        For example, "2015-08-26" is equivalent to Mon, Wed, 26 Aug 2015 00:00:00 GMT.
    detectContentType : bool, default is Undefined, optional
        If set to true, Object Storage guesses the content
        type based on the file extension and ignores the value sent in the Content-Type
        header, if present.
    etag : str, default is Undefined, optional
        Used to trigger updates. The only meaningful value is ${md5(file("path/to/file"))}.
    metadata : {str:str}, default is Undefined, optional
        metadata
    name : str, default is Undefined, optional
        A unique name for the object.
    objectManifest : str, default is Undefined, optional
        A string set to specify that this is a dynamic large
        object manifest object. The value is the container and object name prefix of the
        segment objects in the form container/prefix. You must UTF-8-encode and then
        URL-encode the names of the container and prefix before you include them in this
        header.
    region : str, default is Undefined, optional
        The region in which to create the container. If
        omitted, the region argument of the provider is used. Changing this
        creates a new container.
    source : str, default is Undefined, optional
        A string representing the local path of a file which will be used
        as the object's content. Conflicts with source and copy_from.
    """


    containerName?: str

    containerNameRef?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProviderContainerNameRef

    containerNameSelector?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProviderContainerNameSelector

    content?: str

    contentDisposition?: str

    contentEncoding?: str

    contentType?: str

    copyFrom?: str

    deleteAfter?: float

    deleteAt?: str

    detectContentType?: bool

    etag?: str

    metadata?: {str:str}

    name?: str

    objectManifest?: str

    region?: str

    source?: str


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProviderContainerNameRef:
    r"""
    Reference to a ContainerV1 in objectstorage to populate containerName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProviderContainerNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProviderContainerNameRefPolicy


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProviderContainerNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProviderContainerNameSelector:
    r"""
    Selector for a ContainerV1 in objectstorage to populate containerName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProviderContainerNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProviderContainerNameSelectorPolicy


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecInitProviderContainerNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecProviderConfigRefPolicy


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecPublishConnectionDetailsToConfigRef

    metadata?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecPublishConnectionDetailsToMetadata

    name: str


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecPublishConnectionDetailsToConfigRefPolicy


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1Status:
    r"""
    ObjectV1Status defines the observed state of ObjectV1.

    Attributes
    ----------
    atProvider : ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1StatusAtProvider

    conditions?: [ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1StatusConditionsItems0]

    observedGeneration?: int


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1StatusAtProvider:
    r"""
    objectstorage openstack crossplane io v1alpha1 object v1 status at provider

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        A unique (within an account) name for the container.
        The container name must be from 1 to 256 characters long and can start
        with any character and contain any pattern. Character set must be UTF-8.
        The container name cannot contain a slash (/) character because this
        character delimits the container and object name. For example, the path
        /v1/account/www/pages specifies the www container, not the www/pages container.
    content : str, default is Undefined, optional
        A string representing the content of the object. Conflicts with
        source and copy_from.
    contentDisposition : str, default is Undefined, optional
        A string which specifies the override behavior for
        the browser. For example, this header might specify that the browser use a download
        program to save this file rather than show the file, which is the default.
    contentEncoding : str, default is Undefined, optional
        A string representing the value of the Content-Encoding
        metadata.
    contentLength : float, default is Undefined, optional
        If the operation succeeds, this value is zero (0) or the
        length of informational or error text in the response body.
    contentType : str, default is Undefined, optional
        A string which sets the MIME type for the object.
    copyFrom : str, default is Undefined, optional
        A string representing the name of an object
        used to create the new object by copying the copy_from object. The value is in form
        {container}/{object}. You must UTF-8-encode and then URL-encode the names of the
        container and object before you include them in the header. Conflicts with source and
        content.
    date : str, default is Undefined, optional
        The date and time the system responded to the request, using the preferred
        format of RFC 7231 as shown in this example Thu, 16 Jun 2016 15:10:38 GMT. The
        time is always in UTC.
    deleteAfter : float, default is Undefined, optional
        An integer representing the number of seconds after which the
        system removes the object. Internally, the Object Storage system stores this value in
        the X-Delete-At metadata item.
    deleteAt : str, default is Undefined, optional
        An string representing the date when the system removes the object.
        For example, "2015-08-26" is equivalent to Mon, Wed, 26 Aug 2015 00:00:00 GMT.
    detectContentType : bool, default is Undefined, optional
        If set to true, Object Storage guesses the content
        type based on the file extension and ignores the value sent in the Content-Type
        header, if present.
    etag : str, default is Undefined, optional
        Used to trigger updates. The only meaningful value is ${md5(file("path/to/file"))}.
    id : str, default is Undefined, optional
        id
    lastModified : str, default is Undefined, optional
        The date and time when the object was last modified. The date and time
        stamp format is ISO 8601:
        CCYY-MM-DDThh:mm:ss±hh:mm
        For example, 2015-08-27T09:49:58-05:00.
        The ±hh:mm value, if included, is the time zone as an offset from UTC. In the previous
        example, the offset value is -05:00.
    metadata : {str:str}, default is Undefined, optional
        metadata
    name : str, default is Undefined, optional
        A unique name for the object.
    objectManifest : str, default is Undefined, optional
        A string set to specify that this is a dynamic large
        object manifest object. The value is the container and object name prefix of the
        segment objects in the form container/prefix. You must UTF-8-encode and then
        URL-encode the names of the container and prefix before you include them in this
        header.
    region : str, default is Undefined, optional
        The region in which to create the container. If
        omitted, the region argument of the provider is used. Changing this
        creates a new container.
    source : str, default is Undefined, optional
        A string representing the local path of a file which will be used
        as the object's content. Conflicts with source and copy_from.
    transId : str, default is Undefined, optional
        A unique transaction ID for this request. Your service provider might
        need this value if you report a problem.
    """


    containerName?: str

    content?: str

    contentDisposition?: str

    contentEncoding?: str

    contentLength?: float

    contentType?: str

    copyFrom?: str

    date?: str

    deleteAfter?: float

    deleteAt?: str

    detectContentType?: bool

    etag?: str

    id?: str

    lastModified?: str

    metadata?: {str:str}

    name?: str

    objectManifest?: str

    region?: str

    source?: str

    transId?: str


schema ObjectstorageOpenstackCrossplaneIoV1alpha1ObjectV1StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


