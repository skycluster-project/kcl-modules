"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TrunkV2:
    r"""
    TrunkV2 is the Schema for the TrunkV2s API. Manages a networking V2 trunk resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "networking.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TrunkV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2Spec, default is Undefined, required
        spec
    status : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2Status, default is Undefined, optional
        status
    """


    apiVersion: "networking.openstack.crossplane.io/v1alpha1" = "networking.openstack.crossplane.io/v1alpha1"

    kind: "TrunkV2" = "TrunkV2"

    metadata?: v1.ObjectMeta

    spec: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2Spec

    status?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2Status


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2Spec:
    r"""
    TrunkV2Spec defines the desired state of TrunkV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProvider

    initProvider?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecWriteConnectionSecretToRef


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProvider:
    r"""
    networking openstack crossplane io v1alpha1 trunk v2 spec for provider

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        Administrative up/down status for the trunk
        (must be "true" or "false" if provided). Changing this updates the
        admin_state_up of an existing trunk.
    description : str, default is Undefined, optional
        Human-readable description of the trunk. Changing this
        updates the name of the existing trunk.
    name : str, default is Undefined, optional
        A unique name for the trunk. Changing this
        updates the name of an existing trunk.
    portId : str, default is Undefined, optional
        The ID of the port to be used as the parent port of the
        trunk. This is the port that should be used as the compute instance network
        port. Changing this creates a new trunk.
    portIdRef : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderPortIDRef, default is Undefined, optional
        port Id ref
    portIdSelector : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderPortIDSelector, default is Undefined, optional
        port Id selector
    region : str, default is Undefined, optional
        The region in which to obtain the V2 networking client.
        A networking client is needed to create a trunk. If omitted, the
        region argument of the provider is used. Changing this creates a new
        trunk.
    subPort : [NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0], default is Undefined, optional
        The set of ports that will be made subports of the trunk.
        The structure of each subport is described below.
    tags : [str], default is Undefined, optional
        A set of string tags for the port.
    tenantId : str, default is Undefined, optional
        The owner of the Trunk. Required if admin wants
        to create a trunk on behalf of another tenant. Changing this creates a new trunk.
    """


    adminStateUp?: bool

    description?: str

    name?: str

    portId?: str

    portIdRef?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderPortIDRef

    portIdSelector?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderPortIDSelector

    region?: str

    subPort?: [NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0]

    tags?: [str]

    tenantId?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderPortIDRef:
    r"""
    Reference to a PortV2 in networking to populate portId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderPortIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderPortIDRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderPortIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderPortIDSelector:
    r"""
    Selector for a PortV2 in networking to populate portId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderPortIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderPortIDSelectorPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderPortIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0:
    r"""
    networking openstack crossplane io v1alpha1 trunk v2 spec for provider sub port items0

    Attributes
    ----------
    portId : str, default is Undefined, optional
        The ID of the port to be made a subport of the trunk.
    portIdRef : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0PortIDRef, default is Undefined, optional
        port Id ref
    portIdSelector : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0PortIDSelector, default is Undefined, optional
        port Id selector
    segmentationId : float, default is Undefined, optional
        The numeric id of the subport segment.
    segmentationType : str, default is Undefined, optional
        The segmentation technology to use, e.g., "vlan".
    """


    portId?: str

    portIdRef?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0PortIDRef

    portIdSelector?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0PortIDSelector

    segmentationId?: float

    segmentationType?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0PortIDRef:
    r"""
    Reference to a PortV2 in networking to populate portId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0PortIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0PortIDRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0PortIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0PortIDSelector:
    r"""
    Selector for a PortV2 in networking to populate portId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0PortIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0PortIDSelectorPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecForProviderSubPortItems0PortIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        Administrative up/down status for the trunk
        (must be "true" or "false" if provided). Changing this updates the
        admin_state_up of an existing trunk.
    description : str, default is Undefined, optional
        Human-readable description of the trunk. Changing this
        updates the name of the existing trunk.
    name : str, default is Undefined, optional
        A unique name for the trunk. Changing this
        updates the name of an existing trunk.
    portId : str, default is Undefined, optional
        The ID of the port to be used as the parent port of the
        trunk. This is the port that should be used as the compute instance network
        port. Changing this creates a new trunk.
    portIdRef : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderPortIDRef, default is Undefined, optional
        port Id ref
    portIdSelector : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderPortIDSelector, default is Undefined, optional
        port Id selector
    region : str, default is Undefined, optional
        The region in which to obtain the V2 networking client.
        A networking client is needed to create a trunk. If omitted, the
        region argument of the provider is used. Changing this creates a new
        trunk.
    subPort : [NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0], default is Undefined, optional
        The set of ports that will be made subports of the trunk.
        The structure of each subport is described below.
    tags : [str], default is Undefined, optional
        A set of string tags for the port.
    tenantId : str, default is Undefined, optional
        The owner of the Trunk. Required if admin wants
        to create a trunk on behalf of another tenant. Changing this creates a new trunk.
    """


    adminStateUp?: bool

    description?: str

    name?: str

    portId?: str

    portIdRef?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderPortIDRef

    portIdSelector?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderPortIDSelector

    region?: str

    subPort?: [NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0]

    tags?: [str]

    tenantId?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderPortIDRef:
    r"""
    Reference to a PortV2 in networking to populate portId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderPortIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderPortIDRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderPortIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderPortIDSelector:
    r"""
    Selector for a PortV2 in networking to populate portId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderPortIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderPortIDSelectorPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderPortIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0:
    r"""
    networking openstack crossplane io v1alpha1 trunk v2 spec init provider sub port items0

    Attributes
    ----------
    portId : str, default is Undefined, optional
        The ID of the port to be made a subport of the trunk.
    portIdRef : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0PortIDRef, default is Undefined, optional
        port Id ref
    portIdSelector : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0PortIDSelector, default is Undefined, optional
        port Id selector
    segmentationId : float, default is Undefined, optional
        The numeric id of the subport segment.
    segmentationType : str, default is Undefined, optional
        The segmentation technology to use, e.g., "vlan".
    """


    portId?: str

    portIdRef?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0PortIDRef

    portIdSelector?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0PortIDSelector

    segmentationId?: float

    segmentationType?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0PortIDRef:
    r"""
    Reference to a PortV2 in networking to populate portId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0PortIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0PortIDRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0PortIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0PortIDSelector:
    r"""
    Selector for a PortV2 in networking to populate portId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0PortIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0PortIDSelectorPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecInitProviderSubPortItems0PortIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecProviderConfigRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2Status:
    r"""
    TrunkV2Status defines the observed state of TrunkV2.

    Attributes
    ----------
    atProvider : NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2StatusAtProvider

    conditions?: [NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2StatusConditionsItems0]

    observedGeneration?: int


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2StatusAtProvider:
    r"""
    networking openstack crossplane io v1alpha1 trunk v2 status at provider

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        Administrative up/down status for the trunk
        (must be "true" or "false" if provided). Changing this updates the
        admin_state_up of an existing trunk.
    allTags : [str], default is Undefined, optional
        The collection of tags assigned on the trunk, which have been
        explicitly and implicitly added.
    description : str, default is Undefined, optional
        Human-readable description of the trunk. Changing this
        updates the name of the existing trunk.
    id : str, default is Undefined, optional
        id
    name : str, default is Undefined, optional
        A unique name for the trunk. Changing this
        updates the name of an existing trunk.
    portId : str, default is Undefined, optional
        The ID of the port to be used as the parent port of the
        trunk. This is the port that should be used as the compute instance network
        port. Changing this creates a new trunk.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 networking client.
        A networking client is needed to create a trunk. If omitted, the
        region argument of the provider is used. Changing this creates a new
        trunk.
    subPort : [NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2StatusAtProviderSubPortItems0], default is Undefined, optional
        The set of ports that will be made subports of the trunk.
        The structure of each subport is described below.
    tags : [str], default is Undefined, optional
        A set of string tags for the port.
    tenantId : str, default is Undefined, optional
        The owner of the Trunk. Required if admin wants
        to create a trunk on behalf of another tenant. Changing this creates a new trunk.
    """


    adminStateUp?: bool

    allTags?: [str]

    description?: str

    id?: str

    name?: str

    portId?: str

    region?: str

    subPort?: [NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2StatusAtProviderSubPortItems0]

    tags?: [str]

    tenantId?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2StatusAtProviderSubPortItems0:
    r"""
    networking openstack crossplane io v1alpha1 trunk v2 status at provider sub port items0

    Attributes
    ----------
    portId : str, default is Undefined, optional
        The ID of the port to be made a subport of the trunk.
    segmentationId : float, default is Undefined, optional
        The numeric id of the subport segment.
    segmentationType : str, default is Undefined, optional
        The segmentation technology to use, e.g., "vlan".
    """


    portId?: str

    segmentationId?: float

    segmentationType?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1TrunkV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


