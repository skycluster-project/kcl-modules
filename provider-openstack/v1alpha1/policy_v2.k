"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema PolicyV2:
    r"""
    PolicyV2 is the Schema for the PolicyV2s API. Manages a v2 firewall policy resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "fw.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "PolicyV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : FwOpenstackCrossplaneIoV1alpha1PolicyV2Spec, default is Undefined, required
        spec
    status : FwOpenstackCrossplaneIoV1alpha1PolicyV2Status, default is Undefined, optional
        status
    """


    apiVersion: "fw.openstack.crossplane.io/v1alpha1" = "fw.openstack.crossplane.io/v1alpha1"

    kind: "PolicyV2" = "PolicyV2"

    metadata?: v1.ObjectMeta

    spec: FwOpenstackCrossplaneIoV1alpha1PolicyV2Spec

    status?: FwOpenstackCrossplaneIoV1alpha1PolicyV2Status


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2Spec:
    r"""
    PolicyV2Spec defines the desired state of PolicyV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProvider

    initProvider?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecProviderConfigRef

    publishConnectionDetailsTo?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecWriteConnectionSecretToRef


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProvider:
    r"""
    fw openstack crossplane io v1alpha1 policy v2 spec for provider

    Attributes
    ----------
    audited : bool, default is Undefined, optional
        Audit status of the firewall policy
        (must be "true" or "false" if provided - defaults to "false").
        This status is set to "false" whenever the firewall policy or any of its
        rules are changed. Changing this updates the audited status of an existing
        firewall policy.
    description : str, default is Undefined, optional
        A description for the firewall policy. Changing
        this updates the description of an existing firewall policy.
    name : str, default is Undefined, optional
        A name for the firewall policy. Changing this
        updates the name of an existing firewall policy.
    projectId : str, default is Undefined, optional
        - This argument conflicts and is interchangeable
        with tenant_id. The owner of the firewall policy. Required if admin wants
        to create a firewall policy for another project. Changing this creates a new
        firewall policy.
    region : str, default is Undefined, optional
        The region in which to obtain the v2 networking client.
        A networking client is needed to create a firewall policy. If omitted, the
        region argument of the provider is used. Changing this creates a new
        firewall policy.
    rules : [str], default is Undefined, optional
        An array of one or more firewall rules that comprise
        the policy. Changing this results in adding/removing rules from the
        existing firewall policy.
    rulesRefs : [FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProviderRulesRefsItems0], default is Undefined, optional
        References to RuleV2 in fw to populate rules.
    rulesSelector : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProviderRulesSelector, default is Undefined, optional
        rules selector
    shared : bool, default is Undefined, optional
        Sharing status of the firewall policy (must be "true"
        or "false" if provided). If this is "true" the policy is visible to, and
        can be used in, firewalls in other tenants. Changing this updates the
        shared status of an existing firewall policy. Only administrative users
        can specify if the policy should be shared.
    tenantId : str, default is Undefined, optional
        - This argument conflicts and is interchangeable
        with project_id. The owner of the firewall policy. Required if admin wants
        to create a firewall policy for another tenant. Changing this creates a new
        firewall policy.
    """


    audited?: bool

    description?: str

    name?: str

    projectId?: str

    region?: str

    rules?: [str]

    rulesRefs?: [FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProviderRulesRefsItems0]

    rulesSelector?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProviderRulesSelector

    shared?: bool

    tenantId?: str


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProviderRulesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProviderRulesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProviderRulesRefsItems0Policy


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProviderRulesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProviderRulesSelector:
    r"""
    Selector for a list of RuleV2 in fw to populate rules.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProviderRulesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProviderRulesSelectorPolicy


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecForProviderRulesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    audited : bool, default is Undefined, optional
        Audit status of the firewall policy
        (must be "true" or "false" if provided - defaults to "false").
        This status is set to "false" whenever the firewall policy or any of its
        rules are changed. Changing this updates the audited status of an existing
        firewall policy.
    description : str, default is Undefined, optional
        A description for the firewall policy. Changing
        this updates the description of an existing firewall policy.
    name : str, default is Undefined, optional
        A name for the firewall policy. Changing this
        updates the name of an existing firewall policy.
    projectId : str, default is Undefined, optional
        - This argument conflicts and is interchangeable
        with tenant_id. The owner of the firewall policy. Required if admin wants
        to create a firewall policy for another project. Changing this creates a new
        firewall policy.
    region : str, default is Undefined, optional
        The region in which to obtain the v2 networking client.
        A networking client is needed to create a firewall policy. If omitted, the
        region argument of the provider is used. Changing this creates a new
        firewall policy.
    rules : [str], default is Undefined, optional
        An array of one or more firewall rules that comprise
        the policy. Changing this results in adding/removing rules from the
        existing firewall policy.
    rulesRefs : [FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProviderRulesRefsItems0], default is Undefined, optional
        References to RuleV2 in fw to populate rules.
    rulesSelector : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProviderRulesSelector, default is Undefined, optional
        rules selector
    shared : bool, default is Undefined, optional
        Sharing status of the firewall policy (must be "true"
        or "false" if provided). If this is "true" the policy is visible to, and
        can be used in, firewalls in other tenants. Changing this updates the
        shared status of an existing firewall policy. Only administrative users
        can specify if the policy should be shared.
    tenantId : str, default is Undefined, optional
        - This argument conflicts and is interchangeable
        with project_id. The owner of the firewall policy. Required if admin wants
        to create a firewall policy for another tenant. Changing this creates a new
        firewall policy.
    """


    audited?: bool

    description?: str

    name?: str

    projectId?: str

    region?: str

    rules?: [str]

    rulesRefs?: [FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProviderRulesRefsItems0]

    rulesSelector?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProviderRulesSelector

    shared?: bool

    tenantId?: str


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProviderRulesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProviderRulesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProviderRulesRefsItems0Policy


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProviderRulesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProviderRulesSelector:
    r"""
    Selector for a list of RuleV2 in fw to populate rules.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProviderRulesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProviderRulesSelectorPolicy


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecInitProviderRulesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecProviderConfigRefPolicy


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecPublishConnectionDetailsToConfigRef

    metadata?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecPublishConnectionDetailsToMetadata

    name: str


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecPublishConnectionDetailsToConfigRefPolicy


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2Status:
    r"""
    PolicyV2Status defines the observed state of PolicyV2.

    Attributes
    ----------
    atProvider : FwOpenstackCrossplaneIoV1alpha1PolicyV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [FwOpenstackCrossplaneIoV1alpha1PolicyV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: FwOpenstackCrossplaneIoV1alpha1PolicyV2StatusAtProvider

    conditions?: [FwOpenstackCrossplaneIoV1alpha1PolicyV2StatusConditionsItems0]

    observedGeneration?: int


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2StatusAtProvider:
    r"""
    fw openstack crossplane io v1alpha1 policy v2 status at provider

    Attributes
    ----------
    audited : bool, default is Undefined, optional
        Audit status of the firewall policy
        (must be "true" or "false" if provided - defaults to "false").
        This status is set to "false" whenever the firewall policy or any of its
        rules are changed. Changing this updates the audited status of an existing
        firewall policy.
    description : str, default is Undefined, optional
        A description for the firewall policy. Changing
        this updates the description of an existing firewall policy.
    id : str, default is Undefined, optional
        id
    name : str, default is Undefined, optional
        A name for the firewall policy. Changing this
        updates the name of an existing firewall policy.
    projectId : str, default is Undefined, optional
        - This argument conflicts and is interchangeable
        with tenant_id. The owner of the firewall policy. Required if admin wants
        to create a firewall policy for another project. Changing this creates a new
        firewall policy.
    region : str, default is Undefined, optional
        The region in which to obtain the v2 networking client.
        A networking client is needed to create a firewall policy. If omitted, the
        region argument of the provider is used. Changing this creates a new
        firewall policy.
    rules : [str], default is Undefined, optional
        An array of one or more firewall rules that comprise
        the policy. Changing this results in adding/removing rules from the
        existing firewall policy.
    shared : bool, default is Undefined, optional
        Sharing status of the firewall policy (must be "true"
        or "false" if provided). If this is "true" the policy is visible to, and
        can be used in, firewalls in other tenants. Changing this updates the
        shared status of an existing firewall policy. Only administrative users
        can specify if the policy should be shared.
    tenantId : str, default is Undefined, optional
        - This argument conflicts and is interchangeable
        with project_id. The owner of the firewall policy. Required if admin wants
        to create a firewall policy for another tenant. Changing this creates a new
        firewall policy.
    """


    audited?: bool

    description?: str

    id?: str

    name?: str

    projectId?: str

    region?: str

    rules?: [str]

    shared?: bool

    tenantId?: str


schema FwOpenstackCrossplaneIoV1alpha1PolicyV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


