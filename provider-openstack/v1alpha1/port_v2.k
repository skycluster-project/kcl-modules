"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema PortV2:
    r"""
    PortV2 is the Schema for the PortV2s API. Manages a V2 port resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "networking.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "PortV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkingOpenstackCrossplaneIoV1alpha1PortV2Spec, default is Undefined, required
        spec
    status : NetworkingOpenstackCrossplaneIoV1alpha1PortV2Status, default is Undefined, optional
        status
    """


    apiVersion: "networking.openstack.crossplane.io/v1alpha1" = "networking.openstack.crossplane.io/v1alpha1"

    kind: "PortV2" = "PortV2"

    metadata?: v1.ObjectMeta

    spec: NetworkingOpenstackCrossplaneIoV1alpha1PortV2Spec

    status?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2Status


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2Spec:
    r"""
    PortV2Spec defines the desired state of PortV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProvider

    initProvider?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecWriteConnectionSecretToRef


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProvider:
    r"""
    networking openstack crossplane io v1alpha1 port v2 spec for provider

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        Administrative up/down status for the port
        (must be true or false if provided). Changing this updates the
        admin_state_up of an existing port.
    allowedAddressPairs : [NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderAllowedAddressPairsItems0], default is Undefined, optional
        An IP/MAC Address pair of additional IP
        addresses that can be active on this port. The structure is described
        below.
    binding : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderBinding, default is Undefined, optional
        binding
    description : str, default is Undefined, optional
        Human-readable description of the port. Changing
        this updates the description of an existing port.
    deviceId : str, default is Undefined, optional
        The ID of the device attached to the port. Changing this
        creates a new port.
    deviceOwner : str, default is Undefined, optional
        The device owner of the port. Changing this creates
        a new port.
    dnsName : str, default is Undefined, optional
        The port DNS name. Available, when Neutron DNS extension
        is enabled.
    extraDhcpOption : [NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderExtraDhcpOptionItems0], default is Undefined, optional
        An extra DHCP option that needs to be configured
        on the port. The structure is described below. Can be specified multiple
        times.
    fixedIp : [NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0], default is Undefined, optional
        An array of desired IPs for
        this port. The structure is described below.
    macAddress : str, default is Undefined, optional
        Specify a specific MAC address for the port. Changing
        this creates a new port.
    name : str, default is Undefined, optional
        A unique name for the port. Changing this
        updates the name of an existing port.
    networkId : str, default is Undefined, optional
        The ID of the network to attach the port to. Changing
        this creates a new port.
    networkIdRef : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderNetworkIDRef, default is Undefined, optional
        network Id ref
    networkIdSelector : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderNetworkIDSelector, default is Undefined, optional
        network Id selector
    noFixedIp : bool, default is Undefined, optional
        Create a port with no fixed
        IP address. This will also remove any fixed IPs previously set on a port. true
        is the only valid value for this argument.
    noSecurityGroups : bool, default is Undefined, optional
        If set to
        true, then no security groups are applied to the port. If set to false and
        no security_group_ids are specified, then the port will yield to the default
        behavior of the Networking service, which is to usually apply the "default"
        security group.
    portSecurityEnabled : bool, default is Undefined, optional
        Whether to explicitly enable or disable
        port security on the port. Port Security is usually enabled by default, so
        omitting argument will usually result in a value of true. Setting this
        explicitly to false will disable port security. In order to disable port
        security, the port must not have any security groups. Valid values are true
        and false.
    qosPolicyId : str, default is Undefined, optional
        Reference to the associated QoS policy.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create a port. If omitted, the
        region argument of the provider is used. Changing this creates a new
        port.
    securityGroupIds : [str], default is Undefined, optional
        A list
        of security group IDs to apply to the port. The security groups must be
        specified by ID and not name (as opposed to how they are configured with
        the Compute Instance).
    tags : [str], default is Undefined, optional
        A set of string tags for the port.
    tenantId : str, default is Undefined, optional
        The owner of the port. Required if admin wants
        to create a port for another tenant. Changing this creates a new port.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional options.
    """


    adminStateUp?: bool

    allowedAddressPairs?: [NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderAllowedAddressPairsItems0]

    binding?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderBinding

    description?: str

    deviceId?: str

    deviceOwner?: str

    dnsName?: str

    extraDhcpOption?: [NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderExtraDhcpOptionItems0]

    fixedIp?: [NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0]

    macAddress?: str

    name?: str

    networkId?: str

    networkIdRef?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderNetworkIDRef

    networkIdSelector?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderNetworkIDSelector

    noFixedIp?: bool

    noSecurityGroups?: bool

    portSecurityEnabled?: bool

    qosPolicyId?: str

    region?: str

    securityGroupIds?: [str]

    tags?: [str]

    tenantId?: str

    valueSpecs?: {str:str}


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderAllowedAddressPairsItems0:
    r"""
    networking openstack crossplane io v1alpha1 port v2 spec for provider allowed address pairs items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The additional IP address.
    macAddress : str, default is Undefined, optional
        The additional MAC address.
    """


    ipAddress?: str

    macAddress?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderBinding:
    r"""
    The port binding allows to specify binding information
    for the port. The structure is described below.

    Attributes
    ----------
    hostId : str, default is Undefined, optional
        The ID of the host to allocate port on.
    profile : str, default is Undefined, optional
        Custom data to be passed as binding:profile. Data
        must be passed as JSON.
    vnicType : str, default is Undefined, optional
        VNIC type for the port. Can either be direct,
        direct-physical, macvtap, normal, baremetal or virtio-forwarder.
        Default value is normal. It can be updated on unbound ports only.
    """


    hostId?: str

    profile?: str

    vnicType?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderExtraDhcpOptionItems0:
    r"""
    networking openstack crossplane io v1alpha1 port v2 spec for provider extra dhcp option items0

    Attributes
    ----------
    ipVersion : float, default is Undefined, optional
        IP protocol version. Defaults to 4.
    name : str, default is Undefined, optional
        Name of the DHCP option.
    value : str, default is Undefined, optional
        Value of the DHCP option.
    """


    ipVersion?: float

    name?: str

    value?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0:
    r"""
    networking openstack crossplane io v1alpha1 port v2 spec for provider fixed IP items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        IP address desired in the subnet for this port. If
        you don't specify ip_address, an available IP address from the specified
        subnet will be allocated to this port. This field will not be populated if it
        is left blank or omitted. To retrieve the assigned IP address, use the
        all_fixed_ips attribute.
    subnetId : str, default is Undefined, optional
        Subnet in which to allocate IP address for
        this port.
    subnetIdRef : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0SubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0SubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    ipAddress?: str

    subnetId?: str

    subnetIdRef?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0SubnetIDRef

    subnetIdSelector?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0SubnetIDSelector


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0SubnetIDRef:
    r"""
    Reference to a SubnetV2 in networking to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0SubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0SubnetIDRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0SubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0SubnetIDSelector:
    r"""
    Selector for a SubnetV2 in networking to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0SubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0SubnetIDSelectorPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderFixedIPItems0SubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderNetworkIDRef:
    r"""
    Reference to a NetworkV2 in networking to populate networkId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderNetworkIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderNetworkIDRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderNetworkIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderNetworkIDSelector:
    r"""
    Selector for a NetworkV2 in networking to populate networkId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderNetworkIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderNetworkIDSelectorPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecForProviderNetworkIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        Administrative up/down status for the port
        (must be true or false if provided). Changing this updates the
        admin_state_up of an existing port.
    allowedAddressPairs : [NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderAllowedAddressPairsItems0], default is Undefined, optional
        An IP/MAC Address pair of additional IP
        addresses that can be active on this port. The structure is described
        below.
    binding : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderBinding, default is Undefined, optional
        binding
    description : str, default is Undefined, optional
        Human-readable description of the port. Changing
        this updates the description of an existing port.
    deviceId : str, default is Undefined, optional
        The ID of the device attached to the port. Changing this
        creates a new port.
    deviceOwner : str, default is Undefined, optional
        The device owner of the port. Changing this creates
        a new port.
    dnsName : str, default is Undefined, optional
        The port DNS name. Available, when Neutron DNS extension
        is enabled.
    extraDhcpOption : [NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderExtraDhcpOptionItems0], default is Undefined, optional
        An extra DHCP option that needs to be configured
        on the port. The structure is described below. Can be specified multiple
        times.
    fixedIp : [NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0], default is Undefined, optional
        An array of desired IPs for
        this port. The structure is described below.
    macAddress : str, default is Undefined, optional
        Specify a specific MAC address for the port. Changing
        this creates a new port.
    name : str, default is Undefined, optional
        A unique name for the port. Changing this
        updates the name of an existing port.
    networkId : str, default is Undefined, optional
        The ID of the network to attach the port to. Changing
        this creates a new port.
    networkIdRef : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderNetworkIDRef, default is Undefined, optional
        network Id ref
    networkIdSelector : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderNetworkIDSelector, default is Undefined, optional
        network Id selector
    noFixedIp : bool, default is Undefined, optional
        Create a port with no fixed
        IP address. This will also remove any fixed IPs previously set on a port. true
        is the only valid value for this argument.
    noSecurityGroups : bool, default is Undefined, optional
        If set to
        true, then no security groups are applied to the port. If set to false and
        no security_group_ids are specified, then the port will yield to the default
        behavior of the Networking service, which is to usually apply the "default"
        security group.
    portSecurityEnabled : bool, default is Undefined, optional
        Whether to explicitly enable or disable
        port security on the port. Port Security is usually enabled by default, so
        omitting argument will usually result in a value of true. Setting this
        explicitly to false will disable port security. In order to disable port
        security, the port must not have any security groups. Valid values are true
        and false.
    qosPolicyId : str, default is Undefined, optional
        Reference to the associated QoS policy.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create a port. If omitted, the
        region argument of the provider is used. Changing this creates a new
        port.
    securityGroupIds : [str], default is Undefined, optional
        A list
        of security group IDs to apply to the port. The security groups must be
        specified by ID and not name (as opposed to how they are configured with
        the Compute Instance).
    tags : [str], default is Undefined, optional
        A set of string tags for the port.
    tenantId : str, default is Undefined, optional
        The owner of the port. Required if admin wants
        to create a port for another tenant. Changing this creates a new port.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional options.
    """


    adminStateUp?: bool

    allowedAddressPairs?: [NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderAllowedAddressPairsItems0]

    binding?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderBinding

    description?: str

    deviceId?: str

    deviceOwner?: str

    dnsName?: str

    extraDhcpOption?: [NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderExtraDhcpOptionItems0]

    fixedIp?: [NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0]

    macAddress?: str

    name?: str

    networkId?: str

    networkIdRef?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderNetworkIDRef

    networkIdSelector?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderNetworkIDSelector

    noFixedIp?: bool

    noSecurityGroups?: bool

    portSecurityEnabled?: bool

    qosPolicyId?: str

    region?: str

    securityGroupIds?: [str]

    tags?: [str]

    tenantId?: str

    valueSpecs?: {str:str}


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderAllowedAddressPairsItems0:
    r"""
    networking openstack crossplane io v1alpha1 port v2 spec init provider allowed address pairs items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The additional IP address.
    macAddress : str, default is Undefined, optional
        The additional MAC address.
    """


    ipAddress?: str

    macAddress?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderBinding:
    r"""
    The port binding allows to specify binding information
    for the port. The structure is described below.

    Attributes
    ----------
    hostId : str, default is Undefined, optional
        The ID of the host to allocate port on.
    profile : str, default is Undefined, optional
        Custom data to be passed as binding:profile. Data
        must be passed as JSON.
    vnicType : str, default is Undefined, optional
        VNIC type for the port. Can either be direct,
        direct-physical, macvtap, normal, baremetal or virtio-forwarder.
        Default value is normal. It can be updated on unbound ports only.
    """


    hostId?: str

    profile?: str

    vnicType?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderExtraDhcpOptionItems0:
    r"""
    networking openstack crossplane io v1alpha1 port v2 spec init provider extra dhcp option items0

    Attributes
    ----------
    ipVersion : float, default is Undefined, optional
        IP protocol version. Defaults to 4.
    name : str, default is Undefined, optional
        Name of the DHCP option.
    value : str, default is Undefined, optional
        Value of the DHCP option.
    """


    ipVersion?: float

    name?: str

    value?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0:
    r"""
    networking openstack crossplane io v1alpha1 port v2 spec init provider fixed IP items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        IP address desired in the subnet for this port. If
        you don't specify ip_address, an available IP address from the specified
        subnet will be allocated to this port. This field will not be populated if it
        is left blank or omitted. To retrieve the assigned IP address, use the
        all_fixed_ips attribute.
    subnetId : str, default is Undefined, optional
        Subnet in which to allocate IP address for
        this port.
    subnetIdRef : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0SubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0SubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    ipAddress?: str

    subnetId?: str

    subnetIdRef?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0SubnetIDRef

    subnetIdSelector?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0SubnetIDSelector


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0SubnetIDRef:
    r"""
    Reference to a SubnetV2 in networking to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0SubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0SubnetIDRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0SubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0SubnetIDSelector:
    r"""
    Selector for a SubnetV2 in networking to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0SubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0SubnetIDSelectorPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderFixedIPItems0SubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderNetworkIDRef:
    r"""
    Reference to a NetworkV2 in networking to populate networkId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderNetworkIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderNetworkIDRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderNetworkIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderNetworkIDSelector:
    r"""
    Selector for a NetworkV2 in networking to populate networkId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderNetworkIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderNetworkIDSelectorPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecInitProviderNetworkIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecProviderConfigRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2Status:
    r"""
    PortV2Status defines the observed state of PortV2.

    Attributes
    ----------
    atProvider : NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProvider

    conditions?: [NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusConditionsItems0]

    observedGeneration?: int


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProvider:
    r"""
    networking openstack crossplane io v1alpha1 port v2 status at provider

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        Administrative up/down status for the port
        (must be true or false if provided). Changing this updates the
        admin_state_up of an existing port.
    allFixedIps : [str], default is Undefined, optional
        The collection of Fixed IP addresses on the port in the
        order returned by the Network v2 API.
    allSecurityGroupIds : [str], default is Undefined, optional
        The collection of Security Group IDs on the port
        which have been explicitly and implicitly added.
    allTags : [str], default is Undefined, optional
        The collection of tags assigned on the port, which have been
        explicitly and implicitly added.
    allowedAddressPairs : [NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProviderAllowedAddressPairsItems0], default is Undefined, optional
        An IP/MAC Address pair of additional IP
        addresses that can be active on this port. The structure is described
        below.
    binding : NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProviderBinding, default is Undefined, optional
        binding
    description : str, default is Undefined, optional
        Human-readable description of the port. Changing
        this updates the description of an existing port.
    deviceId : str, default is Undefined, optional
        The ID of the device attached to the port. Changing this
        creates a new port.
    deviceOwner : str, default is Undefined, optional
        The device owner of the port. Changing this creates
        a new port.
    dnsAssignment : [{str:str}], default is Undefined, optional
        The list of maps representing port DNS assignments.
    dnsName : str, default is Undefined, optional
        The port DNS name. Available, when Neutron DNS extension
        is enabled.
    extraDhcpOption : [NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProviderExtraDhcpOptionItems0], default is Undefined, optional
        An extra DHCP option that needs to be configured
        on the port. The structure is described below. Can be specified multiple
        times.
    fixedIp : [NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProviderFixedIPItems0], default is Undefined, optional
        An array of desired IPs for
        this port. The structure is described below.
    id : str, default is Undefined, optional
        id
    macAddress : str, default is Undefined, optional
        Specify a specific MAC address for the port. Changing
        this creates a new port.
    name : str, default is Undefined, optional
        A unique name for the port. Changing this
        updates the name of an existing port.
    networkId : str, default is Undefined, optional
        The ID of the network to attach the port to. Changing
        this creates a new port.
    noFixedIp : bool, default is Undefined, optional
        Create a port with no fixed
        IP address. This will also remove any fixed IPs previously set on a port. true
        is the only valid value for this argument.
    noSecurityGroups : bool, default is Undefined, optional
        If set to
        true, then no security groups are applied to the port. If set to false and
        no security_group_ids are specified, then the port will yield to the default
        behavior of the Networking service, which is to usually apply the "default"
        security group.
    portSecurityEnabled : bool, default is Undefined, optional
        Whether to explicitly enable or disable
        port security on the port. Port Security is usually enabled by default, so
        omitting argument will usually result in a value of true. Setting this
        explicitly to false will disable port security. In order to disable port
        security, the port must not have any security groups. Valid values are true
        and false.
    qosPolicyId : str, default is Undefined, optional
        Reference to the associated QoS policy.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create a port. If omitted, the
        region argument of the provider is used. Changing this creates a new
        port.
    securityGroupIds : [str], default is Undefined, optional
        A list
        of security group IDs to apply to the port. The security groups must be
        specified by ID and not name (as opposed to how they are configured with
        the Compute Instance).
    tags : [str], default is Undefined, optional
        A set of string tags for the port.
    tenantId : str, default is Undefined, optional
        The owner of the port. Required if admin wants
        to create a port for another tenant. Changing this creates a new port.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional options.
    """


    adminStateUp?: bool

    allFixedIps?: [str]

    allSecurityGroupIds?: [str]

    allTags?: [str]

    allowedAddressPairs?: [NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProviderAllowedAddressPairsItems0]

    binding?: NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProviderBinding

    description?: str

    deviceId?: str

    deviceOwner?: str

    dnsAssignment?: [{str:str}]

    dnsName?: str

    extraDhcpOption?: [NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProviderExtraDhcpOptionItems0]

    fixedIp?: [NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProviderFixedIPItems0]

    id?: str

    macAddress?: str

    name?: str

    networkId?: str

    noFixedIp?: bool

    noSecurityGroups?: bool

    portSecurityEnabled?: bool

    qosPolicyId?: str

    region?: str

    securityGroupIds?: [str]

    tags?: [str]

    tenantId?: str

    valueSpecs?: {str:str}


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProviderAllowedAddressPairsItems0:
    r"""
    networking openstack crossplane io v1alpha1 port v2 status at provider allowed address pairs items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The additional IP address.
    macAddress : str, default is Undefined, optional
        The additional MAC address.
    """


    ipAddress?: str

    macAddress?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProviderBinding:
    r"""
    The port binding allows to specify binding information
    for the port. The structure is described below.

    Attributes
    ----------
    hostId : str, default is Undefined, optional
        The ID of the host to allocate port on.
    profile : str, default is Undefined, optional
        Custom data to be passed as binding:profile. Data
        must be passed as JSON.
    vifDetails : {str:str}, default is Undefined, optional
        (Computed) A map of JSON strings containing additional
        details for this specific binding.
    vifType : str, default is Undefined, optional
        (Computed) The VNIC type of the port binding.
    vnicType : str, default is Undefined, optional
        VNIC type for the port. Can either be direct,
        direct-physical, macvtap, normal, baremetal or virtio-forwarder.
        Default value is normal. It can be updated on unbound ports only.
    """


    hostId?: str

    profile?: str

    vifDetails?: {str:str}

    vifType?: str

    vnicType?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProviderExtraDhcpOptionItems0:
    r"""
    networking openstack crossplane io v1alpha1 port v2 status at provider extra dhcp option items0

    Attributes
    ----------
    ipVersion : float, default is Undefined, optional
        IP protocol version. Defaults to 4.
    name : str, default is Undefined, optional
        Name of the DHCP option.
    value : str, default is Undefined, optional
        Value of the DHCP option.
    """


    ipVersion?: float

    name?: str

    value?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusAtProviderFixedIPItems0:
    r"""
    networking openstack crossplane io v1alpha1 port v2 status at provider fixed IP items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        IP address desired in the subnet for this port. If
        you don't specify ip_address, an available IP address from the specified
        subnet will be allocated to this port. This field will not be populated if it
        is left blank or omitted. To retrieve the assigned IP address, use the
        all_fixed_ips attribute.
    subnetId : str, default is Undefined, optional
        Subnet in which to allocate IP address for
        this port.
    """


    ipAddress?: str

    subnetId?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1PortV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


