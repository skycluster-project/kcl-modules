"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema UserV3:
    r"""
    UserV3 is the Schema for the UserV3s API. Manages a V3 User resource within OpenStack Keystone.

    Attributes
    ----------
    apiVersion : str, default is "identity.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "UserV3", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : IdentityOpenstackCrossplaneIoV1alpha1UserV3Spec, default is Undefined, required
        spec
    status : IdentityOpenstackCrossplaneIoV1alpha1UserV3Status, default is Undefined, optional
        status
    """


    apiVersion: "identity.openstack.crossplane.io/v1alpha1" = "identity.openstack.crossplane.io/v1alpha1"

    kind: "UserV3" = "UserV3"

    metadata?: v1.ObjectMeta

    spec: IdentityOpenstackCrossplaneIoV1alpha1UserV3Spec

    status?: IdentityOpenstackCrossplaneIoV1alpha1UserV3Status


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3Spec:
    r"""
    UserV3Spec defines the desired state of UserV3

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProvider, default is Undefined, required
        for provider
    initProvider : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProvider

    initProvider?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecProviderConfigRef

    publishConnectionDetailsTo?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecWriteConnectionSecretToRef


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProvider:
    r"""
    identity openstack crossplane io v1alpha1 user v3 spec for provider

    Attributes
    ----------
    defaultProjectId : str, default is Undefined, optional
        The default project this user belongs to.
    defaultProjectIdRef : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderDefaultProjectIDRef, default is Undefined, optional
        default project Id ref
    defaultProjectIdSelector : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderDefaultProjectIDSelector, default is Undefined, optional
        default project Id selector
    description : str, default is Undefined, optional
        A description of the user.
    domainId : str, default is Undefined, optional
        The domain this user belongs to.
    enabled : bool, default is Undefined, optional
        Whether the user is enabled or disabled. Valid
        values are true and false.
    extra : {str:str}, default is Undefined, optional
        Free-form key/value pairs of extra information.
    ignoreChangePasswordUponFirstUse : bool, default is Undefined, optional
        User will not have to
        change their password upon first use. Valid values are true and false.
    ignoreLockoutFailureAttempts : bool, default is Undefined, optional
        User will not have a failure
        lockout placed on their account. Valid values are true and false.
    ignorePasswordExpiry : bool, default is Undefined, optional
        User's password will not expire.
        Valid values are true and false.
    multiFactorAuthEnabled : bool, default is Undefined, optional
        Whether to enable multi-factor
        authentication. Valid values are true and false.
    multiFactorAuthRule : [IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderMultiFactorAuthRuleItems0], default is Undefined, optional
        A multi-factor authentication rule.
        The structure is documented below. Please see the
        Ocata release notes
        for more information on how to use mulit-factor rules.
    name : str, default is Undefined, optional
        The name of the user.
    passwordSecretRef : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderPasswordSecretRef, default is Undefined, optional
        password secret ref
    region : str, default is Undefined, optional
        The region in which to obtain the V3 Keystone client.
        If omitted, the region argument of the provider is used. Changing this
        creates a new User.
    """


    defaultProjectId?: str

    defaultProjectIdRef?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderDefaultProjectIDRef

    defaultProjectIdSelector?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderDefaultProjectIDSelector

    description?: str

    domainId?: str

    enabled?: bool

    extra?: {str:str}

    ignoreChangePasswordUponFirstUse?: bool

    ignoreLockoutFailureAttempts?: bool

    ignorePasswordExpiry?: bool

    multiFactorAuthEnabled?: bool

    multiFactorAuthRule?: [IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderMultiFactorAuthRuleItems0]

    name?: str

    passwordSecretRef?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderPasswordSecretRef

    region?: str


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderDefaultProjectIDRef:
    r"""
    Reference to a ProjectV3 in identity to populate defaultProjectId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderDefaultProjectIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderDefaultProjectIDRefPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderDefaultProjectIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderDefaultProjectIDSelector:
    r"""
    Selector for a ProjectV3 in identity to populate defaultProjectId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderDefaultProjectIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderDefaultProjectIDSelectorPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderDefaultProjectIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderMultiFactorAuthRuleItems0:
    r"""
    identity openstack crossplane io v1alpha1 user v3 spec for provider multi factor auth rule items0

    Attributes
    ----------
    $rule : [str], default is Undefined, optional
        A list of authentication plugins that the user must
        authenticate with.
    """


    $rule?: [str]


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecForProviderPasswordSecretRef:
    r"""
    The password for the user.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    defaultProjectId : str, default is Undefined, optional
        The default project this user belongs to.
    defaultProjectIdRef : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderDefaultProjectIDRef, default is Undefined, optional
        default project Id ref
    defaultProjectIdSelector : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderDefaultProjectIDSelector, default is Undefined, optional
        default project Id selector
    description : str, default is Undefined, optional
        A description of the user.
    domainId : str, default is Undefined, optional
        The domain this user belongs to.
    enabled : bool, default is Undefined, optional
        Whether the user is enabled or disabled. Valid
        values are true and false.
    extra : {str:str}, default is Undefined, optional
        Free-form key/value pairs of extra information.
    ignoreChangePasswordUponFirstUse : bool, default is Undefined, optional
        User will not have to
        change their password upon first use. Valid values are true and false.
    ignoreLockoutFailureAttempts : bool, default is Undefined, optional
        User will not have a failure
        lockout placed on their account. Valid values are true and false.
    ignorePasswordExpiry : bool, default is Undefined, optional
        User's password will not expire.
        Valid values are true and false.
    multiFactorAuthEnabled : bool, default is Undefined, optional
        Whether to enable multi-factor
        authentication. Valid values are true and false.
    multiFactorAuthRule : [IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderMultiFactorAuthRuleItems0], default is Undefined, optional
        A multi-factor authentication rule.
        The structure is documented below. Please see the
        Ocata release notes
        for more information on how to use mulit-factor rules.
    name : str, default is Undefined, optional
        The name of the user.
    passwordSecretRef : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderPasswordSecretRef, default is Undefined, optional
        password secret ref
    region : str, default is Undefined, optional
        The region in which to obtain the V3 Keystone client.
        If omitted, the region argument of the provider is used. Changing this
        creates a new User.
    """


    defaultProjectId?: str

    defaultProjectIdRef?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderDefaultProjectIDRef

    defaultProjectIdSelector?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderDefaultProjectIDSelector

    description?: str

    domainId?: str

    enabled?: bool

    extra?: {str:str}

    ignoreChangePasswordUponFirstUse?: bool

    ignoreLockoutFailureAttempts?: bool

    ignorePasswordExpiry?: bool

    multiFactorAuthEnabled?: bool

    multiFactorAuthRule?: [IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderMultiFactorAuthRuleItems0]

    name?: str

    passwordSecretRef?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderPasswordSecretRef

    region?: str


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderDefaultProjectIDRef:
    r"""
    Reference to a ProjectV3 in identity to populate defaultProjectId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderDefaultProjectIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderDefaultProjectIDRefPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderDefaultProjectIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderDefaultProjectIDSelector:
    r"""
    Selector for a ProjectV3 in identity to populate defaultProjectId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderDefaultProjectIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderDefaultProjectIDSelectorPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderDefaultProjectIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderMultiFactorAuthRuleItems0:
    r"""
    identity openstack crossplane io v1alpha1 user v3 spec init provider multi factor auth rule items0

    Attributes
    ----------
    $rule : [str], default is Undefined, optional
        A list of authentication plugins that the user must
        authenticate with.
    """


    $rule?: [str]


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecInitProviderPasswordSecretRef:
    r"""
    The password for the user.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecProviderConfigRefPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecPublishConnectionDetailsToConfigRef

    metadata?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecPublishConnectionDetailsToMetadata

    name: str


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecPublishConnectionDetailsToConfigRefPolicy


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3Status:
    r"""
    UserV3Status defines the observed state of UserV3.

    Attributes
    ----------
    atProvider : IdentityOpenstackCrossplaneIoV1alpha1UserV3StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [IdentityOpenstackCrossplaneIoV1alpha1UserV3StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: IdentityOpenstackCrossplaneIoV1alpha1UserV3StatusAtProvider

    conditions?: [IdentityOpenstackCrossplaneIoV1alpha1UserV3StatusConditionsItems0]

    observedGeneration?: int


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3StatusAtProvider:
    r"""
    identity openstack crossplane io v1alpha1 user v3 status at provider

    Attributes
    ----------
    defaultProjectId : str, default is Undefined, optional
        The default project this user belongs to.
    description : str, default is Undefined, optional
        A description of the user.
    domainId : str, default is Undefined, optional
        The domain this user belongs to.
    enabled : bool, default is Undefined, optional
        Whether the user is enabled or disabled. Valid
        values are true and false.
    extra : {str:str}, default is Undefined, optional
        Free-form key/value pairs of extra information.
    id : str, default is Undefined, optional
        id
    ignoreChangePasswordUponFirstUse : bool, default is Undefined, optional
        User will not have to
        change their password upon first use. Valid values are true and false.
    ignoreLockoutFailureAttempts : bool, default is Undefined, optional
        User will not have a failure
        lockout placed on their account. Valid values are true and false.
    ignorePasswordExpiry : bool, default is Undefined, optional
        User's password will not expire.
        Valid values are true and false.
    multiFactorAuthEnabled : bool, default is Undefined, optional
        Whether to enable multi-factor
        authentication. Valid values are true and false.
    multiFactorAuthRule : [IdentityOpenstackCrossplaneIoV1alpha1UserV3StatusAtProviderMultiFactorAuthRuleItems0], default is Undefined, optional
        A multi-factor authentication rule.
        The structure is documented below. Please see the
        Ocata release notes
        for more information on how to use mulit-factor rules.
    name : str, default is Undefined, optional
        The name of the user.
    region : str, default is Undefined, optional
        The region in which to obtain the V3 Keystone client.
        If omitted, the region argument of the provider is used. Changing this
        creates a new User.
    """


    defaultProjectId?: str

    description?: str

    domainId?: str

    enabled?: bool

    extra?: {str:str}

    id?: str

    ignoreChangePasswordUponFirstUse?: bool

    ignoreLockoutFailureAttempts?: bool

    ignorePasswordExpiry?: bool

    multiFactorAuthEnabled?: bool

    multiFactorAuthRule?: [IdentityOpenstackCrossplaneIoV1alpha1UserV3StatusAtProviderMultiFactorAuthRuleItems0]

    name?: str

    region?: str


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3StatusAtProviderMultiFactorAuthRuleItems0:
    r"""
    identity openstack crossplane io v1alpha1 user v3 status at provider multi factor auth rule items0

    Attributes
    ----------
    $rule : [str], default is Undefined, optional
        A list of authentication plugins that the user must
        authenticate with.
    """


    $rule?: [str]


schema IdentityOpenstackCrossplaneIoV1alpha1UserV3StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


