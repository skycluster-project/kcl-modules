"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SubnetV2:
    r"""
    SubnetV2 is the Schema for the SubnetV2s API. Manages a V2 Neutron subnet resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "networking.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SubnetV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2Spec, default is Undefined, required
        spec
    status : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2Status, default is Undefined, optional
        status
    """


    apiVersion: "networking.openstack.crossplane.io/v1alpha1" = "networking.openstack.crossplane.io/v1alpha1"

    kind: "SubnetV2" = "SubnetV2"

    metadata?: v1.ObjectMeta

    spec: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2Spec

    status?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2Status


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2Spec:
    r"""
    SubnetV2Spec defines the desired state of SubnetV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProvider

    initProvider?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecWriteConnectionSecretToRef


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProvider:
    r"""
    networking openstack crossplane io v1alpha1 subnet v2 spec for provider

    Attributes
    ----------
    allocationPool : [NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderAllocationPoolItems0], default is Undefined, optional
        A block declaring the start and end range of
        the IP addresses available for use with DHCP in this subnet. Multiple
        allocation_pool blocks can be declared, providing the subnet with more
        than one range of IP addresses to use with DHCP. However, each IP range
        must be from the same CIDR that the subnet is part of.
        The allocation_pool block is documented below.
    cidr : str, default is Undefined, optional
        CIDR representing IP range for this subnet, based on IP
        version. You can omit this option if you are creating a subnet from a
        subnet pool.
    description : str, default is Undefined, optional
        Human-readable description of the subnet. Changing this
        updates the name of the existing subnet.
    dnsNameservers : [str], default is Undefined, optional
        An array of DNS name server names used by hosts
        in this subnet. Changing this updates the DNS name servers for the existing
        subnet.
    dnsPublishFixedIp : bool, default is Undefined, optional
        Whether to publish DNS records for IPs
        from this subnet. Defaults is false.
    enableDhcp : bool, default is Undefined, optional
        The administrative state of the network.
        Acceptable values are "true" and "false". Changing this value enables or
        disables the DHCP capabilities of the existing subnet. Defaults to true.
    gatewayIp : str, default is Undefined, optional
        Default gateway used by devices in this subnet.
        Leaving this blank and not setting no_gateway will cause a default
        gateway of .1 to be used. Changing this updates the gateway IP of the
        existing subnet.
    ipVersion : float, default is Undefined, optional
        IP version, either 4 (default) or 6. Changing this creates a
        new subnet.
    ipv6AddressMode : str, default is Undefined, optional
        The IPv6 address mode. Valid values are
        dhcpv6-stateful, dhcpv6-stateless, or slaac.
    ipv6RaMode : str, default is Undefined, optional
        The IPv6 Router Advertisement mode. Valid values
        are dhcpv6-stateful, dhcpv6-stateless, or slaac.
    name : str, default is Undefined, optional
        The name of the subnet. Changing this updates the name of
        the existing subnet.
    networkId : str, default is Undefined, optional
        The UUID of the parent network. Changing this
        creates a new subnet.
    networkIdRef : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderNetworkIDRef, default is Undefined, optional
        network Id ref
    networkIdSelector : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderNetworkIDSelector, default is Undefined, optional
        network Id selector
    noGateway : bool, default is Undefined, optional
        Do not set a gateway IP on this subnet. Changing
        this removes or adds a default gateway IP of the existing subnet.
    prefixLength : float, default is Undefined, optional
        The prefix length to use when creating a subnet
        from a subnet pool. The default subnet pool prefix length that was defined
        when creating the subnet pool will be used if not provided. Changing this
        creates a new subnet.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create a Neutron subnet. If omitted, the
        region argument of the provider is used. Changing this creates a new
        subnet.
    segmentId : str, default is Undefined, optional
        The segment ID of the subnet. This is used to
        specify which segment the subnet belongs to when using Neutron's routed
        provider networks. Available when neutron segment extension is enabled.
    serviceTypes : [str], default is Undefined, optional
        An array of service types used by the subnet.
        Changing this updates the service types for the existing subnet.
    subnetpoolId : str, default is Undefined, optional
        The ID of the subnetpool associated with the subnet.
    tags : [str], default is Undefined, optional
        A set of string tags for the subnet.
    tenantId : str, default is Undefined, optional
        The owner of the subnet. Required if admin wants to
        create a subnet for another tenant. Changing this creates a new subnet.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional options.
    """


    allocationPool?: [NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderAllocationPoolItems0]

    cidr?: str

    description?: str

    dnsNameservers?: [str]

    dnsPublishFixedIp?: bool

    enableDhcp?: bool

    gatewayIp?: str

    ipVersion?: float

    ipv6AddressMode?: str

    ipv6RaMode?: str

    name?: str

    networkId?: str

    networkIdRef?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderNetworkIDRef

    networkIdSelector?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderNetworkIDSelector

    noGateway?: bool

    prefixLength?: float

    region?: str

    segmentId?: str

    serviceTypes?: [str]

    subnetpoolId?: str

    tags?: [str]

    tenantId?: str

    valueSpecs?: {str:str}


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderAllocationPoolItems0:
    r"""
    networking openstack crossplane io v1alpha1 subnet v2 spec for provider allocation pool items0

    Attributes
    ----------
    end : str, default is Undefined, optional
        The ending address.
    start : str, default is Undefined, optional
        The starting address.
    """


    end?: str

    start?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderNetworkIDRef:
    r"""
    Reference to a NetworkV2 in networking to populate networkId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderNetworkIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderNetworkIDRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderNetworkIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderNetworkIDSelector:
    r"""
    Selector for a NetworkV2 in networking to populate networkId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderNetworkIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderNetworkIDSelectorPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecForProviderNetworkIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allocationPool : [NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderAllocationPoolItems0], default is Undefined, optional
        A block declaring the start and end range of
        the IP addresses available for use with DHCP in this subnet. Multiple
        allocation_pool blocks can be declared, providing the subnet with more
        than one range of IP addresses to use with DHCP. However, each IP range
        must be from the same CIDR that the subnet is part of.
        The allocation_pool block is documented below.
    cidr : str, default is Undefined, optional
        CIDR representing IP range for this subnet, based on IP
        version. You can omit this option if you are creating a subnet from a
        subnet pool.
    description : str, default is Undefined, optional
        Human-readable description of the subnet. Changing this
        updates the name of the existing subnet.
    dnsNameservers : [str], default is Undefined, optional
        An array of DNS name server names used by hosts
        in this subnet. Changing this updates the DNS name servers for the existing
        subnet.
    dnsPublishFixedIp : bool, default is Undefined, optional
        Whether to publish DNS records for IPs
        from this subnet. Defaults is false.
    enableDhcp : bool, default is Undefined, optional
        The administrative state of the network.
        Acceptable values are "true" and "false". Changing this value enables or
        disables the DHCP capabilities of the existing subnet. Defaults to true.
    gatewayIp : str, default is Undefined, optional
        Default gateway used by devices in this subnet.
        Leaving this blank and not setting no_gateway will cause a default
        gateway of .1 to be used. Changing this updates the gateway IP of the
        existing subnet.
    ipVersion : float, default is Undefined, optional
        IP version, either 4 (default) or 6. Changing this creates a
        new subnet.
    ipv6AddressMode : str, default is Undefined, optional
        The IPv6 address mode. Valid values are
        dhcpv6-stateful, dhcpv6-stateless, or slaac.
    ipv6RaMode : str, default is Undefined, optional
        The IPv6 Router Advertisement mode. Valid values
        are dhcpv6-stateful, dhcpv6-stateless, or slaac.
    name : str, default is Undefined, optional
        The name of the subnet. Changing this updates the name of
        the existing subnet.
    networkId : str, default is Undefined, optional
        The UUID of the parent network. Changing this
        creates a new subnet.
    networkIdRef : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderNetworkIDRef, default is Undefined, optional
        network Id ref
    networkIdSelector : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderNetworkIDSelector, default is Undefined, optional
        network Id selector
    noGateway : bool, default is Undefined, optional
        Do not set a gateway IP on this subnet. Changing
        this removes or adds a default gateway IP of the existing subnet.
    prefixLength : float, default is Undefined, optional
        The prefix length to use when creating a subnet
        from a subnet pool. The default subnet pool prefix length that was defined
        when creating the subnet pool will be used if not provided. Changing this
        creates a new subnet.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create a Neutron subnet. If omitted, the
        region argument of the provider is used. Changing this creates a new
        subnet.
    segmentId : str, default is Undefined, optional
        The segment ID of the subnet. This is used to
        specify which segment the subnet belongs to when using Neutron's routed
        provider networks. Available when neutron segment extension is enabled.
    serviceTypes : [str], default is Undefined, optional
        An array of service types used by the subnet.
        Changing this updates the service types for the existing subnet.
    subnetpoolId : str, default is Undefined, optional
        The ID of the subnetpool associated with the subnet.
    tags : [str], default is Undefined, optional
        A set of string tags for the subnet.
    tenantId : str, default is Undefined, optional
        The owner of the subnet. Required if admin wants to
        create a subnet for another tenant. Changing this creates a new subnet.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional options.
    """


    allocationPool?: [NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderAllocationPoolItems0]

    cidr?: str

    description?: str

    dnsNameservers?: [str]

    dnsPublishFixedIp?: bool

    enableDhcp?: bool

    gatewayIp?: str

    ipVersion?: float

    ipv6AddressMode?: str

    ipv6RaMode?: str

    name?: str

    networkId?: str

    networkIdRef?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderNetworkIDRef

    networkIdSelector?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderNetworkIDSelector

    noGateway?: bool

    prefixLength?: float

    region?: str

    segmentId?: str

    serviceTypes?: [str]

    subnetpoolId?: str

    tags?: [str]

    tenantId?: str

    valueSpecs?: {str:str}


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderAllocationPoolItems0:
    r"""
    networking openstack crossplane io v1alpha1 subnet v2 spec init provider allocation pool items0

    Attributes
    ----------
    end : str, default is Undefined, optional
        The ending address.
    start : str, default is Undefined, optional
        The starting address.
    """


    end?: str

    start?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderNetworkIDRef:
    r"""
    Reference to a NetworkV2 in networking to populate networkId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderNetworkIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderNetworkIDRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderNetworkIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderNetworkIDSelector:
    r"""
    Selector for a NetworkV2 in networking to populate networkId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderNetworkIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderNetworkIDSelectorPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecInitProviderNetworkIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecProviderConfigRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2Status:
    r"""
    SubnetV2Status defines the observed state of SubnetV2.

    Attributes
    ----------
    atProvider : NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2StatusAtProvider

    conditions?: [NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2StatusConditionsItems0]

    observedGeneration?: int


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2StatusAtProvider:
    r"""
    networking openstack crossplane io v1alpha1 subnet v2 status at provider

    Attributes
    ----------
    allTags : [str], default is Undefined, optional
        The collection of ags assigned on the subnet, which have been
        explicitly and implicitly added.
    allocationPool : [NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2StatusAtProviderAllocationPoolItems0], default is Undefined, optional
        A block declaring the start and end range of
        the IP addresses available for use with DHCP in this subnet. Multiple
        allocation_pool blocks can be declared, providing the subnet with more
        than one range of IP addresses to use with DHCP. However, each IP range
        must be from the same CIDR that the subnet is part of.
        The allocation_pool block is documented below.
    cidr : str, default is Undefined, optional
        CIDR representing IP range for this subnet, based on IP
        version. You can omit this option if you are creating a subnet from a
        subnet pool.
    description : str, default is Undefined, optional
        Human-readable description of the subnet. Changing this
        updates the name of the existing subnet.
    dnsNameservers : [str], default is Undefined, optional
        An array of DNS name server names used by hosts
        in this subnet. Changing this updates the DNS name servers for the existing
        subnet.
    dnsPublishFixedIp : bool, default is Undefined, optional
        Whether to publish DNS records for IPs
        from this subnet. Defaults is false.
    enableDhcp : bool, default is Undefined, optional
        The administrative state of the network.
        Acceptable values are "true" and "false". Changing this value enables or
        disables the DHCP capabilities of the existing subnet. Defaults to true.
    gatewayIp : str, default is Undefined, optional
        Default gateway used by devices in this subnet.
        Leaving this blank and not setting no_gateway will cause a default
        gateway of .1 to be used. Changing this updates the gateway IP of the
        existing subnet.
    id : str, default is Undefined, optional
        id
    ipVersion : float, default is Undefined, optional
        IP version, either 4 (default) or 6. Changing this creates a
        new subnet.
    ipv6AddressMode : str, default is Undefined, optional
        The IPv6 address mode. Valid values are
        dhcpv6-stateful, dhcpv6-stateless, or slaac.
    ipv6RaMode : str, default is Undefined, optional
        The IPv6 Router Advertisement mode. Valid values
        are dhcpv6-stateful, dhcpv6-stateless, or slaac.
    name : str, default is Undefined, optional
        The name of the subnet. Changing this updates the name of
        the existing subnet.
    networkId : str, default is Undefined, optional
        The UUID of the parent network. Changing this
        creates a new subnet.
    noGateway : bool, default is Undefined, optional
        Do not set a gateway IP on this subnet. Changing
        this removes or adds a default gateway IP of the existing subnet.
    prefixLength : float, default is Undefined, optional
        The prefix length to use when creating a subnet
        from a subnet pool. The default subnet pool prefix length that was defined
        when creating the subnet pool will be used if not provided. Changing this
        creates a new subnet.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create a Neutron subnet. If omitted, the
        region argument of the provider is used. Changing this creates a new
        subnet.
    segmentId : str, default is Undefined, optional
        The segment ID of the subnet. This is used to
        specify which segment the subnet belongs to when using Neutron's routed
        provider networks. Available when neutron segment extension is enabled.
    serviceTypes : [str], default is Undefined, optional
        An array of service types used by the subnet.
        Changing this updates the service types for the existing subnet.
    subnetpoolId : str, default is Undefined, optional
        The ID of the subnetpool associated with the subnet.
    tags : [str], default is Undefined, optional
        A set of string tags for the subnet.
    tenantId : str, default is Undefined, optional
        The owner of the subnet. Required if admin wants to
        create a subnet for another tenant. Changing this creates a new subnet.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional options.
    """


    allTags?: [str]

    allocationPool?: [NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2StatusAtProviderAllocationPoolItems0]

    cidr?: str

    description?: str

    dnsNameservers?: [str]

    dnsPublishFixedIp?: bool

    enableDhcp?: bool

    gatewayIp?: str

    id?: str

    ipVersion?: float

    ipv6AddressMode?: str

    ipv6RaMode?: str

    name?: str

    networkId?: str

    noGateway?: bool

    prefixLength?: float

    region?: str

    segmentId?: str

    serviceTypes?: [str]

    subnetpoolId?: str

    tags?: [str]

    tenantId?: str

    valueSpecs?: {str:str}


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2StatusAtProviderAllocationPoolItems0:
    r"""
    networking openstack crossplane io v1alpha1 subnet v2 status at provider allocation pool items0

    Attributes
    ----------
    end : str, default is Undefined, optional
        The ending address.
    start : str, default is Undefined, optional
        The starting address.
    """


    end?: str

    start?: str


schema NetworkingOpenstackCrossplaneIoV1alpha1SubnetV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


