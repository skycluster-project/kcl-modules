"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretV1:
    r"""
    SecretV1 is the Schema for the SecretV1s API. Manages a V1 Barbican secret resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "keymanager.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretV1", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1Spec, default is Undefined, required
        spec
    status : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1Status, default is Undefined, optional
        status
    """


    apiVersion: "keymanager.openstack.crossplane.io/v1alpha1" = "keymanager.openstack.crossplane.io/v1alpha1"

    kind: "SecretV1" = "SecretV1"

    metadata?: v1.ObjectMeta

    spec: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1Spec

    status?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1Status


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1Spec:
    r"""
    SecretV1Spec defines the desired state of SecretV1

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecForProvider, default is Undefined, required
        for provider
    initProvider : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecForProvider

    initProvider?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecProviderConfigRef

    publishConnectionDetailsTo?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecWriteConnectionSecretToRef


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecForProvider:
    r"""
    keymanager openstack crossplane io v1alpha1 secret v1 spec for provider

    Attributes
    ----------
    acl : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecForProviderACL, default is Undefined, optional
        acl
    algorithm : str, default is Undefined, optional
        Metadata provided by a user or system for informational purposes.
    bitLength : float, default is Undefined, optional
        Metadata provided by a user or system for informational purposes.
    expiration : str, default is Undefined, optional
        The expiration time of the secret in the RFC3339 timestamp format (e.g. 2019-03-09T12:58:49Z). If omitted, a secret will never expire. Changing this creates a new secret.
    metadata : {str:str}, default is Undefined, optional
        Additional Metadata for the secret.
    mode : str, default is Undefined, optional
        Metadata provided by a user or system for informational purposes.
    name : str, default is Undefined, optional
        Human-readable name for the Secret. Does not have
        to be unique.
    payloadContentEncoding : str, default is Undefined, optional
        The encoding used for the payload to be able to include it in the JSON request. Must be either base64 or binary.
    payloadContentType : str, default is Undefined, optional
        The media type for the content of the payload. Must be one of text/plain, text/plain;charset=utf-8, text/plain; charset=utf-8, application/octet-stream, application/pkcs8.
    payloadSecretRef : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecForProviderPayloadSecretRef, default is Undefined, optional
        payload secret ref
    region : str, default is Undefined, optional
        The region in which to obtain the V1 KeyManager client.
        A KeyManager client is needed to create a secret. If omitted, the
        region argument of the provider is used. Changing this creates a new
        V1 secret.
    secretType : str, default is Undefined, optional
        Used to indicate the type of secret being stored. For more information see Secret types.
    """


    acl?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecForProviderACL

    algorithm?: str

    bitLength?: float

    expiration?: str

    metadata?: {str:str}

    mode?: str

    name?: str

    payloadContentEncoding?: str

    payloadContentType?: str

    payloadSecretRef?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecForProviderPayloadSecretRef

    region?: str

    secretType?: str


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecForProviderACL:
    r"""
    Allows to control an access to a secret. Currently only the
    read operation is supported. If not specified, the secret is accessible
    project wide.

    Attributes
    ----------
    read : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecForProviderACLRead, default is Undefined, optional
        read
    """


    read?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecForProviderACLRead


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecForProviderACLRead:
    r"""
    keymanager openstack crossplane io v1alpha1 secret v1 spec for provider ACL read

    Attributes
    ----------
    projectAccess : bool, default is Undefined, optional
        Whether the secret is accessible project wide.
        Defaults to true.
    users : [str], default is Undefined, optional
        The list of user IDs, which are allowed to access the
        secret, when project_access is set to false.
    """


    projectAccess?: bool

    users?: [str]


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecForProviderPayloadSecretRef:
    r"""
    The secret's data to be stored. payload_content_type must also be supplied if payload is included.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    acl : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecInitProviderACL, default is Undefined, optional
        acl
    algorithm : str, default is Undefined, optional
        Metadata provided by a user or system for informational purposes.
    bitLength : float, default is Undefined, optional
        Metadata provided by a user or system for informational purposes.
    expiration : str, default is Undefined, optional
        The expiration time of the secret in the RFC3339 timestamp format (e.g. 2019-03-09T12:58:49Z). If omitted, a secret will never expire. Changing this creates a new secret.
    metadata : {str:str}, default is Undefined, optional
        Additional Metadata for the secret.
    mode : str, default is Undefined, optional
        Metadata provided by a user or system for informational purposes.
    name : str, default is Undefined, optional
        Human-readable name for the Secret. Does not have
        to be unique.
    payloadContentEncoding : str, default is Undefined, optional
        The encoding used for the payload to be able to include it in the JSON request. Must be either base64 or binary.
    payloadContentType : str, default is Undefined, optional
        The media type for the content of the payload. Must be one of text/plain, text/plain;charset=utf-8, text/plain; charset=utf-8, application/octet-stream, application/pkcs8.
    payloadSecretRef : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecInitProviderPayloadSecretRef, default is Undefined, optional
        payload secret ref
    region : str, default is Undefined, optional
        The region in which to obtain the V1 KeyManager client.
        A KeyManager client is needed to create a secret. If omitted, the
        region argument of the provider is used. Changing this creates a new
        V1 secret.
    secretType : str, default is Undefined, optional
        Used to indicate the type of secret being stored. For more information see Secret types.
    """


    acl?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecInitProviderACL

    algorithm?: str

    bitLength?: float

    expiration?: str

    metadata?: {str:str}

    mode?: str

    name?: str

    payloadContentEncoding?: str

    payloadContentType?: str

    payloadSecretRef?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecInitProviderPayloadSecretRef

    region?: str

    secretType?: str


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecInitProviderACL:
    r"""
    Allows to control an access to a secret. Currently only the
    read operation is supported. If not specified, the secret is accessible
    project wide.

    Attributes
    ----------
    read : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecInitProviderACLRead, default is Undefined, optional
        read
    """


    read?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecInitProviderACLRead


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecInitProviderACLRead:
    r"""
    keymanager openstack crossplane io v1alpha1 secret v1 spec init provider ACL read

    Attributes
    ----------
    projectAccess : bool, default is Undefined, optional
        Whether the secret is accessible project wide.
        Defaults to true.
    users : [str], default is Undefined, optional
        The list of user IDs, which are allowed to access the
        secret, when project_access is set to false.
    """


    projectAccess?: bool

    users?: [str]


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecInitProviderPayloadSecretRef:
    r"""
    The secret's data to be stored. payload_content_type must also be supplied if payload is included.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecProviderConfigRefPolicy


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecPublishConnectionDetailsToConfigRef

    metadata?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecPublishConnectionDetailsToMetadata

    name: str


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecPublishConnectionDetailsToConfigRefPolicy


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1Status:
    r"""
    SecretV1Status defines the observed state of SecretV1.

    Attributes
    ----------
    atProvider : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1StatusAtProvider

    conditions?: [KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1StatusConditionsItems0]

    observedGeneration?: int


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1StatusAtProvider:
    r"""
    keymanager openstack crossplane io v1alpha1 secret v1 status at provider

    Attributes
    ----------
    acl : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1StatusAtProviderACL, default is Undefined, optional
        acl
    algorithm : str, default is Undefined, optional
        Metadata provided by a user or system for informational purposes.
    allMetadata : {str:str}, default is Undefined, optional
        The map of metadata, assigned on the secret, which has been
        explicitly and implicitly added.
    bitLength : float, default is Undefined, optional
        Metadata provided by a user or system for informational purposes.
    contentTypes : {str:str}, default is Undefined, optional
        The map of the content types, assigned on the secret.
    createdAt : str, default is Undefined, optional
        The date the secret was created.
    creatorId : str, default is Undefined, optional
        The creator of the secret.
    expiration : str, default is Undefined, optional
        The expiration time of the secret in the RFC3339 timestamp format (e.g. 2019-03-09T12:58:49Z). If omitted, a secret will never expire. Changing this creates a new secret.
    id : str, default is Undefined, optional
        id
    metadata : {str:str}, default is Undefined, optional
        Additional Metadata for the secret.
    mode : str, default is Undefined, optional
        Metadata provided by a user or system for informational purposes.
    name : str, default is Undefined, optional
        Human-readable name for the Secret. Does not have
        to be unique.
    payloadContentEncoding : str, default is Undefined, optional
        The encoding used for the payload to be able to include it in the JSON request. Must be either base64 or binary.
    payloadContentType : str, default is Undefined, optional
        The media type for the content of the payload. Must be one of text/plain, text/plain;charset=utf-8, text/plain; charset=utf-8, application/octet-stream, application/pkcs8.
    region : str, default is Undefined, optional
        The region in which to obtain the V1 KeyManager client.
        A KeyManager client is needed to create a secret. If omitted, the
        region argument of the provider is used. Changing this creates a new
        V1 secret.
    secretRef : str, default is Undefined, optional
        The secret reference / where to find the secret.
    secretType : str, default is Undefined, optional
        Used to indicate the type of secret being stored. For more information see Secret types.
    status : str, default is Undefined, optional
        The status of the secret.
    updatedAt : str, default is Undefined, optional
        The date the secret was last updated.
    """


    acl?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1StatusAtProviderACL

    algorithm?: str

    allMetadata?: {str:str}

    bitLength?: float

    contentTypes?: {str:str}

    createdAt?: str

    creatorId?: str

    expiration?: str

    id?: str

    metadata?: {str:str}

    mode?: str

    name?: str

    payloadContentEncoding?: str

    payloadContentType?: str

    region?: str

    secretRef?: str

    secretType?: str

    status?: str

    updatedAt?: str


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1StatusAtProviderACL:
    r"""
    Allows to control an access to a secret. Currently only the
    read operation is supported. If not specified, the secret is accessible
    project wide.

    Attributes
    ----------
    read : KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1StatusAtProviderACLRead, default is Undefined, optional
        read
    """


    read?: KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1StatusAtProviderACLRead


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1StatusAtProviderACLRead:
    r"""
    keymanager openstack crossplane io v1alpha1 secret v1 status at provider ACL read

    Attributes
    ----------
    createdAt : str, default is Undefined, optional
        The date the secret was created.
    projectAccess : bool, default is Undefined, optional
        Whether the secret is accessible project wide.
        Defaults to true.
    updatedAt : str, default is Undefined, optional
        The date the secret was last updated.
    users : [str], default is Undefined, optional
        The list of user IDs, which are allowed to access the
        secret, when project_access is set to false.
    """


    createdAt?: str

    projectAccess?: bool

    updatedAt?: str

    users?: [str]


schema KeymanagerOpenstackCrossplaneIoV1alpha1SecretV1StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


