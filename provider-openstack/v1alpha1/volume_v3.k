"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VolumeV3:
    r"""
    VolumeV3 is the Schema for the VolumeV3s API. Manages a V3 volume resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "blockstorage.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VolumeV3", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3Spec, default is Undefined, required
        spec
    status : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3Status, default is Undefined, optional
        status
    """


    apiVersion: "blockstorage.openstack.crossplane.io/v1alpha1" = "blockstorage.openstack.crossplane.io/v1alpha1"

    kind: "VolumeV3" = "VolumeV3"

    metadata?: v1.ObjectMeta

    spec: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3Spec

    status?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3Status


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3Spec:
    r"""
    VolumeV3Spec defines the desired state of VolumeV3

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecForProvider, default is Undefined, required
        for provider
    initProvider : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecForProvider

    initProvider?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecProviderConfigRef

    publishConnectionDetailsTo?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecWriteConnectionSecretToRef


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecForProvider:
    r"""
    blockstorage openstack crossplane io v1alpha1 volume v3 spec for provider

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        The availability zone for the volume.
        Changing this creates a new volume.
    backupId : str, default is Undefined, optional
        The backup ID from which to create the volume.
        Conflicts with snapshot_id, source_vol_id, image_id. Changing this
        creates a new volume. Requires microversion >= 3.47.
    consistencyGroupId : str, default is Undefined, optional
        The consistency group to place the volume
        in.
    description : str, default is Undefined, optional
        A description of the volume. Changing this updates
        the volume's description.
    enableOnlineResize : bool, default is Undefined, optional
        When this option is set it allows extending
        attached volumes. Note: updating size of an attached volume requires Cinder
        support for version 3.42 and a compatible storage driver.
    imageId : str, default is Undefined, optional
        The image ID from which to create the volume.
        Conflicts with snapshot_id, source_vol_id, backup_id. Changing this
        creates a new volume.
    metadata : {str:str}, default is Undefined, optional
        Metadata key/value pairs to associate with the volume.
        Changing this updates the existing volume metadata.
    name : str, default is Undefined, optional
        A unique name for the volume. Changing this updates the
        volume's name.
    region : str, default is Undefined, optional
        The region in which to create the volume. If
        omitted, the region argument of the provider is used. Changing this
        creates a new volume.
    schedulerHints : [BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecForProviderSchedulerHintsItems0], default is Undefined, optional
        Provide the Cinder scheduler with hints on where
        to instantiate a volume in the OpenStack cloud. The available hints are described below.
    size : float, default is Undefined, optional
        The size of the volume to create (in gigabytes).
    snapshotId : str, default is Undefined, optional
        The snapshot ID from which to create the volume.
        Conflicts with source_vol_id, image_id, backup_id. Changing this
        creates a new volume.
    sourceReplica : str, default is Undefined, optional
        The volume ID to replicate with.
    sourceVolId : str, default is Undefined, optional
        The volume ID from which to create the volume.
        Conflicts with snapshot_id, image_id, backup_id. Changing this
        creates a new volume.
    volumeRetypePolicy : str, default is Undefined, optional
        Migration policy when changing volume_type.
        "never" (default) prevents migration to another storage backend, while "on-demand"
        allows migration if needed. Applicable only when updating volume_type.
    volumeType : str, default is Undefined, optional
        The type of volume to create or update.
        Changing this will attempt an in-place retype operation; migration depends on volume_retype_policy.
    """


    availabilityZone?: str

    backupId?: str

    consistencyGroupId?: str

    description?: str

    enableOnlineResize?: bool

    imageId?: str

    metadata?: {str:str}

    name?: str

    region?: str

    schedulerHints?: [BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecForProviderSchedulerHintsItems0]

    size?: float

    snapshotId?: str

    sourceReplica?: str

    sourceVolId?: str

    volumeRetypePolicy?: str

    volumeType?: str


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecForProviderSchedulerHintsItems0:
    r"""
    blockstorage openstack crossplane io v1alpha1 volume v3 spec for provider scheduler hints items0

    Attributes
    ----------
    additionalProperties : {str:str}, default is Undefined, optional
        Arbitrary key/value pairs of additional
        properties to pass to the scheduler.
    differentHost : [str], default is Undefined, optional
        The volume should be scheduled on a
        different host from the set of volumes specified in the list provided.
    localToInstance : str, default is Undefined, optional
        An instance UUID. The volume should be
        scheduled on the same host as the instance.
    query : str, default is Undefined, optional
        A conditional query that a back-end must pass in
        order to host a volume. The query must use the JsonFilter syntax
        which is described
        here.
        At this time, only simple queries are supported. Compound queries using
        and, or, or not are not supported. An example of a simple query is:
    sameHost : [str], default is Undefined, optional
        A list of volume UUIDs. The volume should be
        scheduled on the same host as another volume specified in the list provided.
    """


    additionalProperties?: {str:str}

    differentHost?: [str]

    localToInstance?: str

    query?: str

    sameHost?: [str]


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        The availability zone for the volume.
        Changing this creates a new volume.
    backupId : str, default is Undefined, optional
        The backup ID from which to create the volume.
        Conflicts with snapshot_id, source_vol_id, image_id. Changing this
        creates a new volume. Requires microversion >= 3.47.
    consistencyGroupId : str, default is Undefined, optional
        The consistency group to place the volume
        in.
    description : str, default is Undefined, optional
        A description of the volume. Changing this updates
        the volume's description.
    enableOnlineResize : bool, default is Undefined, optional
        When this option is set it allows extending
        attached volumes. Note: updating size of an attached volume requires Cinder
        support for version 3.42 and a compatible storage driver.
    imageId : str, default is Undefined, optional
        The image ID from which to create the volume.
        Conflicts with snapshot_id, source_vol_id, backup_id. Changing this
        creates a new volume.
    metadata : {str:str}, default is Undefined, optional
        Metadata key/value pairs to associate with the volume.
        Changing this updates the existing volume metadata.
    name : str, default is Undefined, optional
        A unique name for the volume. Changing this updates the
        volume's name.
    region : str, default is Undefined, optional
        The region in which to create the volume. If
        omitted, the region argument of the provider is used. Changing this
        creates a new volume.
    schedulerHints : [BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecInitProviderSchedulerHintsItems0], default is Undefined, optional
        Provide the Cinder scheduler with hints on where
        to instantiate a volume in the OpenStack cloud. The available hints are described below.
    size : float, default is Undefined, optional
        The size of the volume to create (in gigabytes).
    snapshotId : str, default is Undefined, optional
        The snapshot ID from which to create the volume.
        Conflicts with source_vol_id, image_id, backup_id. Changing this
        creates a new volume.
    sourceReplica : str, default is Undefined, optional
        The volume ID to replicate with.
    sourceVolId : str, default is Undefined, optional
        The volume ID from which to create the volume.
        Conflicts with snapshot_id, image_id, backup_id. Changing this
        creates a new volume.
    volumeRetypePolicy : str, default is Undefined, optional
        Migration policy when changing volume_type.
        "never" (default) prevents migration to another storage backend, while "on-demand"
        allows migration if needed. Applicable only when updating volume_type.
    volumeType : str, default is Undefined, optional
        The type of volume to create or update.
        Changing this will attempt an in-place retype operation; migration depends on volume_retype_policy.
    """


    availabilityZone?: str

    backupId?: str

    consistencyGroupId?: str

    description?: str

    enableOnlineResize?: bool

    imageId?: str

    metadata?: {str:str}

    name?: str

    region?: str

    schedulerHints?: [BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecInitProviderSchedulerHintsItems0]

    size?: float

    snapshotId?: str

    sourceReplica?: str

    sourceVolId?: str

    volumeRetypePolicy?: str

    volumeType?: str


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecInitProviderSchedulerHintsItems0:
    r"""
    blockstorage openstack crossplane io v1alpha1 volume v3 spec init provider scheduler hints items0

    Attributes
    ----------
    additionalProperties : {str:str}, default is Undefined, optional
        Arbitrary key/value pairs of additional
        properties to pass to the scheduler.
    differentHost : [str], default is Undefined, optional
        The volume should be scheduled on a
        different host from the set of volumes specified in the list provided.
    localToInstance : str, default is Undefined, optional
        An instance UUID. The volume should be
        scheduled on the same host as the instance.
    query : str, default is Undefined, optional
        A conditional query that a back-end must pass in
        order to host a volume. The query must use the JsonFilter syntax
        which is described
        here.
        At this time, only simple queries are supported. Compound queries using
        and, or, or not are not supported. An example of a simple query is:
    sameHost : [str], default is Undefined, optional
        A list of volume UUIDs. The volume should be
        scheduled on the same host as another volume specified in the list provided.
    """


    additionalProperties?: {str:str}

    differentHost?: [str]

    localToInstance?: str

    query?: str

    sameHost?: [str]


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecProviderConfigRefPolicy


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecPublishConnectionDetailsToConfigRef

    metadata?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecPublishConnectionDetailsToMetadata

    name: str


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecPublishConnectionDetailsToConfigRefPolicy


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3Status:
    r"""
    VolumeV3Status defines the observed state of VolumeV3.

    Attributes
    ----------
    atProvider : BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3StatusAtProvider

    conditions?: [BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3StatusConditionsItems0]

    observedGeneration?: int


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3StatusAtProvider:
    r"""
    blockstorage openstack crossplane io v1alpha1 volume v3 status at provider

    Attributes
    ----------
    attachment : [BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3StatusAtProviderAttachmentItems0], default is Undefined, optional
        If a volume is attached to an instance, this attribute will
        display the Attachment ID, Instance ID, and the Device as the Instance
        sees it.
    availabilityZone : str, default is Undefined, optional
        The availability zone for the volume.
        Changing this creates a new volume.
    backupId : str, default is Undefined, optional
        The backup ID from which to create the volume.
        Conflicts with snapshot_id, source_vol_id, image_id. Changing this
        creates a new volume. Requires microversion >= 3.47.
    consistencyGroupId : str, default is Undefined, optional
        The consistency group to place the volume
        in.
    description : str, default is Undefined, optional
        A description of the volume. Changing this updates
        the volume's description.
    enableOnlineResize : bool, default is Undefined, optional
        When this option is set it allows extending
        attached volumes. Note: updating size of an attached volume requires Cinder
        support for version 3.42 and a compatible storage driver.
    id : str, default is Undefined, optional
        id
    imageId : str, default is Undefined, optional
        The image ID from which to create the volume.
        Conflicts with snapshot_id, source_vol_id, backup_id. Changing this
        creates a new volume.
    metadata : {str:str}, default is Undefined, optional
        Metadata key/value pairs to associate with the volume.
        Changing this updates the existing volume metadata.
    name : str, default is Undefined, optional
        A unique name for the volume. Changing this updates the
        volume's name.
    region : str, default is Undefined, optional
        The region in which to create the volume. If
        omitted, the region argument of the provider is used. Changing this
        creates a new volume.
    schedulerHints : [BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3StatusAtProviderSchedulerHintsItems0], default is Undefined, optional
        Provide the Cinder scheduler with hints on where
        to instantiate a volume in the OpenStack cloud. The available hints are described below.
    size : float, default is Undefined, optional
        The size of the volume to create (in gigabytes).
    snapshotId : str, default is Undefined, optional
        The snapshot ID from which to create the volume.
        Conflicts with source_vol_id, image_id, backup_id. Changing this
        creates a new volume.
    sourceReplica : str, default is Undefined, optional
        The volume ID to replicate with.
    sourceVolId : str, default is Undefined, optional
        The volume ID from which to create the volume.
        Conflicts with snapshot_id, image_id, backup_id. Changing this
        creates a new volume.
    volumeRetypePolicy : str, default is Undefined, optional
        Migration policy when changing volume_type.
        "never" (default) prevents migration to another storage backend, while "on-demand"
        allows migration if needed. Applicable only when updating volume_type.
    volumeType : str, default is Undefined, optional
        The type of volume to create or update.
        Changing this will attempt an in-place retype operation; migration depends on volume_retype_policy.
    """


    attachment?: [BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3StatusAtProviderAttachmentItems0]

    availabilityZone?: str

    backupId?: str

    consistencyGroupId?: str

    description?: str

    enableOnlineResize?: bool

    id?: str

    imageId?: str

    metadata?: {str:str}

    name?: str

    region?: str

    schedulerHints?: [BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3StatusAtProviderSchedulerHintsItems0]

    size?: float

    snapshotId?: str

    sourceReplica?: str

    sourceVolId?: str

    volumeRetypePolicy?: str

    volumeType?: str


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3StatusAtProviderAttachmentItems0:
    r"""
    blockstorage openstack crossplane io v1alpha1 volume v3 status at provider attachment items0

    Attributes
    ----------
    device : str, default is Undefined, optional
        device
    id : str, default is Undefined, optional
        id
    instanceId : str, default is Undefined, optional
        instance Id
    """


    device?: str

    id?: str

    instanceId?: str


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3StatusAtProviderSchedulerHintsItems0:
    r"""
    blockstorage openstack crossplane io v1alpha1 volume v3 status at provider scheduler hints items0

    Attributes
    ----------
    additionalProperties : {str:str}, default is Undefined, optional
        Arbitrary key/value pairs of additional
        properties to pass to the scheduler.
    differentHost : [str], default is Undefined, optional
        The volume should be scheduled on a
        different host from the set of volumes specified in the list provided.
    localToInstance : str, default is Undefined, optional
        An instance UUID. The volume should be
        scheduled on the same host as the instance.
    query : str, default is Undefined, optional
        A conditional query that a back-end must pass in
        order to host a volume. The query must use the JsonFilter syntax
        which is described
        here.
        At this time, only simple queries are supported. Compound queries using
        and, or, or not are not supported. An example of a simple query is:
    sameHost : [str], default is Undefined, optional
        A list of volume UUIDs. The volume should be
        scheduled on the same host as another volume specified in the list provided.
    """


    additionalProperties?: {str:str}

    differentHost?: [str]

    localToInstance?: str

    query?: str

    sameHost?: [str]


schema BlockstorageOpenstackCrossplaneIoV1alpha1VolumeV3StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


