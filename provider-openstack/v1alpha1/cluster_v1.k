"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ClusterV1:
    r"""
    ClusterV1 is the Schema for the ClusterV1s API. Manages a V1 Magnum node group resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "containerinfra.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClusterV1", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1Spec, default is Undefined, required
        spec
    status : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1Status, default is Undefined, optional
        status
    """


    apiVersion: "containerinfra.openstack.crossplane.io/v1alpha1" = "containerinfra.openstack.crossplane.io/v1alpha1"

    kind: "ClusterV1" = "ClusterV1"

    metadata?: v1.ObjectMeta

    spec: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1Spec

    status?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1Status


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1Spec:
    r"""
    ClusterV1Spec defines the desired state of ClusterV1

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProvider, default is Undefined, required
        for provider
    initProvider : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProvider

    initProvider?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecProviderConfigRef

    publishConnectionDetailsTo?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecWriteConnectionSecretToRef


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProvider:
    r"""
    containerinfra openstack crossplane io v1alpha1 cluster v1 spec for provider

    Attributes
    ----------
    clusterTemplateId : str, default is Undefined, optional
        cluster template Id
    createTimeout : float, default is Undefined, optional
        create timeout
    discoveryUrl : str, default is Undefined, optional
        discovery Url
    dockerVolumeSize : float, default is Undefined, optional
        The size (in GB) of the Docker volume.
        Changing this creates a new node group.
    fixedNetwork : str, default is Undefined, optional
        fixed network
    fixedNetworkRef : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedNetworkRef, default is Undefined, optional
        fixed network ref
    fixedNetworkSelector : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedNetworkSelector, default is Undefined, optional
        fixed network selector
    fixedSubnet : str, default is Undefined, optional
        fixed subnet
    fixedSubnetRef : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedSubnetRef, default is Undefined, optional
        fixed subnet ref
    fixedSubnetSelector : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedSubnetSelector, default is Undefined, optional
        fixed subnet selector
    flavor : str, default is Undefined, optional
        flavor
    floatingIpEnabled : bool, default is Undefined, optional
        floating Ip enabled
    keypair : str, default is Undefined, optional
        keypair
    labels : {str:str}, default is Undefined, optional
        The list of key value pairs representing additional
        properties of the node group. Changing this creates a new node group.
    masterCount : float, default is Undefined, optional
        master count
    masterFlavor : str, default is Undefined, optional
        master flavor
    masterLbEnabled : bool, default is Undefined, optional
        master lb enabled
    mergeLabels : bool, default is Undefined, optional
        Indicates whether the provided labels should be
        merged with cluster labels. Changing this creates a new nodegroup.
    name : str, default is Undefined, optional
        The name of the node group. Changing this creates a new
        node group.
    nodeCount : float, default is Undefined, optional
        The number of nodes for the node group. Changing
        this update the number of nodes of the node group.
    region : str, default is Undefined, optional
        The region in which to obtain the V1 Container Infra
        client. A Container Infra client is needed to create a cluster. If omitted,
        the region argument of the provider is used. Changing this creates a new
        node group.
    """


    clusterTemplateId?: str

    createTimeout?: float

    discoveryUrl?: str

    dockerVolumeSize?: float

    fixedNetwork?: str

    fixedNetworkRef?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedNetworkRef

    fixedNetworkSelector?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedNetworkSelector

    fixedSubnet?: str

    fixedSubnetRef?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedSubnetRef

    fixedSubnetSelector?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedSubnetSelector

    flavor?: str

    floatingIpEnabled?: bool

    keypair?: str

    labels?: {str:str}

    masterCount?: float

    masterFlavor?: str

    masterLbEnabled?: bool

    mergeLabels?: bool

    name?: str

    nodeCount?: float

    region?: str


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedNetworkRef:
    r"""
    Reference to a NetworkV2 in networking to populate fixedNetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedNetworkRefPolicy


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedNetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedNetworkSelector:
    r"""
    Selector for a NetworkV2 in networking to populate fixedNetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedNetworkSelectorPolicy


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedNetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedSubnetRef:
    r"""
    Reference to a SubnetV2 in networking to populate fixedSubnet.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedSubnetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedSubnetRefPolicy


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedSubnetRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedSubnetSelector:
    r"""
    Selector for a SubnetV2 in networking to populate fixedSubnet.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedSubnetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedSubnetSelectorPolicy


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecForProviderFixedSubnetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    clusterTemplateId : str, default is Undefined, optional
        cluster template Id
    createTimeout : float, default is Undefined, optional
        create timeout
    discoveryUrl : str, default is Undefined, optional
        discovery Url
    dockerVolumeSize : float, default is Undefined, optional
        The size (in GB) of the Docker volume.
        Changing this creates a new node group.
    fixedNetwork : str, default is Undefined, optional
        fixed network
    fixedNetworkRef : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedNetworkRef, default is Undefined, optional
        fixed network ref
    fixedNetworkSelector : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedNetworkSelector, default is Undefined, optional
        fixed network selector
    fixedSubnet : str, default is Undefined, optional
        fixed subnet
    fixedSubnetRef : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedSubnetRef, default is Undefined, optional
        fixed subnet ref
    fixedSubnetSelector : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedSubnetSelector, default is Undefined, optional
        fixed subnet selector
    flavor : str, default is Undefined, optional
        flavor
    floatingIpEnabled : bool, default is Undefined, optional
        floating Ip enabled
    keypair : str, default is Undefined, optional
        keypair
    labels : {str:str}, default is Undefined, optional
        The list of key value pairs representing additional
        properties of the node group. Changing this creates a new node group.
    masterCount : float, default is Undefined, optional
        master count
    masterFlavor : str, default is Undefined, optional
        master flavor
    masterLbEnabled : bool, default is Undefined, optional
        master lb enabled
    mergeLabels : bool, default is Undefined, optional
        Indicates whether the provided labels should be
        merged with cluster labels. Changing this creates a new nodegroup.
    name : str, default is Undefined, optional
        The name of the node group. Changing this creates a new
        node group.
    nodeCount : float, default is Undefined, optional
        The number of nodes for the node group. Changing
        this update the number of nodes of the node group.
    region : str, default is Undefined, optional
        The region in which to obtain the V1 Container Infra
        client. A Container Infra client is needed to create a cluster. If omitted,
        the region argument of the provider is used. Changing this creates a new
        node group.
    """


    clusterTemplateId?: str

    createTimeout?: float

    discoveryUrl?: str

    dockerVolumeSize?: float

    fixedNetwork?: str

    fixedNetworkRef?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedNetworkRef

    fixedNetworkSelector?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedNetworkSelector

    fixedSubnet?: str

    fixedSubnetRef?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedSubnetRef

    fixedSubnetSelector?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedSubnetSelector

    flavor?: str

    floatingIpEnabled?: bool

    keypair?: str

    labels?: {str:str}

    masterCount?: float

    masterFlavor?: str

    masterLbEnabled?: bool

    mergeLabels?: bool

    name?: str

    nodeCount?: float

    region?: str


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedNetworkRef:
    r"""
    Reference to a NetworkV2 in networking to populate fixedNetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedNetworkRefPolicy


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedNetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedNetworkSelector:
    r"""
    Selector for a NetworkV2 in networking to populate fixedNetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedNetworkSelectorPolicy


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedNetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedSubnetRef:
    r"""
    Reference to a SubnetV2 in networking to populate fixedSubnet.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedSubnetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedSubnetRefPolicy


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedSubnetRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedSubnetSelector:
    r"""
    Selector for a SubnetV2 in networking to populate fixedSubnet.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedSubnetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedSubnetSelectorPolicy


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecInitProviderFixedSubnetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecProviderConfigRefPolicy


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecPublishConnectionDetailsToConfigRef

    metadata?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecPublishConnectionDetailsToMetadata

    name: str


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecPublishConnectionDetailsToConfigRefPolicy


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1Status:
    r"""
    ClusterV1Status defines the observed state of ClusterV1.

    Attributes
    ----------
    atProvider : ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1StatusAtProvider

    conditions?: [ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1StatusConditionsItems0]

    observedGeneration?: int


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1StatusAtProvider:
    r"""
    containerinfra openstack crossplane io v1alpha1 cluster v1 status at provider

    Attributes
    ----------
    apiAddress : str, default is Undefined, optional
        api address
    clusterTemplateId : str, default is Undefined, optional
        cluster template Id
    coeVersion : str, default is Undefined, optional
        coe version
    containerVersion : str, default is Undefined, optional
        container version
    createTimeout : float, default is Undefined, optional
        create timeout
    createdAt : str, default is Undefined, optional
        The time at which node group was created.
    discoveryUrl : str, default is Undefined, optional
        discovery Url
    dockerVolumeSize : float, default is Undefined, optional
        The size (in GB) of the Docker volume.
        Changing this creates a new node group.
    fixedNetwork : str, default is Undefined, optional
        fixed network
    fixedSubnet : str, default is Undefined, optional
        fixed subnet
    flavor : str, default is Undefined, optional
        flavor
    floatingIpEnabled : bool, default is Undefined, optional
        floating Ip enabled
    id : str, default is Undefined, optional
        id
    keypair : str, default is Undefined, optional
        keypair
    labels : {str:str}, default is Undefined, optional
        The list of key value pairs representing additional
        properties of the node group. Changing this creates a new node group.
    masterAddresses : [str], default is Undefined, optional
        master addresses
    masterCount : float, default is Undefined, optional
        master count
    masterFlavor : str, default is Undefined, optional
        master flavor
    masterLbEnabled : bool, default is Undefined, optional
        master lb enabled
    mergeLabels : bool, default is Undefined, optional
        Indicates whether the provided labels should be
        merged with cluster labels. Changing this creates a new nodegroup.
    name : str, default is Undefined, optional
        The name of the node group. Changing this creates a new
        node group.
    nodeAddresses : [str], default is Undefined, optional
        node addresses
    nodeCount : float, default is Undefined, optional
        The number of nodes for the node group. Changing
        this update the number of nodes of the node group.
    projectId : str, default is Undefined, optional
        The project of the node group. Required if admin
        wants to create a cluster in another project. Changing this creates a new
        node group.
    region : str, default is Undefined, optional
        The region in which to obtain the V1 Container Infra
        client. A Container Infra client is needed to create a cluster. If omitted,
        the region argument of the provider is used. Changing this creates a new
        node group.
    stackId : str, default is Undefined, optional
        stack Id
    updatedAt : str, default is Undefined, optional
        The time at which node group was created.
    userId : str, default is Undefined, optional
        user Id
    """


    apiAddress?: str

    clusterTemplateId?: str

    coeVersion?: str

    containerVersion?: str

    createTimeout?: float

    createdAt?: str

    discoveryUrl?: str

    dockerVolumeSize?: float

    fixedNetwork?: str

    fixedSubnet?: str

    flavor?: str

    floatingIpEnabled?: bool

    id?: str

    keypair?: str

    labels?: {str:str}

    masterAddresses?: [str]

    masterCount?: float

    masterFlavor?: str

    masterLbEnabled?: bool

    mergeLabels?: bool

    name?: str

    nodeAddresses?: [str]

    nodeCount?: float

    projectId?: str

    region?: str

    stackId?: str

    updatedAt?: str

    userId?: str


schema ContainerinfraOpenstackCrossplaneIoV1alpha1ClusterV1StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


