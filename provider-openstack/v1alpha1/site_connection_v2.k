"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SiteConnectionV2:
    r"""
    SiteConnectionV2 is the Schema for the SiteConnectionV2s API. Manages a V2 Neutron IPSec site connection resource within OpenStack.

    Attributes
    ----------
    apiVersion : str, default is "vpnaas.openstack.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SiteConnectionV2", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2Spec, default is Undefined, required
        spec
    status : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2Status, default is Undefined, optional
        status
    """


    apiVersion: "vpnaas.openstack.crossplane.io/v1alpha1" = "vpnaas.openstack.crossplane.io/v1alpha1"

    kind: "SiteConnectionV2" = "SiteConnectionV2"

    metadata?: v1.ObjectMeta

    spec: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2Spec

    status?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2Status


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2Spec:
    r"""
    SiteConnectionV2Spec defines the desired state of SiteConnectionV2

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProvider, default is Undefined, required
        for provider
    initProvider : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProvider

    initProvider?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecProviderConfigRef

    publishConnectionDetailsTo?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecWriteConnectionSecretToRef


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProvider:
    r"""
    vpnaas openstack crossplane io v1alpha1 site connection v2 spec for provider

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        The administrative state of the resource. Can either be up(true) or down(false).
        Changing this updates the administrative state of the existing connection.
    description : str, default is Undefined, optional
        The human-readable description for the connection.
        Changing this updates the description of the existing connection.
    dpd : [VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderDpdItems0], default is Undefined, optional
        A dictionary with dead peer detection (DPD) protocol controls.
    ikepolicyId : str, default is Undefined, optional
        The ID of the IKE policy. Changing this creates a new connection.
    ikepolicyIdRef : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIkepolicyIDRef, default is Undefined, optional
        ikepolicy Id ref
    ikepolicyIdSelector : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIkepolicyIDSelector, default is Undefined, optional
        ikepolicy Id selector
    initiator : str, default is Undefined, optional
        A valid value is response-only or bi-directional. Default is bi-directional.
    ipsecpolicyId : str, default is Undefined, optional
        The ID of the IPsec policy. Changing this creates a new connection.
    ipsecpolicyIdRef : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIpsecpolicyIDRef, default is Undefined, optional
        ipsecpolicy Id ref
    ipsecpolicyIdSelector : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIpsecpolicyIDSelector, default is Undefined, optional
        ipsecpolicy Id selector
    localEpGroupId : str, default is Undefined, optional
        The ID for the endpoint group that contains private subnets for the local side of the connection.
        You must specify this parameter with the peer_ep_group_id parameter unless
        in backward- compatible mode where peer_cidrs is provided with a subnet_id for the VPN service.
        Changing this updates the existing connection.
    localEpGroupIdRef : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderLocalEpGroupIDRef, default is Undefined, optional
        local ep group Id ref
    localEpGroupIdSelector : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderLocalEpGroupIDSelector, default is Undefined, optional
        local ep group Id selector
    localId : str, default is Undefined, optional
        An ID to be used instead of the external IP address for a virtual router used in traffic between instances on different networks in east-west traffic.
        Most often, local ID would be domain name, email address, etc.
        If this is not configured then the external IP address will be used as the ID.
    mtu : float, default is Undefined, optional
        The maximum transmission unit (MTU) value to address fragmentation.
        Minimum value is 68 for IPv4, and 1280 for IPv6.
    name : str, default is Undefined, optional
        The name of the connection. Changing this updates the name of
        the existing connection.
    peerAddress : str, default is Undefined, optional
        The peer gateway public IPv4 or IPv6 address or FQDN.
    peerCidrs : [str], default is Undefined, optional
        Unique list of valid peer private CIDRs in the form < net_address > / < prefix > .
    peerEpGroupId : str, default is Undefined, optional
        The ID for the endpoint group that contains private CIDRs in the form < net_address > / < prefix > for the peer side of the connection.
        You must specify this parameter with the local_ep_group_id parameter unless in backward-compatible mode
        where peer_cidrs is provided with a subnet_id for the VPN service.
    peerEpGroupIdRef : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderPeerEpGroupIDRef, default is Undefined, optional
        peer ep group Id ref
    peerEpGroupIdSelector : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderPeerEpGroupIDSelector, default is Undefined, optional
        peer ep group Id selector
    peerId : str, default is Undefined, optional
        The peer router identity for authentication. A valid value is an IPv4 address, IPv6 address, e-mail address, key ID, or FQDN.
        Typically, this value matches the peer_address value.
        Changing this updates the existing policy.
    psk : str, default is Undefined, optional
        The pre-shared key. A valid value is any string.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create an IPSec site connection. If omitted, the
        region argument of the provider is used. Changing this creates a new
        site connection.
    tenantId : str, default is Undefined, optional
        The owner of the connection. Required if admin wants to
        create a connection for another project. Changing this creates a new connection.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional options.
    vpnserviceId : str, default is Undefined, optional
        The ID of the VPN service. Changing this creates a new connection.
    vpnserviceIdRef : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderVpnserviceIDRef, default is Undefined, optional
        vpnservice Id ref
    vpnserviceIdSelector : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderVpnserviceIDSelector, default is Undefined, optional
        vpnservice Id selector
    """


    adminStateUp?: bool

    description?: str

    dpd?: [VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderDpdItems0]

    ikepolicyId?: str

    ikepolicyIdRef?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIkepolicyIDRef

    ikepolicyIdSelector?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIkepolicyIDSelector

    initiator?: str

    ipsecpolicyId?: str

    ipsecpolicyIdRef?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIpsecpolicyIDRef

    ipsecpolicyIdSelector?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIpsecpolicyIDSelector

    localEpGroupId?: str

    localEpGroupIdRef?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderLocalEpGroupIDRef

    localEpGroupIdSelector?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderLocalEpGroupIDSelector

    localId?: str

    mtu?: float

    name?: str

    peerAddress?: str

    peerCidrs?: [str]

    peerEpGroupId?: str

    peerEpGroupIdRef?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderPeerEpGroupIDRef

    peerEpGroupIdSelector?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderPeerEpGroupIDSelector

    peerId?: str

    psk?: str

    region?: str

    tenantId?: str

    valueSpecs?: {str:str}

    vpnserviceId?: str

    vpnserviceIdRef?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderVpnserviceIDRef

    vpnserviceIdSelector?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderVpnserviceIDSelector


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderDpdItems0:
    r"""
    vpnaas openstack crossplane io v1alpha1 site connection v2 spec for provider dpd items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        The dead peer detection (DPD) action.
        A valid value is clear, hold, restart, disabled, or restart-by-peer.
        Default value is hold.
    interval : float, default is Undefined, optional
        The dead peer detection (DPD) interval, in seconds.
        A valid value is a positive integer.
        Default is 30.
    timeout : float, default is Undefined, optional
        The dead peer detection (DPD) timeout in seconds.
        A valid value is a positive integer that is greater than the DPD interval value.
        Default is 120.
    """


    action?: str

    interval?: float

    timeout?: float


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIkepolicyIDRef:
    r"""
    Reference to a IkePolicyV2 in vpnaas to populate ikepolicyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIkepolicyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIkepolicyIDRefPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIkepolicyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIkepolicyIDSelector:
    r"""
    Selector for a IkePolicyV2 in vpnaas to populate ikepolicyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIkepolicyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIkepolicyIDSelectorPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIkepolicyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIpsecpolicyIDRef:
    r"""
    Reference to a IpsecPolicyV2 in vpnaas to populate ipsecpolicyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIpsecpolicyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIpsecpolicyIDRefPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIpsecpolicyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIpsecpolicyIDSelector:
    r"""
    Selector for a IpsecPolicyV2 in vpnaas to populate ipsecpolicyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIpsecpolicyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIpsecpolicyIDSelectorPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderIpsecpolicyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderLocalEpGroupIDRef:
    r"""
    Reference to a EndpointGroupV2 in vpnaas to populate localEpGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderLocalEpGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderLocalEpGroupIDRefPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderLocalEpGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderLocalEpGroupIDSelector:
    r"""
    Selector for a EndpointGroupV2 in vpnaas to populate localEpGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderLocalEpGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderLocalEpGroupIDSelectorPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderLocalEpGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderPeerEpGroupIDRef:
    r"""
    Reference to a EndpointGroupV2 in vpnaas to populate peerEpGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderPeerEpGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderPeerEpGroupIDRefPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderPeerEpGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderPeerEpGroupIDSelector:
    r"""
    Selector for a EndpointGroupV2 in vpnaas to populate peerEpGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderPeerEpGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderPeerEpGroupIDSelectorPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderPeerEpGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderVpnserviceIDRef:
    r"""
    Reference to a ServiceV2 in vpnaas to populate vpnserviceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderVpnserviceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderVpnserviceIDRefPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderVpnserviceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderVpnserviceIDSelector:
    r"""
    Selector for a ServiceV2 in vpnaas to populate vpnserviceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderVpnserviceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderVpnserviceIDSelectorPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecForProviderVpnserviceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        The administrative state of the resource. Can either be up(true) or down(false).
        Changing this updates the administrative state of the existing connection.
    description : str, default is Undefined, optional
        The human-readable description for the connection.
        Changing this updates the description of the existing connection.
    dpd : [VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderDpdItems0], default is Undefined, optional
        A dictionary with dead peer detection (DPD) protocol controls.
    ikepolicyId : str, default is Undefined, optional
        The ID of the IKE policy. Changing this creates a new connection.
    ikepolicyIdRef : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIkepolicyIDRef, default is Undefined, optional
        ikepolicy Id ref
    ikepolicyIdSelector : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIkepolicyIDSelector, default is Undefined, optional
        ikepolicy Id selector
    initiator : str, default is Undefined, optional
        A valid value is response-only or bi-directional. Default is bi-directional.
    ipsecpolicyId : str, default is Undefined, optional
        The ID of the IPsec policy. Changing this creates a new connection.
    ipsecpolicyIdRef : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIpsecpolicyIDRef, default is Undefined, optional
        ipsecpolicy Id ref
    ipsecpolicyIdSelector : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIpsecpolicyIDSelector, default is Undefined, optional
        ipsecpolicy Id selector
    localEpGroupId : str, default is Undefined, optional
        The ID for the endpoint group that contains private subnets for the local side of the connection.
        You must specify this parameter with the peer_ep_group_id parameter unless
        in backward- compatible mode where peer_cidrs is provided with a subnet_id for the VPN service.
        Changing this updates the existing connection.
    localEpGroupIdRef : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderLocalEpGroupIDRef, default is Undefined, optional
        local ep group Id ref
    localEpGroupIdSelector : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderLocalEpGroupIDSelector, default is Undefined, optional
        local ep group Id selector
    localId : str, default is Undefined, optional
        An ID to be used instead of the external IP address for a virtual router used in traffic between instances on different networks in east-west traffic.
        Most often, local ID would be domain name, email address, etc.
        If this is not configured then the external IP address will be used as the ID.
    mtu : float, default is Undefined, optional
        The maximum transmission unit (MTU) value to address fragmentation.
        Minimum value is 68 for IPv4, and 1280 for IPv6.
    name : str, default is Undefined, optional
        The name of the connection. Changing this updates the name of
        the existing connection.
    peerAddress : str, default is Undefined, optional
        The peer gateway public IPv4 or IPv6 address or FQDN.
    peerCidrs : [str], default is Undefined, optional
        Unique list of valid peer private CIDRs in the form < net_address > / < prefix > .
    peerEpGroupId : str, default is Undefined, optional
        The ID for the endpoint group that contains private CIDRs in the form < net_address > / < prefix > for the peer side of the connection.
        You must specify this parameter with the local_ep_group_id parameter unless in backward-compatible mode
        where peer_cidrs is provided with a subnet_id for the VPN service.
    peerEpGroupIdRef : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderPeerEpGroupIDRef, default is Undefined, optional
        peer ep group Id ref
    peerEpGroupIdSelector : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderPeerEpGroupIDSelector, default is Undefined, optional
        peer ep group Id selector
    peerId : str, default is Undefined, optional
        The peer router identity for authentication. A valid value is an IPv4 address, IPv6 address, e-mail address, key ID, or FQDN.
        Typically, this value matches the peer_address value.
        Changing this updates the existing policy.
    psk : str, default is Undefined, optional
        The pre-shared key. A valid value is any string.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create an IPSec site connection. If omitted, the
        region argument of the provider is used. Changing this creates a new
        site connection.
    tenantId : str, default is Undefined, optional
        The owner of the connection. Required if admin wants to
        create a connection for another project. Changing this creates a new connection.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional options.
    vpnserviceId : str, default is Undefined, optional
        The ID of the VPN service. Changing this creates a new connection.
    vpnserviceIdRef : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderVpnserviceIDRef, default is Undefined, optional
        vpnservice Id ref
    vpnserviceIdSelector : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderVpnserviceIDSelector, default is Undefined, optional
        vpnservice Id selector
    """


    adminStateUp?: bool

    description?: str

    dpd?: [VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderDpdItems0]

    ikepolicyId?: str

    ikepolicyIdRef?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIkepolicyIDRef

    ikepolicyIdSelector?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIkepolicyIDSelector

    initiator?: str

    ipsecpolicyId?: str

    ipsecpolicyIdRef?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIpsecpolicyIDRef

    ipsecpolicyIdSelector?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIpsecpolicyIDSelector

    localEpGroupId?: str

    localEpGroupIdRef?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderLocalEpGroupIDRef

    localEpGroupIdSelector?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderLocalEpGroupIDSelector

    localId?: str

    mtu?: float

    name?: str

    peerAddress?: str

    peerCidrs?: [str]

    peerEpGroupId?: str

    peerEpGroupIdRef?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderPeerEpGroupIDRef

    peerEpGroupIdSelector?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderPeerEpGroupIDSelector

    peerId?: str

    psk?: str

    region?: str

    tenantId?: str

    valueSpecs?: {str:str}

    vpnserviceId?: str

    vpnserviceIdRef?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderVpnserviceIDRef

    vpnserviceIdSelector?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderVpnserviceIDSelector


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderDpdItems0:
    r"""
    vpnaas openstack crossplane io v1alpha1 site connection v2 spec init provider dpd items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        The dead peer detection (DPD) action.
        A valid value is clear, hold, restart, disabled, or restart-by-peer.
        Default value is hold.
    interval : float, default is Undefined, optional
        The dead peer detection (DPD) interval, in seconds.
        A valid value is a positive integer.
        Default is 30.
    timeout : float, default is Undefined, optional
        The dead peer detection (DPD) timeout in seconds.
        A valid value is a positive integer that is greater than the DPD interval value.
        Default is 120.
    """


    action?: str

    interval?: float

    timeout?: float


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIkepolicyIDRef:
    r"""
    Reference to a IkePolicyV2 in vpnaas to populate ikepolicyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIkepolicyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIkepolicyIDRefPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIkepolicyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIkepolicyIDSelector:
    r"""
    Selector for a IkePolicyV2 in vpnaas to populate ikepolicyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIkepolicyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIkepolicyIDSelectorPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIkepolicyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIpsecpolicyIDRef:
    r"""
    Reference to a IpsecPolicyV2 in vpnaas to populate ipsecpolicyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIpsecpolicyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIpsecpolicyIDRefPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIpsecpolicyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIpsecpolicyIDSelector:
    r"""
    Selector for a IpsecPolicyV2 in vpnaas to populate ipsecpolicyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIpsecpolicyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIpsecpolicyIDSelectorPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderIpsecpolicyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderLocalEpGroupIDRef:
    r"""
    Reference to a EndpointGroupV2 in vpnaas to populate localEpGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderLocalEpGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderLocalEpGroupIDRefPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderLocalEpGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderLocalEpGroupIDSelector:
    r"""
    Selector for a EndpointGroupV2 in vpnaas to populate localEpGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderLocalEpGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderLocalEpGroupIDSelectorPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderLocalEpGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderPeerEpGroupIDRef:
    r"""
    Reference to a EndpointGroupV2 in vpnaas to populate peerEpGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderPeerEpGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderPeerEpGroupIDRefPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderPeerEpGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderPeerEpGroupIDSelector:
    r"""
    Selector for a EndpointGroupV2 in vpnaas to populate peerEpGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderPeerEpGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderPeerEpGroupIDSelectorPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderPeerEpGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderVpnserviceIDRef:
    r"""
    Reference to a ServiceV2 in vpnaas to populate vpnserviceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderVpnserviceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderVpnserviceIDRefPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderVpnserviceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderVpnserviceIDSelector:
    r"""
    Selector for a ServiceV2 in vpnaas to populate vpnserviceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderVpnserviceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderVpnserviceIDSelectorPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecInitProviderVpnserviceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecProviderConfigRefPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecPublishConnectionDetailsToConfigRef

    metadata?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecPublishConnectionDetailsToMetadata

    name: str


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecPublishConnectionDetailsToConfigRefPolicy


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2Status:
    r"""
    SiteConnectionV2Status defines the observed state of SiteConnectionV2.

    Attributes
    ----------
    atProvider : VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2StatusAtProvider

    conditions?: [VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2StatusConditionsItems0]

    observedGeneration?: int


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2StatusAtProvider:
    r"""
    vpnaas openstack crossplane io v1alpha1 site connection v2 status at provider

    Attributes
    ----------
    adminStateUp : bool, default is Undefined, optional
        The administrative state of the resource. Can either be up(true) or down(false).
        Changing this updates the administrative state of the existing connection.
    description : str, default is Undefined, optional
        The human-readable description for the connection.
        Changing this updates the description of the existing connection.
    dpd : [VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2StatusAtProviderDpdItems0], default is Undefined, optional
        A dictionary with dead peer detection (DPD) protocol controls.
    id : str, default is Undefined, optional
        id
    ikepolicyId : str, default is Undefined, optional
        The ID of the IKE policy. Changing this creates a new connection.
    initiator : str, default is Undefined, optional
        A valid value is response-only or bi-directional. Default is bi-directional.
    ipsecpolicyId : str, default is Undefined, optional
        The ID of the IPsec policy. Changing this creates a new connection.
    localEpGroupId : str, default is Undefined, optional
        The ID for the endpoint group that contains private subnets for the local side of the connection.
        You must specify this parameter with the peer_ep_group_id parameter unless
        in backward- compatible mode where peer_cidrs is provided with a subnet_id for the VPN service.
        Changing this updates the existing connection.
    localId : str, default is Undefined, optional
        An ID to be used instead of the external IP address for a virtual router used in traffic between instances on different networks in east-west traffic.
        Most often, local ID would be domain name, email address, etc.
        If this is not configured then the external IP address will be used as the ID.
    mtu : float, default is Undefined, optional
        The maximum transmission unit (MTU) value to address fragmentation.
        Minimum value is 68 for IPv4, and 1280 for IPv6.
    name : str, default is Undefined, optional
        The name of the connection. Changing this updates the name of
        the existing connection.
    peerAddress : str, default is Undefined, optional
        The peer gateway public IPv4 or IPv6 address or FQDN.
    peerCidrs : [str], default is Undefined, optional
        Unique list of valid peer private CIDRs in the form < net_address > / < prefix > .
    peerEpGroupId : str, default is Undefined, optional
        The ID for the endpoint group that contains private CIDRs in the form < net_address > / < prefix > for the peer side of the connection.
        You must specify this parameter with the local_ep_group_id parameter unless in backward-compatible mode
        where peer_cidrs is provided with a subnet_id for the VPN service.
    peerId : str, default is Undefined, optional
        The peer router identity for authentication. A valid value is an IPv4 address, IPv6 address, e-mail address, key ID, or FQDN.
        Typically, this value matches the peer_address value.
        Changing this updates the existing policy.
    psk : str, default is Undefined, optional
        The pre-shared key. A valid value is any string.
    region : str, default is Undefined, optional
        The region in which to obtain the V2 Networking client.
        A Networking client is needed to create an IPSec site connection. If omitted, the
        region argument of the provider is used. Changing this creates a new
        site connection.
    tenantId : str, default is Undefined, optional
        The owner of the connection. Required if admin wants to
        create a connection for another project. Changing this creates a new connection.
    valueSpecs : {str:str}, default is Undefined, optional
        Map of additional options.
    vpnserviceId : str, default is Undefined, optional
        The ID of the VPN service. Changing this creates a new connection.
    """


    adminStateUp?: bool

    description?: str

    dpd?: [VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2StatusAtProviderDpdItems0]

    id?: str

    ikepolicyId?: str

    initiator?: str

    ipsecpolicyId?: str

    localEpGroupId?: str

    localId?: str

    mtu?: float

    name?: str

    peerAddress?: str

    peerCidrs?: [str]

    peerEpGroupId?: str

    peerId?: str

    psk?: str

    region?: str

    tenantId?: str

    valueSpecs?: {str:str}

    vpnserviceId?: str


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2StatusAtProviderDpdItems0:
    r"""
    vpnaas openstack crossplane io v1alpha1 site connection v2 status at provider dpd items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        The dead peer detection (DPD) action.
        A valid value is clear, hold, restart, disabled, or restart-by-peer.
        Default value is hold.
    interval : float, default is Undefined, optional
        The dead peer detection (DPD) interval, in seconds.
        A valid value is a positive integer.
        Default is 30.
    timeout : float, default is Undefined, optional
        The dead peer detection (DPD) timeout in seconds.
        A valid value is a positive integer that is greater than the DPD interval value.
        Default is 120.
    """


    action?: str

    interval?: float

    timeout?: float


schema VpnaasOpenstackCrossplaneIoV1alpha1SiteConnectionV2StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


