"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

{
    apiVersion = "apiextensions.k8s.io/v1"
    kind = "CustomResourceDefinition"
    metadata = {
        annotations = {
            "controller-gen.kubebuilder.io/version" = "v0.16.5"
        }
        name = "sharev2s.sharedfilesystem.openstack.crossplane.io"
    }
    spec = {
        group = "sharedfilesystem.openstack.crossplane.io"
        names = {
            categories = [
                "crossplane"
                "managed"
                "openstack"
            ]
            kind = "ShareV2"
            listKind = "ShareV2List"
            plural = "sharev2s"
            singular = "sharev2"
        }
        scope = "Cluster"
        versions = [
            {
                additionalPrinterColumns = [
                    {
                        jsonPath = ".status.conditions[?(@.type=='Synced')].status"
                        name = "SYNCED"
                        $type = "string"
                    }
                    {
                        jsonPath = ".status.conditions[?(@.type=='Ready')].status"
                        name = "READY"
                        $type = "string"
                    }
                    {
                        jsonPath = r""".metadata.annotations.crossplane\.io/external-name"""
                        name = "EXTERNAL-NAME"
                        $type = "string"
                    }
                    {
                        jsonPath = ".metadata.creationTimestamp"
                        name = "AGE"
                        $type = "date"
                    }
                ]
                name = "v1alpha1"
                $schema = {
                    openAPIV3Schema = {
                        description = "ShareV2 is the Schema for the ShareV2s API. Configure a Shared File System share."
                        properties = {
                            apiVersion = {
                                description = r"""APIVersion defines the versioned schema of this representation of an object.
Servers should convert recognized schemas to the latest internal value, and
may reject unrecognized values.
More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"""
                                $type = "string"
                            }
                            kind = {
                                description = r"""Kind is a string value representing the REST resource this object represents.
Servers may infer this from the endpoint the client submits requests to.
Cannot be updated.
In CamelCase.
More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"""
                                $type = "string"
                            }
                            metadata = {
                                $type = "object"
                            }
                            spec = {
                                description = "ShareV2Spec defines the desired state of ShareV2"
                                properties = {
                                    deletionPolicy = {
                                        default = "Delete"
                                        description = r"""DeletionPolicy specifies what will happen to the underlying external
when this managed resource is deleted - either "Delete" or "Orphan" the
external resource.
This field is planned to be deprecated in favor of the ManagementPolicies
field in a future release. Currently, both could be set independently and
non-default values would be honored if the feature flag is enabled.
See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223"""
                                        enum = [
                                            "Orphan"
                                            "Delete"
                                        ]
                                        $type = "string"
                                    }
                                    forProvider = {
                                        properties = {
                                            availabilityZone = {
                                                description = r"""The share availability zone. Changing this creates a
new share."""
                                                $type = "string"
                                            }
                                            description = {
                                                description = r"""The human-readable description for the share.
Changing this updates the description of the existing share."""
                                                $type = "string"
                                            }
                                            isPublic = {
                                                description = r"""The level of visibility for the share. Set to true to make
share public. Set to false to make it private. Default value is false. Changing this
updates the existing share."""
                                                $type = "boolean"
                                            }
                                            metadata = {
                                                additionalProperties = {
                                                    $type = "string"
                                                }
                                                description = r"""One or more metadata key and value pairs as a dictionary of
strings."""
                                                $type = "object"
                                                "x-kubernetes-map-type" = "granular"
                                            }
                                            name = {
                                                description = r"""The name of the share. Changing this updates the name
of the existing share."""
                                                $type = "string"
                                            }
                                            region = {
                                                description = r"""The region in which to obtain the V2 Shared File System
client. A Shared File System client is needed to create a share. Changing
this creates a new share."""
                                                $type = "string"
                                            }
                                            shareNetworkId = {
                                                description = r"""The UUID of a share network where the share server exists
or will be created. If share_network_id is not set and you provide a snapshot_id,
the share_network_id value from the snapshot is used. Changing this creates a new share."""
                                                $type = "string"
                                            }
                                            shareNetworkIdRef = {
                                                description = "Reference to a SharenetworkV2 in sharedfilesystem to populate shareNetworkId."
                                                properties = {
                                                    name = {
                                                        description = "Name of the referenced object."
                                                        $type = "string"
                                                    }
                                                    policy = {
                                                        description = "Policies for referencing."
                                                        properties = {
                                                            resolution = {
                                                                default = "Required"
                                                                description = r"""Resolution specifies whether resolution of this reference is required.
The default is 'Required', which means the reconcile will fail if the
reference cannot be resolved. 'Optional' means this reference will be
a no-op if it cannot be resolved."""
                                                                enum = [
                                                                    "Required"
                                                                    "Optional"
                                                                ]
                                                                $type = "string"
                                                            }
                                                            resolve = {
                                                                description = r"""Resolve specifies when this reference should be resolved. The default
is 'IfNotPresent', which will attempt to resolve the reference only when
the corresponding field is not present. Use 'Always' to resolve the
reference on every reconcile."""
                                                                enum = [
                                                                    "Always"
                                                                    "IfNotPresent"
                                                                ]
                                                                $type = "string"
                                                            }
                                                        }
                                                        $type = "object"
                                                    }
                                                }
                                                required = [
                                                    "name"
                                                ]
                                                $type = "object"
                                            }
                                            shareNetworkIdSelector = {
                                                description = "Selector for a SharenetworkV2 in sharedfilesystem to populate shareNetworkId."
                                                properties = {
                                                    matchControllerRef = {
                                                        description = r"""MatchControllerRef ensures an object with the same controller reference
as the selecting object is selected."""
                                                        $type = "boolean"
                                                    }
                                                    matchLabels = {
                                                        additionalProperties = {
                                                            $type = "string"
                                                        }
                                                        description = "MatchLabels ensures an object with matching labels is selected."
                                                        $type = "object"
                                                    }
                                                    policy = {
                                                        description = "Policies for selection."
                                                        properties = {
                                                            resolution = {
                                                                default = "Required"
                                                                description = r"""Resolution specifies whether resolution of this reference is required.
The default is 'Required', which means the reconcile will fail if the
reference cannot be resolved. 'Optional' means this reference will be
a no-op if it cannot be resolved."""
                                                                enum = [
                                                                    "Required"
                                                                    "Optional"
                                                                ]
                                                                $type = "string"
                                                            }
                                                            resolve = {
                                                                description = r"""Resolve specifies when this reference should be resolved. The default
is 'IfNotPresent', which will attempt to resolve the reference only when
the corresponding field is not present. Use 'Always' to resolve the
reference on every reconcile."""
                                                                enum = [
                                                                    "Always"
                                                                    "IfNotPresent"
                                                                ]
                                                                $type = "string"
                                                            }
                                                        }
                                                        $type = "object"
                                                    }
                                                }
                                                $type = "object"
                                            }
                                            shareProto = {
                                                description = r"""The share protocol - can either be NFS, CIFS,
CEPHFS, GLUSTERFS, HDFS or MAPRFS. Changing this creates a new share."""
                                                $type = "string"
                                            }
                                            shareType = {
                                                description = r"""The share type name. If you omit this parameter, the default
share type is used."""
                                                $type = "string"
                                            }
                                            size = {
                                                description = r"""The share size, in GBs. The requested share size cannot be greater
than the allowed GB quota. Changing this resizes the existing share."""
                                                $type = "number"
                                            }
                                            snapshotId = {
                                                description = r"""The UUID of the share's base snapshot. Changing this creates
a new share."""
                                                $type = "string"
                                            }
                                        }
                                        $type = "object"
                                    }
                                    initProvider = {
                                        description = r"""THIS IS A BETA FIELD. It will be honored
unless the Management Policies feature flag is disabled.
InitProvider holds the same fields as ForProvider, with the exception
of Identifier and other resource reference fields. The fields that are
in InitProvider are merged into ForProvider when the resource is created.
The same fields are also added to the terraform ignore_changes hook, to
avoid updating them after creation. This is useful for fields that are
required on creation, but we do not desire to update them after creation,
for example because of an external controller is managing them, like an
autoscaler."""
                                        properties = {
                                            availabilityZone = {
                                                description = r"""The share availability zone. Changing this creates a
new share."""
                                                $type = "string"
                                            }
                                            description = {
                                                description = r"""The human-readable description for the share.
Changing this updates the description of the existing share."""
                                                $type = "string"
                                            }
                                            isPublic = {
                                                description = r"""The level of visibility for the share. Set to true to make
share public. Set to false to make it private. Default value is false. Changing this
updates the existing share."""
                                                $type = "boolean"
                                            }
                                            metadata = {
                                                additionalProperties = {
                                                    $type = "string"
                                                }
                                                description = r"""One or more metadata key and value pairs as a dictionary of
strings."""
                                                $type = "object"
                                                "x-kubernetes-map-type" = "granular"
                                            }
                                            name = {
                                                description = r"""The name of the share. Changing this updates the name
of the existing share."""
                                                $type = "string"
                                            }
                                            region = {
                                                description = r"""The region in which to obtain the V2 Shared File System
client. A Shared File System client is needed to create a share. Changing
this creates a new share."""
                                                $type = "string"
                                            }
                                            shareNetworkId = {
                                                description = r"""The UUID of a share network where the share server exists
or will be created. If share_network_id is not set and you provide a snapshot_id,
the share_network_id value from the snapshot is used. Changing this creates a new share."""
                                                $type = "string"
                                            }
                                            shareNetworkIdRef = {
                                                description = "Reference to a SharenetworkV2 in sharedfilesystem to populate shareNetworkId."
                                                properties = {
                                                    name = {
                                                        description = "Name of the referenced object."
                                                        $type = "string"
                                                    }
                                                    policy = {
                                                        description = "Policies for referencing."
                                                        properties = {
                                                            resolution = {
                                                                default = "Required"
                                                                description = r"""Resolution specifies whether resolution of this reference is required.
The default is 'Required', which means the reconcile will fail if the
reference cannot be resolved. 'Optional' means this reference will be
a no-op if it cannot be resolved."""
                                                                enum = [
                                                                    "Required"
                                                                    "Optional"
                                                                ]
                                                                $type = "string"
                                                            }
                                                            resolve = {
                                                                description = r"""Resolve specifies when this reference should be resolved. The default
is 'IfNotPresent', which will attempt to resolve the reference only when
the corresponding field is not present. Use 'Always' to resolve the
reference on every reconcile."""
                                                                enum = [
                                                                    "Always"
                                                                    "IfNotPresent"
                                                                ]
                                                                $type = "string"
                                                            }
                                                        }
                                                        $type = "object"
                                                    }
                                                }
                                                required = [
                                                    "name"
                                                ]
                                                $type = "object"
                                            }
                                            shareNetworkIdSelector = {
                                                description = "Selector for a SharenetworkV2 in sharedfilesystem to populate shareNetworkId."
                                                properties = {
                                                    matchControllerRef = {
                                                        description = r"""MatchControllerRef ensures an object with the same controller reference
as the selecting object is selected."""
                                                        $type = "boolean"
                                                    }
                                                    matchLabels = {
                                                        additionalProperties = {
                                                            $type = "string"
                                                        }
                                                        description = "MatchLabels ensures an object with matching labels is selected."
                                                        $type = "object"
                                                    }
                                                    policy = {
                                                        description = "Policies for selection."
                                                        properties = {
                                                            resolution = {
                                                                default = "Required"
                                                                description = r"""Resolution specifies whether resolution of this reference is required.
The default is 'Required', which means the reconcile will fail if the
reference cannot be resolved. 'Optional' means this reference will be
a no-op if it cannot be resolved."""
                                                                enum = [
                                                                    "Required"
                                                                    "Optional"
                                                                ]
                                                                $type = "string"
                                                            }
                                                            resolve = {
                                                                description = r"""Resolve specifies when this reference should be resolved. The default
is 'IfNotPresent', which will attempt to resolve the reference only when
the corresponding field is not present. Use 'Always' to resolve the
reference on every reconcile."""
                                                                enum = [
                                                                    "Always"
                                                                    "IfNotPresent"
                                                                ]
                                                                $type = "string"
                                                            }
                                                        }
                                                        $type = "object"
                                                    }
                                                }
                                                $type = "object"
                                            }
                                            shareProto = {
                                                description = r"""The share protocol - can either be NFS, CIFS,
CEPHFS, GLUSTERFS, HDFS or MAPRFS. Changing this creates a new share."""
                                                $type = "string"
                                            }
                                            shareType = {
                                                description = r"""The share type name. If you omit this parameter, the default
share type is used."""
                                                $type = "string"
                                            }
                                            size = {
                                                description = r"""The share size, in GBs. The requested share size cannot be greater
than the allowed GB quota. Changing this resizes the existing share."""
                                                $type = "number"
                                            }
                                            snapshotId = {
                                                description = r"""The UUID of the share's base snapshot. Changing this creates
a new share."""
                                                $type = "string"
                                            }
                                        }
                                        $type = "object"
                                    }
                                    managementPolicies = {
                                        default = [
                                            "*"
                                        ]
                                        description = r"""THIS IS A BETA FIELD. It is on by default but can be opted out
through a Crossplane feature flag.
ManagementPolicies specify the array of actions Crossplane is allowed to
take on the managed and external resources.
This field is planned to replace the DeletionPolicy field in a future
release. Currently, both could be set independently and non-default
values would be honored if the feature flag is enabled. If both are
custom, the DeletionPolicy field will be ignored.
See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md"""
                                        items = {
                                            description = r"""A ManagementAction represents an action that the Crossplane controllers
can take on an external resource."""
                                            enum = [
                                                "Observe"
                                                "Create"
                                                "Update"
                                                "Delete"
                                                "LateInitialize"
                                                "*"
                                            ]
                                            $type = "string"
                                        }
                                        $type = "array"
                                    }
                                    providerConfigRef = {
                                        default = {
                                            name = "default"
                                        }
                                        description = r"""ProviderConfigReference specifies how the provider that will be used to
create, observe, update, and delete this managed resource should be
configured."""
                                        properties = {
                                            name = {
                                                description = "Name of the referenced object."
                                                $type = "string"
                                            }
                                            policy = {
                                                description = "Policies for referencing."
                                                properties = {
                                                    resolution = {
                                                        default = "Required"
                                                        description = r"""Resolution specifies whether resolution of this reference is required.
The default is 'Required', which means the reconcile will fail if the
reference cannot be resolved. 'Optional' means this reference will be
a no-op if it cannot be resolved."""
                                                        enum = [
                                                            "Required"
                                                            "Optional"
                                                        ]
                                                        $type = "string"
                                                    }
                                                    resolve = {
                                                        description = r"""Resolve specifies when this reference should be resolved. The default
is 'IfNotPresent', which will attempt to resolve the reference only when
the corresponding field is not present. Use 'Always' to resolve the
reference on every reconcile."""
                                                        enum = [
                                                            "Always"
                                                            "IfNotPresent"
                                                        ]
                                                        $type = "string"
                                                    }
                                                }
                                                $type = "object"
                                            }
                                        }
                                        required = [
                                            "name"
                                        ]
                                        $type = "object"
                                    }
                                    publishConnectionDetailsTo = {
                                        description = r"""PublishConnectionDetailsTo specifies the connection secret config which
contains a name, metadata and a reference to secret store config to
which any connection details for this managed resource should be written.
Connection details frequently include the endpoint, username,
and password required to connect to the managed resource."""
                                        properties = {
                                            configRef = {
                                                default = {
                                                    name = "default"
                                                }
                                                description = r"""SecretStoreConfigRef specifies which secret store config should be used
for this ConnectionSecret."""
                                                properties = {
                                                    name = {
                                                        description = "Name of the referenced object."
                                                        $type = "string"
                                                    }
                                                    policy = {
                                                        description = "Policies for referencing."
                                                        properties = {
                                                            resolution = {
                                                                default = "Required"
                                                                description = r"""Resolution specifies whether resolution of this reference is required.
The default is 'Required', which means the reconcile will fail if the
reference cannot be resolved. 'Optional' means this reference will be
a no-op if it cannot be resolved."""
                                                                enum = [
                                                                    "Required"
                                                                    "Optional"
                                                                ]
                                                                $type = "string"
                                                            }
                                                            resolve = {
                                                                description = r"""Resolve specifies when this reference should be resolved. The default
is 'IfNotPresent', which will attempt to resolve the reference only when
the corresponding field is not present. Use 'Always' to resolve the
reference on every reconcile."""
                                                                enum = [
                                                                    "Always"
                                                                    "IfNotPresent"
                                                                ]
                                                                $type = "string"
                                                            }
                                                        }
                                                        $type = "object"
                                                    }
                                                }
                                                required = [
                                                    "name"
                                                ]
                                                $type = "object"
                                            }
                                            metadata = {
                                                description = "Metadata is the metadata for connection secret."
                                                properties = {
                                                    annotations = {
                                                        additionalProperties = {
                                                            $type = "string"
                                                        }
                                                        description = r"""Annotations are the annotations to be added to connection secret.
- For Kubernetes secrets, this will be used as "metadata.annotations".
- It is up to Secret Store implementation for others store types."""
                                                        $type = "object"
                                                    }
                                                    labels = {
                                                        additionalProperties = {
                                                            $type = "string"
                                                        }
                                                        description = r"""Labels are the labels/tags to be added to connection secret.
- For Kubernetes secrets, this will be used as "metadata.labels".
- It is up to Secret Store implementation for others store types."""
                                                        $type = "object"
                                                    }
                                                    $type = {
                                                        description = r"""Type is the SecretType for the connection secret.
- Only valid for Kubernetes Secret Stores."""
                                                        $type = "string"
                                                    }
                                                }
                                                $type = "object"
                                            }
                                            name = {
                                                description = "Name is the name of the connection secret."
                                                $type = "string"
                                            }
                                        }
                                        required = [
                                            "name"
                                        ]
                                        $type = "object"
                                    }
                                    writeConnectionSecretToRef = {
                                        description = r"""WriteConnectionSecretToReference specifies the namespace and name of a
Secret to which any connection details for this managed resource should
be written. Connection details frequently include the endpoint, username,
and password required to connect to the managed resource.
This field is planned to be replaced in a future release in favor of
PublishConnectionDetailsTo. Currently, both could be set independently
and connection details would be published to both without affecting
each other."""
                                        properties = {
                                            name = {
                                                description = "Name of the secret."
                                                $type = "string"
                                            }
                                            namespace = {
                                                description = "Namespace of the secret."
                                                $type = "string"
                                            }
                                        }
                                        required = [
                                            "name"
                                            "namespace"
                                        ]
                                        $type = "object"
                                    }
                                }
                                required = [
                                    "forProvider"
                                ]
                                $type = "object"
                                "x-kubernetes-validations" = [
                                    {
                                        message = "spec.forProvider.name is a required parameter"
                                        $rule = "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))"
                                    }
                                    {
                                        message = "spec.forProvider.shareProto is a required parameter"
                                        $rule = "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.shareProto) || (has(self.initProvider) && has(self.initProvider.shareProto))"
                                    }
                                    {
                                        message = "spec.forProvider.size is a required parameter"
                                        $rule = "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.size) || (has(self.initProvider) && has(self.initProvider.size))"
                                    }
                                ]
                            }
                            status = {
                                description = "ShareV2Status defines the observed state of ShareV2."
                                properties = {
                                    atProvider = {
                                        properties = {
                                            allMetadata = {
                                                additionalProperties = {
                                                    $type = "string"
                                                }
                                                description = r"""The map of metadata, assigned on the share, which has been
explicitly and implicitly added."""
                                                $type = "object"
                                                "x-kubernetes-map-type" = "granular"
                                            }
                                            availabilityZone = {
                                                description = r"""The share availability zone. Changing this creates a
new share."""
                                                $type = "string"
                                            }
                                            description = {
                                                description = r"""The human-readable description for the share.
Changing this updates the description of the existing share."""
                                                $type = "string"
                                            }
                                            exportLocations = {
                                                description = r"""A list of export locations. For example, when a share server
has more than one network interface, it can have multiple export locations."""
                                                items = {
                                                    properties = {
                                                        path = {
                                                            $type = "string"
                                                        }
                                                        preferred = {
                                                            $type = "string"
                                                        }
                                                    }
                                                    $type = "object"
                                                }
                                                $type = "array"
                                            }
                                            hasReplicas = {
                                                description = "Indicates whether a share has replicas or not."
                                                $type = "boolean"
                                            }
                                            host = {
                                                description = "The share host name."
                                                $type = "string"
                                            }
                                            id = {
                                                description = "The unique ID for the Share."
                                                $type = "string"
                                            }
                                            isPublic = {
                                                description = r"""The level of visibility for the share. Set to true to make
share public. Set to false to make it private. Default value is false. Changing this
updates the existing share."""
                                                $type = "boolean"
                                            }
                                            metadata = {
                                                additionalProperties = {
                                                    $type = "string"
                                                }
                                                description = r"""One or more metadata key and value pairs as a dictionary of
strings."""
                                                $type = "object"
                                                "x-kubernetes-map-type" = "granular"
                                            }
                                            name = {
                                                description = r"""The name of the share. Changing this updates the name
of the existing share."""
                                                $type = "string"
                                            }
                                            projectId = {
                                                description = "The owner of the Share."
                                                $type = "string"
                                            }
                                            region = {
                                                description = r"""The region in which to obtain the V2 Shared File System
client. A Shared File System client is needed to create a share. Changing
this creates a new share."""
                                                $type = "string"
                                            }
                                            replicationType = {
                                                description = "The share replication type."
                                                $type = "string"
                                            }
                                            shareNetworkId = {
                                                description = r"""The UUID of a share network where the share server exists
or will be created. If share_network_id is not set and you provide a snapshot_id,
the share_network_id value from the snapshot is used. Changing this creates a new share."""
                                                $type = "string"
                                            }
                                            shareProto = {
                                                description = r"""The share protocol - can either be NFS, CIFS,
CEPHFS, GLUSTERFS, HDFS or MAPRFS. Changing this creates a new share."""
                                                $type = "string"
                                            }
                                            shareServerId = {
                                                description = "The UUID of the share server."
                                                $type = "string"
                                            }
                                            shareType = {
                                                description = r"""The share type name. If you omit this parameter, the default
share type is used."""
                                                $type = "string"
                                            }
                                            size = {
                                                description = r"""The share size, in GBs. The requested share size cannot be greater
than the allowed GB quota. Changing this resizes the existing share."""
                                                $type = "number"
                                            }
                                            snapshotId = {
                                                description = r"""The UUID of the share's base snapshot. Changing this creates
a new share."""
                                                $type = "string"
                                            }
                                        }
                                        $type = "object"
                                    }
                                    conditions = {
                                        description = "Conditions of the resource."
                                        items = {
                                            description = "A Condition that may apply to a resource."
                                            properties = {
                                                lastTransitionTime = {
                                                    description = r"""LastTransitionTime is the last time this condition transitioned from one
status to another."""
                                                    format = "date-time"
                                                    $type = "string"
                                                }
                                                message = {
                                                    description = r"""A Message containing details about this condition's last transition from
one status to another, if any."""
                                                    $type = "string"
                                                }
                                                observedGeneration = {
                                                    description = r"""ObservedGeneration represents the .metadata.generation that the condition was set based upon.
For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
with respect to the current state of the instance."""
                                                    format = "int64"
                                                    $type = "integer"
                                                }
                                                reason = {
                                                    description = "A Reason for this condition's last transition from one status to another."
                                                    $type = "string"
                                                }
                                                status = {
                                                    description = "Status of this condition; is it currently True, False, or Unknown?"
                                                    $type = "string"
                                                }
                                                $type = {
                                                    description = r"""Type of this condition. At most one of each condition type may apply to
a resource at any point in time."""
                                                    $type = "string"
                                                }
                                            }
                                            required = [
                                                "lastTransitionTime"
                                                "reason"
                                                "status"
                                                "type"
                                            ]
                                            $type = "object"
                                        }
                                        $type = "array"
                                        "x-kubernetes-list-map-keys" = [
                                            "type"
                                        ]
                                        "x-kubernetes-list-type" = "map"
                                    }
                                    observedGeneration = {
                                        description = r"""ObservedGeneration is the latest metadata.generation
which resulted in either a ready state, or stalled due to error
it can not recover from without human intervention."""
                                        format = "int64"
                                        $type = "integer"
                                    }
                                }
                                $type = "object"
                            }
                        }
                        required = [
                            "spec"
                        ]
                        $type = "object"
                    }
                }
                served = True
                storage = True
                subresources = {
                    status = {
                    }
                }
            }
        ]
    }
}
