"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema LinuxVirtualMachineScaleSet:
    r"""
    LinuxVirtualMachineScaleSet is the Schema for the LinuxVirtualMachineScaleSets API. Manages a Linux Virtual Machine Scale Set.

    Attributes
    ----------
    apiVersion : str, default is "compute.azure.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LinuxVirtualMachineScaleSet", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpec, default is Undefined, required
        spec
    status : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.azure.upbound.io/v1beta2" = "compute.azure.upbound.io/v1beta2"

    kind: "LinuxVirtualMachineScaleSet" = "LinuxVirtualMachineScaleSet"

    metadata?: v1.ObjectMeta

    spec: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpec

    status?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatus


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpec:
    r"""
    LinuxVirtualMachineScaleSetSpec defines the desired state of LinuxVirtualMachineScaleSet

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProvider

    initProvider?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecWriteConnectionSecretToRef


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProvider:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec for provider

    Attributes
    ----------
    additionalCapabilities : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAdditionalCapabilities, default is Undefined, optional
        additional capabilities
    adminPasswordSecretRef : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAdminPasswordSecretRef, default is Undefined, optional
        admin password secret ref
    adminSshKey : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAdminSSHKeyItems0], default is Undefined, optional
        One or more admin_ssh_key blocks as defined below.
    adminUsername : str, default is Undefined, optional
        The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
    automaticInstanceRepair : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAutomaticInstanceRepair, default is Undefined, optional
        automatic instance repair
    automaticOsUpgradePolicy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAutomaticOsUpgradePolicy, default is Undefined, optional
        automatic os upgrade policy
    bootDiagnostics : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderBootDiagnostics, default is Undefined, optional
        boot diagnostics
    capacityReservationGroupId : str, default is Undefined, optional
        Specifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.
    computerNamePrefix : str, default is Undefined, optional
        The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the name field. If the value of the name field is not a valid computer_name_prefix, then you must specify computer_name_prefix. Changing this forces a new resource to be created.
    customDataSecretRef : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderCustomDataSecretRef, default is Undefined, optional
        custom data secret ref
    dataDisk : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderDataDiskItems0], default is Undefined, optional
        One or more data_disk blocks as defined below.
    disablePasswordAuthentication : bool, default is Undefined, optional
        Should Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to true.
    doNotRunExtensionsOnOverprovisionedMachines : bool, default is Undefined, optional
        Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to false.
    edgeZone : str, default is Undefined, optional
        Specifies the Edge Zone within the Azure Region where this Linux Virtual Machine Scale Set should exist. Changing this forces a new Linux Virtual Machine Scale Set to be created.
    encryptionAtHostEnabled : bool, default is Undefined, optional
        Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
    evictionPolicy : str, default is Undefined, optional
        Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are Deallocate and Delete. Changing this forces a new resource to be created.
    extension : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderExtensionItems0], default is Undefined, optional
        One or more extension blocks as defined below
    extensionOperationsEnabled : bool, default is Undefined, optional
        Should extension operations be allowed on the Virtual Machine Scale Set? Possible values are true or false. Defaults to true. Changing this forces a new Linux Virtual Machine Scale Set to be created.
    extensionsTimeBudget : str, default is Undefined, optional
        Specifies the duration allocated for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to PT1H30M.
    galleryApplication : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderGalleryApplicationItems0], default is Undefined, optional
        One or more gallery_application blocks as defined below.
    galleryApplications : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderGalleryApplicationsItems0], default is Undefined, optional
        gallery applications
    healthProbeId : str, default is Undefined, optional
        The ID of a Load Balancer Probe which should be used to determine the health of an instance. This is Required and can only be specified when upgrade_mode is set to Automatic or Rolling.
    hostGroupId : str, default is Undefined, optional
        Specifies the ID of the dedicated host group that the virtual machine scale set resides in. Changing this forces a new resource to be created.
    identity : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderIdentity, default is Undefined, optional
        identity
    instances : float, default is Undefined, optional
        The number of Virtual Machines in the Scale Set. Defaults to 0.
    location : str, default is Undefined, optional
        The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
    maxBidPrice : float, default is Undefined, optional
        The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the eviction_policy. Defaults to -1, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.
    networkInterface : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0], default is Undefined, optional
        One or more network_interface blocks as defined below.
    osDisk : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderOsDisk, default is Undefined, optional
        os disk
    overprovision : bool, default is Undefined, optional
        Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to true.
    plan : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderPlan, default is Undefined, optional
        plan
    platformFaultDomainCount : float, default is Undefined, optional
        Specifies the number of fault domains that are used by this Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
    priority : str, default is Undefined, optional
        The Priority of this Virtual Machine Scale Set. Possible values are Regular and Spot. Defaults to Regular. Changing this value forces a new resource.
    provisionVmAgent : bool, default is Undefined, optional
        Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to true. Changing this value forces a new resource to be created.
    proximityPlacementGroupId : str, default is Undefined, optional
        The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
    resourceGroupName : str, default is Undefined, optional
        The name of the Resource Group in which the Linux Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
    resourceGroupNameRef : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderResourceGroupNameRef, default is Undefined, optional
        resource group name ref
    resourceGroupNameSelector : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderResourceGroupNameSelector, default is Undefined, optional
        resource group name selector
    rollingUpgradePolicy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderRollingUpgradePolicy, default is Undefined, optional
        rolling upgrade policy
    scaleIn : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderScaleIn, default is Undefined, optional
        scale in
    secret : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderSecretItems0], default is Undefined, optional
        One or more secret blocks as defined below.
    secureBootEnabled : bool, default is Undefined, optional
        Specifies whether secure boot should be enabled on the virtual machine. Changing this forces a new resource to be created.
    singlePlacementGroup : bool, default is Undefined, optional
        Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to true.
    sku : str, default is Undefined, optional
        The Virtual Machine SKU for the Scale Set, such as Standard_F2.
    sourceImageId : str, default is Undefined, optional
        The ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include Image ID, Shared Image ID, Shared Image Version ID, Community Gallery Image ID, Community Gallery Image Version ID, Shared Gallery Image ID and Shared Gallery Image Version ID.
    sourceImageReference : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderSourceImageReference, default is Undefined, optional
        source image reference
    spotRestore : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderSpotRestore, default is Undefined, optional
        spot restore
    tags : {str:str}, default is Undefined, optional
        A mapping of tags which should be assigned to this Virtual Machine Scale Set.
    terminateNotification : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderTerminateNotification, default is Undefined, optional
        terminate notification
    terminationNotification : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderTerminationNotification, default is Undefined, optional
        termination notification
    upgradeMode : str, default is Undefined, optional
        Specifies how Upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are Automatic, Manual and Rolling. Defaults to Manual. Changing this forces a new resource to be created.
    userData : str, default is Undefined, optional
        The Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.
    vtpmEnabled : bool, default is Undefined, optional
        Specifies whether vTPM should be enabled on the virtual machine. Changing this forces a new resource to be created.
    zoneBalance : bool, default is Undefined, optional
        Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to false. Changing this forces a new resource to be created.
    zones : [str], default is Undefined, optional
        Specifies a list of Availability Zones in which this Linux Virtual Machine Scale Set should be located. Changing this forces a new Linux Virtual Machine Scale Set to be created.
    """


    additionalCapabilities?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAdditionalCapabilities

    adminPasswordSecretRef?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAdminPasswordSecretRef

    adminSshKey?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAdminSSHKeyItems0]

    adminUsername?: str

    automaticInstanceRepair?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAutomaticInstanceRepair

    automaticOsUpgradePolicy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAutomaticOsUpgradePolicy

    bootDiagnostics?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderBootDiagnostics

    capacityReservationGroupId?: str

    computerNamePrefix?: str

    customDataSecretRef?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderCustomDataSecretRef

    dataDisk?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderDataDiskItems0]

    disablePasswordAuthentication?: bool

    doNotRunExtensionsOnOverprovisionedMachines?: bool

    edgeZone?: str

    encryptionAtHostEnabled?: bool

    evictionPolicy?: str

    extension?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderExtensionItems0]

    extensionOperationsEnabled?: bool

    extensionsTimeBudget?: str

    galleryApplication?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderGalleryApplicationItems0]

    galleryApplications?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderGalleryApplicationsItems0]

    healthProbeId?: str

    hostGroupId?: str

    identity?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderIdentity

    instances?: float

    location?: str

    maxBidPrice?: float

    networkInterface?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0]

    osDisk?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderOsDisk

    overprovision?: bool

    plan?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderPlan

    platformFaultDomainCount?: float

    priority?: str

    provisionVmAgent?: bool

    proximityPlacementGroupId?: str

    resourceGroupName?: str

    resourceGroupNameRef?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderResourceGroupNameRef

    resourceGroupNameSelector?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderResourceGroupNameSelector

    rollingUpgradePolicy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderRollingUpgradePolicy

    scaleIn?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderScaleIn

    secret?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderSecretItems0]

    secureBootEnabled?: bool

    singlePlacementGroup?: bool

    sku?: str

    sourceImageId?: str

    sourceImageReference?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderSourceImageReference

    spotRestore?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderSpotRestore

    tags?: {str:str}

    terminateNotification?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderTerminateNotification

    terminationNotification?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderTerminationNotification

    upgradeMode?: str

    userData?: str

    vtpmEnabled?: bool

    zoneBalance?: bool

    zones?: [str]


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAdditionalCapabilities:
    r"""
    An additional_capabilities block as defined below.

    Attributes
    ----------
    ultraSsdEnabled : bool, default is Undefined, optional
        Should the capacity to enable Data Disks of the UltraSSD_LRS storage account type be supported on this Virtual Machine Scale Set? Possible values are true or false. Defaults to false. Changing this forces a new resource to be created.
    """


    ultraSsdEnabled?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAdminPasswordSecretRef:
    r"""
    The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAdminSSHKeyItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec for provider admin SSH key items0

    Attributes
    ----------
    publicKey : str, default is Undefined, optional
        The Public Key which should be used for authentication, which needs to be at least 2048-bit and in ssh-rsa format.
    username : str, default is Undefined, optional
        The Username for which this Public SSH Key should be configured.
    """


    publicKey?: str

    username?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAutomaticInstanceRepair:
    r"""
    An automatic_instance_repair block as defined below. To enable the automatic instance repair, this Virtual Machine Scale Set must have a valid health_probe_id or an Application Health Extension.

    Attributes
    ----------
    action : str, default is Undefined, optional
        The repair action that will be used for repairing unhealthy virtual machines in the scale set. Possible values include Replace, Restart, Reimage.
    enabled : bool, default is Undefined, optional
        Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
    gracePeriod : str, default is Undefined, optional
        Amount of time for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. Possible values are between 10 and 90 minutes. The time duration should be specified in ISO 8601 format (e.g. PT10M to PT90M).
    """


    action?: str

    enabled?: bool

    gracePeriod?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderAutomaticOsUpgradePolicy:
    r"""
    An automatic_os_upgrade_policy block as defined below. This can only be specified when upgrade_mode is set to either Automatic or Rolling.

    Attributes
    ----------
    disableAutomaticRollback : bool, default is Undefined, optional
        Should automatic rollbacks be disabled?
    enableAutomaticOsUpgrade : bool, default is Undefined, optional
        Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available?
    """


    disableAutomaticRollback?: bool

    enableAutomaticOsUpgrade?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderBootDiagnostics:
    r"""
    A boot_diagnostics block as defined below.

    Attributes
    ----------
    storageAccountUri : str, default is Undefined, optional
        The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
    """


    storageAccountUri?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderCustomDataSecretRef:
    r"""
    The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderDataDiskItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec for provider data disk items0

    Attributes
    ----------
    caching : str, default is Undefined, optional
        The type of Caching which should be used for this Data Disk. Possible values are None, ReadOnly and ReadWrite.
    createOption : str, default is Undefined, optional
        The create option which should be used for this Data Disk. Possible values are Empty and FromImage. Defaults to Empty. (FromImage should only be used if the source image includes data disks).
    diskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used to encrypt this OS Disk. Conflicts with secure_vm_disk_encryption_set_id. Changing this forces a new resource to be created.
    diskSizeGb : float, default is Undefined, optional
        The size of the Data Disk which should be created.
    lun : float, default is Undefined, optional
        The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
    name : str, default is Undefined, optional
        The name of the Data Disk.
    storageAccountType : str, default is Undefined, optional
        The Type of Storage Account which should back this Data Disk. Possible values include Standard_LRS, StandardSSD_LRS, StandardSSD_ZRS, Premium_LRS, PremiumV2_LRS, Premium_ZRS and UltraSSD_LRS.
    ultraSsdDiskIopsReadWrite : float, default is Undefined, optional
        Specifies the Read-Write IOPS for this Data Disk. Only settable when storage_account_type is PremiumV2_LRS or UltraSSD_LRS.
    ultraSsdDiskMbpsReadWrite : float, default is Undefined, optional
        Specifies the bandwidth in MB per second for this Data Disk. Only settable when storage_account_type is PremiumV2_LRS or UltraSSD_LRS.
    writeAcceleratorEnabled : bool, default is Undefined, optional
        Should Write Accelerator be Enabled for this OS Disk? Defaults to false.
    """


    caching?: str

    createOption?: str

    diskEncryptionSetId?: str

    diskSizeGb?: float

    lun?: float

    name?: str

    storageAccountType?: str

    ultraSsdDiskIopsReadWrite?: float

    ultraSsdDiskMbpsReadWrite?: float

    writeAcceleratorEnabled?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderExtensionItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec for provider extension items0

    Attributes
    ----------
    autoUpgradeMinorVersion : bool, default is Undefined, optional
        Should the latest version of the Extension be used at Deployment Time, if one is available? This won't auto-update the extension on existing installation. Defaults to true.
    automaticUpgradeEnabled : bool, default is Undefined, optional
        Should the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
    forceUpdateTag : str, default is Undefined, optional
        A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn't changed.
    name : str, default is Undefined, optional
        The name for the Virtual Machine Scale Set Extension.
    protectedSettingsFromKeyVault : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderExtensionItems0ProtectedSettingsFromKeyVault, default is Undefined, optional
        protected settings from key vault
    protectedSettingsSecretRef : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderExtensionItems0ProtectedSettingsSecretRef, default is Undefined, optional
        protected settings secret ref
    provisionAfterExtensions : [str], default is Undefined, optional
        An ordered list of Extension names which this should be provisioned after.
    publisher : str, default is Undefined, optional
        Specifies the Publisher of the Extension.
    settings : str, default is Undefined, optional
        A JSON String which specifies Settings for the Extension.
    $type : str, default is Undefined, optional
        Specifies the Type of the Extension.
    typeHandlerVersion : str, default is Undefined, optional
        Specifies the version of the extension to use, available versions can be found using the Azure CLI.
    """


    autoUpgradeMinorVersion?: bool

    automaticUpgradeEnabled?: bool

    forceUpdateTag?: str

    name?: str

    protectedSettingsFromKeyVault?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderExtensionItems0ProtectedSettingsFromKeyVault

    protectedSettingsSecretRef?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderExtensionItems0ProtectedSettingsSecretRef

    provisionAfterExtensions?: [str]

    publisher?: str

    settings?: str

    $type?: str

    typeHandlerVersion?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderExtensionItems0ProtectedSettingsFromKeyVault:
    r"""
    A protected_settings_from_key_vault block as defined below.

    Attributes
    ----------
    secretUrl : str, default is Undefined, optional
        The URL to the Key Vault Secret which stores the protected settings.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault.
    """


    secretUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderExtensionItems0ProtectedSettingsSecretRef:
    r"""
    A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderGalleryApplicationItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec for provider gallery application items0

    Attributes
    ----------
    configurationBlobUri : str, default is Undefined, optional
        Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
    order : float, default is Undefined, optional
        Specifies the order in which the packages have to be installed. Possible values are between 0 and 2147483647. Defaults to 0. Changing this forces a new resource to be created.
    tag : str, default is Undefined, optional
        Specifies a passthrough value for more generic context. This field can be any valid string value. Changing this forces a new resource to be created.
    versionId : str, default is Undefined, optional
        Specifies the Gallery Application Version resource ID. Changing this forces a new resource to be created.
    """


    configurationBlobUri?: str

    order?: float

    tag?: str

    versionId?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderGalleryApplicationsItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec for provider gallery applications items0

    Attributes
    ----------
    configurationReferenceBlobUri : str, default is Undefined, optional
        configuration reference blob Uri
    order : float, default is Undefined, optional
        Specifies the order in which the packages have to be installed. Possible values are between 0 and 2147483647. Defaults to 0. Changing this forces a new resource to be created.
    packageReferenceId : str, default is Undefined, optional
        The ID of the Linux Virtual Machine Scale Set.
    tag : str, default is Undefined, optional
        The IP Tag associated with the Public IP, such as SQL or Storage. Changing this forces a new resource to be created.
    """


    configurationReferenceBlobUri?: str

    order?: float

    packageReferenceId?: str

    tag?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderIdentity:
    r"""
    An identity block as defined below.

    Attributes
    ----------
    identityIds : [str], default is Undefined, optional
        Specifies a list of User Assigned Managed Identity IDs to be assigned to this Linux Virtual Machine Scale Set.
    $type : str, default is Undefined, optional
        Specifies the type of Managed Service Identity that should be configured on this Linux Virtual Machine Scale Set. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
    """


    identityIds?: [str]

    $type?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec for provider network interface items0

    Attributes
    ----------
    dnsServers : [str], default is Undefined, optional
        A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
    enableAcceleratedNetworking : bool, default is Undefined, optional
        Does this Network Interface support Accelerated Networking? Defaults to false.
    enableIpForwarding : bool, default is Undefined, optional
        Does this Network Interface support IP Forwarding? Defaults to false.
    ipConfiguration : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0], default is Undefined, optional
        One or more ip_configuration blocks as defined above.
    name : str, default is Undefined, optional
        The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
    networkSecurityGroupId : str, default is Undefined, optional
        The ID of a Network Security Group which should be assigned to this Network Interface.
    primary : bool, default is Undefined, optional
        Is this the Primary IP Configuration?
    """


    dnsServers?: [str]

    enableAcceleratedNetworking?: bool

    enableIpForwarding?: bool

    ipConfiguration?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0]

    name?: str

    networkSecurityGroupId?: str

    primary?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec for provider network interface items0 IP configuration items0

    Attributes
    ----------
    applicationGatewayBackendAddressPoolIds : [str], default is Undefined, optional
        A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
    applicationSecurityGroupIds : [str], default is Undefined, optional
        A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
    loadBalancerBackendAddressPoolIds : [str], default is Undefined, optional
        A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
    loadBalancerInboundNatRulesIds : [str], default is Undefined, optional
        A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
    name : str, default is Undefined, optional
        The Name of the Public IP Address Configuration.
    primary : bool, default is Undefined, optional
        Is this the Primary IP Configuration?
    publicIpAddress : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0], default is Undefined, optional
        A public_ip_address block as defined below.
    subnetId : str, default is Undefined, optional
        The ID of the Subnet which this IP Configuration should be connected to.
    subnetIdRef : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDSelector, default is Undefined, optional
        subnet Id selector
    version : str, default is Undefined, optional
        Specifies the version of the image used to create the virtual machines.
    """


    applicationGatewayBackendAddressPoolIds?: [str]

    applicationSecurityGroupIds?: [str]

    loadBalancerBackendAddressPoolIds?: [str]

    loadBalancerInboundNatRulesIds?: [str]

    name?: str

    primary?: bool

    publicIpAddress?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0]

    subnetId?: str

    subnetIdRef?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDRef

    subnetIdSelector?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDSelector

    version?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec for provider network interface items0 IP configuration items0 public IP address items0

    Attributes
    ----------
    domainNameLabel : str, default is Undefined, optional
        The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
    idleTimeoutInMinutes : float, default is Undefined, optional
        The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range 4 to 32.
    ipTag : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0IPTagItems0], default is Undefined, optional
        One or more ip_tag blocks as defined above. Changing this forces a new resource to be created.
    name : str, default is Undefined, optional
        The Name of the Public IP Address Configuration.
    publicIpPrefixId : str, default is Undefined, optional
        The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
    version : str, default is Undefined, optional
        Specifies the version of the image used to create the virtual machines.
    """


    domainNameLabel?: str

    idleTimeoutInMinutes?: float

    ipTag?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0IPTagItems0]

    name?: str

    publicIpPrefixId?: str

    version?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0IPTagItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec for provider network interface items0 IP configuration items0 public IP address items0 IP tag items0

    Attributes
    ----------
    tag : str, default is Undefined, optional
        The IP Tag associated with the Public IP, such as SQL or Storage. Changing this forces a new resource to be created.
    $type : str, default is Undefined, optional
        The Type of IP Tag, such as FirstPartyUsage. Changing this forces a new resource to be created.
    """


    tag?: str

    $type?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDRef:
    r"""
    Reference to a Subnet in network to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDRefPolicy


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDSelector:
    r"""
    Selector for a Subnet in network to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDSelectorPolicy


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderOsDisk:
    r"""
    An os_disk block as defined below.

    Attributes
    ----------
    caching : str, default is Undefined, optional
        The Type of Caching which should be used for the Internal OS Disk. Possible values are None, ReadOnly and ReadWrite.
    diffDiskSettings : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderOsDiskDiffDiskSettings, default is Undefined, optional
        diff disk settings
    diskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used to encrypt this OS Disk. Conflicts with secure_vm_disk_encryption_set_id. Changing this forces a new resource to be created.
    diskSizeGb : float, default is Undefined, optional
        The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
    secureVmDiskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used to Encrypt the OS Disk when the Virtual Machine Scale Set is Confidential VMSS. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.
    securityEncryptionType : str, default is Undefined, optional
        Encryption Type when the Virtual Machine Scale Set is Confidential VMSS. Possible values are VMGuestStateOnly and DiskWithVMGuestState. Changing this forces a new resource to be created.
    storageAccountType : str, default is Undefined, optional
        The Type of Storage Account which should back this the Internal OS Disk. Possible values include Standard_LRS, StandardSSD_LRS, StandardSSD_ZRS, Premium_LRS and Premium_ZRS. Changing this forces a new resource to be created.
    writeAcceleratorEnabled : bool, default is Undefined, optional
        Should Write Accelerator be Enabled for this OS Disk? Defaults to false.
    """


    caching?: str

    diffDiskSettings?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderOsDiskDiffDiskSettings

    diskEncryptionSetId?: str

    diskSizeGb?: float

    secureVmDiskEncryptionSetId?: str

    securityEncryptionType?: str

    storageAccountType?: str

    writeAcceleratorEnabled?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderOsDiskDiffDiskSettings:
    r"""
    A diff_disk_settings block as defined above. Changing this forces a new resource to be created.

    Attributes
    ----------
    option : str, default is Undefined, optional
        Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is Local. Changing this forces a new resource to be created.
    placement : str, default is Undefined, optional
        Specifies where to store the Ephemeral Disk. Possible values are CacheDisk and ResourceDisk. Defaults to CacheDisk. Changing this forces a new resource to be created.
    """


    option?: str

    placement?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderPlan:
    r"""
    A plan block as defined below. Changing this forces a new resource to be created.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Specifies the name of the image from the marketplace. Changing this forces a new resource to be created.
    product : str, default is Undefined, optional
        Specifies the product of the image from the marketplace. Changing this forces a new resource to be created.
    publisher : str, default is Undefined, optional
        Specifies the publisher of the image. Changing this forces a new resource to be created.
    """


    name?: str

    product?: str

    publisher?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderResourceGroupNameRef:
    r"""
    Reference to a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderResourceGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderResourceGroupNameRefPolicy


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderResourceGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderResourceGroupNameSelector:
    r"""
    Selector for a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderResourceGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderResourceGroupNameSelectorPolicy


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderResourceGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderRollingUpgradePolicy:
    r"""
    A rolling_upgrade_policy block as defined below. This is Required and can only be specified when upgrade_mode is set to Automatic or Rolling. Changing this forces a new resource to be created.

    Attributes
    ----------
    crossZoneUpgradesEnabled : bool, default is Undefined, optional
        Should the Virtual Machine Scale Set ignore the Azure Zone boundaries when constructing upgrade batches? Possible values are true or false.
    maxBatchInstancePercent : float, default is Undefined, optional
        The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability.
    maxUnhealthyInstancePercent : float, default is Undefined, optional
        The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch.
    maxUnhealthyUpgradedInstancePercent : float, default is Undefined, optional
        The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts.
    maximumSurgeInstancesEnabled : bool, default is Undefined, optional
        Create new virtual machines to upgrade the scale set, rather than updating the existing virtual machines. Existing virtual machines will be deleted once the new virtual machines are created for each batch. Possible values are true or false.
    pauseTimeBetweenBatches : str, default is Undefined, optional
        The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format.
    prioritizeUnhealthyInstancesEnabled : bool, default is Undefined, optional
        Upgrade all unhealthy instances in a scale set before any healthy instances. Possible values are true or false.
    """


    crossZoneUpgradesEnabled?: bool

    maxBatchInstancePercent?: float

    maxUnhealthyInstancePercent?: float

    maxUnhealthyUpgradedInstancePercent?: float

    maximumSurgeInstancesEnabled?: bool

    pauseTimeBetweenBatches?: str

    prioritizeUnhealthyInstancesEnabled?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderScaleIn:
    r"""
    A scale_in block as defined below.

    Attributes
    ----------
    forceDeletionEnabled : bool, default is Undefined, optional
        Should the virtual machines chosen for removal be force deleted when the virtual machine scale set is being scaled-in? Possible values are true or false. Defaults to false.
    $rule : str, default is Undefined, optional
        The scale-in policy rule that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled in. Possible values for the scale-in policy rules are Default, NewestVM and OldestVM, defaults to Default. For more information about scale in policy, please refer to this doc.
    """


    forceDeletionEnabled?: bool

    $rule?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderSecretItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec for provider secret items0

    Attributes
    ----------
    certificate : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderSecretItems0CertificateItems0], default is Undefined, optional
        One or more certificate blocks as defined above.
    keyVaultId : str, default is Undefined, optional
        The ID of the Key Vault from which all Secrets should be sourced.
    """


    certificate?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderSecretItems0CertificateItems0]

    keyVaultId?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderSecretItems0CertificateItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec for provider secret items0 certificate items0

    Attributes
    ----------
    url : str, default is Undefined, optional
        The Secret URL of a Key Vault Certificate.
    """


    url?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderSourceImageReference:
    r"""
    A source_image_reference block as defined below.

    Attributes
    ----------
    offer : str, default is Undefined, optional
        Specifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.
    publisher : str, default is Undefined, optional
        Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.
    sku : str, default is Undefined, optional
        Specifies the SKU of the image used to create the virtual machines.
    version : str, default is Undefined, optional
        Specifies the version of the image used to create the virtual machines.
    """


    offer?: str

    publisher?: str

    sku?: str

    version?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderSpotRestore:
    r"""
    A spot_restore block as defined below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Should the Spot-Try-Restore feature be enabled? The Spot-Try-Restore feature will attempt to automatically restore the evicted Spot Virtual Machine Scale Set VM instances opportunistically based on capacity availability and pricing constraints. Possible values are true or false. Defaults to false. Changing this forces a new resource to be created.
    timeout : str, default is Undefined, optional
        The length of time that the Virtual Machine Scale Set should attempt to restore the Spot VM instances which have been evicted. The time duration should be between 15 minutes and 120 minutes (inclusive). The time duration should be specified in the ISO 8601 format. Defaults to PT1H. Changing this forces a new resource to be created.
    """


    enabled?: bool

    timeout?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderTerminateNotification:
    r"""
    A terminate_notification block as defined below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Should the terminate notification be enabled on this Virtual Machine Scale Set?
    timeout : str, default is Undefined, optional
        Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to PT5M.
    """


    enabled?: bool

    timeout?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecForProviderTerminationNotification:
    r"""
    A termination_notification block as defined below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Should the termination notification be enabled on this Virtual Machine Scale Set?
    timeout : str, default is Undefined, optional
        Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to PT5M.
    """


    enabled?: bool

    timeout?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    additionalCapabilities : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAdditionalCapabilities, default is Undefined, optional
        additional capabilities
    adminPasswordSecretRef : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAdminPasswordSecretRef, default is Undefined, optional
        admin password secret ref
    adminSshKey : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAdminSSHKeyItems0], default is Undefined, optional
        One or more admin_ssh_key blocks as defined below.
    adminUsername : str, default is Undefined, optional
        The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
    automaticInstanceRepair : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAutomaticInstanceRepair, default is Undefined, optional
        automatic instance repair
    automaticOsUpgradePolicy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAutomaticOsUpgradePolicy, default is Undefined, optional
        automatic os upgrade policy
    bootDiagnostics : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderBootDiagnostics, default is Undefined, optional
        boot diagnostics
    capacityReservationGroupId : str, default is Undefined, optional
        Specifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.
    computerNamePrefix : str, default is Undefined, optional
        The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the name field. If the value of the name field is not a valid computer_name_prefix, then you must specify computer_name_prefix. Changing this forces a new resource to be created.
    customDataSecretRef : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderCustomDataSecretRef, default is Undefined, optional
        custom data secret ref
    dataDisk : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderDataDiskItems0], default is Undefined, optional
        One or more data_disk blocks as defined below.
    disablePasswordAuthentication : bool, default is Undefined, optional
        Should Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to true.
    doNotRunExtensionsOnOverprovisionedMachines : bool, default is Undefined, optional
        Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to false.
    edgeZone : str, default is Undefined, optional
        Specifies the Edge Zone within the Azure Region where this Linux Virtual Machine Scale Set should exist. Changing this forces a new Linux Virtual Machine Scale Set to be created.
    encryptionAtHostEnabled : bool, default is Undefined, optional
        Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
    evictionPolicy : str, default is Undefined, optional
        Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are Deallocate and Delete. Changing this forces a new resource to be created.
    extension : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderExtensionItems0], default is Undefined, optional
        One or more extension blocks as defined below
    extensionOperationsEnabled : bool, default is Undefined, optional
        Should extension operations be allowed on the Virtual Machine Scale Set? Possible values are true or false. Defaults to true. Changing this forces a new Linux Virtual Machine Scale Set to be created.
    extensionsTimeBudget : str, default is Undefined, optional
        Specifies the duration allocated for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to PT1H30M.
    galleryApplication : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderGalleryApplicationItems0], default is Undefined, optional
        One or more gallery_application blocks as defined below.
    galleryApplications : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderGalleryApplicationsItems0], default is Undefined, optional
        gallery applications
    healthProbeId : str, default is Undefined, optional
        The ID of a Load Balancer Probe which should be used to determine the health of an instance. This is Required and can only be specified when upgrade_mode is set to Automatic or Rolling.
    hostGroupId : str, default is Undefined, optional
        Specifies the ID of the dedicated host group that the virtual machine scale set resides in. Changing this forces a new resource to be created.
    identity : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderIdentity, default is Undefined, optional
        identity
    instances : float, default is Undefined, optional
        The number of Virtual Machines in the Scale Set. Defaults to 0.
    location : str, default is Undefined, optional
        The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
    maxBidPrice : float, default is Undefined, optional
        The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the eviction_policy. Defaults to -1, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.
    networkInterface : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0], default is Undefined, optional
        One or more network_interface blocks as defined below.
    osDisk : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderOsDisk, default is Undefined, optional
        os disk
    overprovision : bool, default is Undefined, optional
        Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to true.
    plan : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderPlan, default is Undefined, optional
        plan
    platformFaultDomainCount : float, default is Undefined, optional
        Specifies the number of fault domains that are used by this Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
    priority : str, default is Undefined, optional
        The Priority of this Virtual Machine Scale Set. Possible values are Regular and Spot. Defaults to Regular. Changing this value forces a new resource.
    provisionVmAgent : bool, default is Undefined, optional
        Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to true. Changing this value forces a new resource to be created.
    proximityPlacementGroupId : str, default is Undefined, optional
        The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
    rollingUpgradePolicy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderRollingUpgradePolicy, default is Undefined, optional
        rolling upgrade policy
    scaleIn : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderScaleIn, default is Undefined, optional
        scale in
    secret : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderSecretItems0], default is Undefined, optional
        One or more secret blocks as defined below.
    secureBootEnabled : bool, default is Undefined, optional
        Specifies whether secure boot should be enabled on the virtual machine. Changing this forces a new resource to be created.
    singlePlacementGroup : bool, default is Undefined, optional
        Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to true.
    sku : str, default is Undefined, optional
        The Virtual Machine SKU for the Scale Set, such as Standard_F2.
    sourceImageId : str, default is Undefined, optional
        The ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include Image ID, Shared Image ID, Shared Image Version ID, Community Gallery Image ID, Community Gallery Image Version ID, Shared Gallery Image ID and Shared Gallery Image Version ID.
    sourceImageReference : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderSourceImageReference, default is Undefined, optional
        source image reference
    spotRestore : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderSpotRestore, default is Undefined, optional
        spot restore
    tags : {str:str}, default is Undefined, optional
        A mapping of tags which should be assigned to this Virtual Machine Scale Set.
    terminateNotification : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderTerminateNotification, default is Undefined, optional
        terminate notification
    terminationNotification : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderTerminationNotification, default is Undefined, optional
        termination notification
    upgradeMode : str, default is Undefined, optional
        Specifies how Upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are Automatic, Manual and Rolling. Defaults to Manual. Changing this forces a new resource to be created.
    userData : str, default is Undefined, optional
        The Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.
    vtpmEnabled : bool, default is Undefined, optional
        Specifies whether vTPM should be enabled on the virtual machine. Changing this forces a new resource to be created.
    zoneBalance : bool, default is Undefined, optional
        Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to false. Changing this forces a new resource to be created.
    zones : [str], default is Undefined, optional
        Specifies a list of Availability Zones in which this Linux Virtual Machine Scale Set should be located. Changing this forces a new Linux Virtual Machine Scale Set to be created.
    """


    additionalCapabilities?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAdditionalCapabilities

    adminPasswordSecretRef?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAdminPasswordSecretRef

    adminSshKey?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAdminSSHKeyItems0]

    adminUsername?: str

    automaticInstanceRepair?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAutomaticInstanceRepair

    automaticOsUpgradePolicy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAutomaticOsUpgradePolicy

    bootDiagnostics?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderBootDiagnostics

    capacityReservationGroupId?: str

    computerNamePrefix?: str

    customDataSecretRef?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderCustomDataSecretRef

    dataDisk?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderDataDiskItems0]

    disablePasswordAuthentication?: bool

    doNotRunExtensionsOnOverprovisionedMachines?: bool

    edgeZone?: str

    encryptionAtHostEnabled?: bool

    evictionPolicy?: str

    extension?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderExtensionItems0]

    extensionOperationsEnabled?: bool

    extensionsTimeBudget?: str

    galleryApplication?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderGalleryApplicationItems0]

    galleryApplications?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderGalleryApplicationsItems0]

    healthProbeId?: str

    hostGroupId?: str

    identity?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderIdentity

    instances?: float

    location?: str

    maxBidPrice?: float

    networkInterface?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0]

    osDisk?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderOsDisk

    overprovision?: bool

    plan?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderPlan

    platformFaultDomainCount?: float

    priority?: str

    provisionVmAgent?: bool

    proximityPlacementGroupId?: str

    rollingUpgradePolicy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderRollingUpgradePolicy

    scaleIn?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderScaleIn

    secret?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderSecretItems0]

    secureBootEnabled?: bool

    singlePlacementGroup?: bool

    sku?: str

    sourceImageId?: str

    sourceImageReference?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderSourceImageReference

    spotRestore?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderSpotRestore

    tags?: {str:str}

    terminateNotification?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderTerminateNotification

    terminationNotification?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderTerminationNotification

    upgradeMode?: str

    userData?: str

    vtpmEnabled?: bool

    zoneBalance?: bool

    zones?: [str]


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAdditionalCapabilities:
    r"""
    An additional_capabilities block as defined below.

    Attributes
    ----------
    ultraSsdEnabled : bool, default is Undefined, optional
        Should the capacity to enable Data Disks of the UltraSSD_LRS storage account type be supported on this Virtual Machine Scale Set? Possible values are true or false. Defaults to false. Changing this forces a new resource to be created.
    """


    ultraSsdEnabled?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAdminPasswordSecretRef:
    r"""
    The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAdminSSHKeyItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec init provider admin SSH key items0

    Attributes
    ----------
    publicKey : str, default is Undefined, optional
        The Public Key which should be used for authentication, which needs to be at least 2048-bit and in ssh-rsa format.
    username : str, default is Undefined, optional
        The Username for which this Public SSH Key should be configured.
    """


    publicKey?: str

    username?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAutomaticInstanceRepair:
    r"""
    An automatic_instance_repair block as defined below. To enable the automatic instance repair, this Virtual Machine Scale Set must have a valid health_probe_id or an Application Health Extension.

    Attributes
    ----------
    action : str, default is Undefined, optional
        The repair action that will be used for repairing unhealthy virtual machines in the scale set. Possible values include Replace, Restart, Reimage.
    enabled : bool, default is Undefined, optional
        Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
    gracePeriod : str, default is Undefined, optional
        Amount of time for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. Possible values are between 10 and 90 minutes. The time duration should be specified in ISO 8601 format (e.g. PT10M to PT90M).
    """


    action?: str

    enabled?: bool

    gracePeriod?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderAutomaticOsUpgradePolicy:
    r"""
    An automatic_os_upgrade_policy block as defined below. This can only be specified when upgrade_mode is set to either Automatic or Rolling.

    Attributes
    ----------
    disableAutomaticRollback : bool, default is Undefined, optional
        Should automatic rollbacks be disabled?
    enableAutomaticOsUpgrade : bool, default is Undefined, optional
        Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available?
    """


    disableAutomaticRollback?: bool

    enableAutomaticOsUpgrade?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderBootDiagnostics:
    r"""
    A boot_diagnostics block as defined below.

    Attributes
    ----------
    storageAccountUri : str, default is Undefined, optional
        The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
    """


    storageAccountUri?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderCustomDataSecretRef:
    r"""
    The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderDataDiskItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec init provider data disk items0

    Attributes
    ----------
    caching : str, default is Undefined, optional
        The type of Caching which should be used for this Data Disk. Possible values are None, ReadOnly and ReadWrite.
    createOption : str, default is Undefined, optional
        The create option which should be used for this Data Disk. Possible values are Empty and FromImage. Defaults to Empty. (FromImage should only be used if the source image includes data disks).
    diskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used to encrypt this OS Disk. Conflicts with secure_vm_disk_encryption_set_id. Changing this forces a new resource to be created.
    diskSizeGb : float, default is Undefined, optional
        The size of the Data Disk which should be created.
    lun : float, default is Undefined, optional
        The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
    name : str, default is Undefined, optional
        The name of the Data Disk.
    storageAccountType : str, default is Undefined, optional
        The Type of Storage Account which should back this Data Disk. Possible values include Standard_LRS, StandardSSD_LRS, StandardSSD_ZRS, Premium_LRS, PremiumV2_LRS, Premium_ZRS and UltraSSD_LRS.
    ultraSsdDiskIopsReadWrite : float, default is Undefined, optional
        Specifies the Read-Write IOPS for this Data Disk. Only settable when storage_account_type is PremiumV2_LRS or UltraSSD_LRS.
    ultraSsdDiskMbpsReadWrite : float, default is Undefined, optional
        Specifies the bandwidth in MB per second for this Data Disk. Only settable when storage_account_type is PremiumV2_LRS or UltraSSD_LRS.
    writeAcceleratorEnabled : bool, default is Undefined, optional
        Should Write Accelerator be Enabled for this OS Disk? Defaults to false.
    """


    caching?: str

    createOption?: str

    diskEncryptionSetId?: str

    diskSizeGb?: float

    lun?: float

    name?: str

    storageAccountType?: str

    ultraSsdDiskIopsReadWrite?: float

    ultraSsdDiskMbpsReadWrite?: float

    writeAcceleratorEnabled?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderExtensionItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec init provider extension items0

    Attributes
    ----------
    autoUpgradeMinorVersion : bool, default is Undefined, optional
        Should the latest version of the Extension be used at Deployment Time, if one is available? This won't auto-update the extension on existing installation. Defaults to true.
    automaticUpgradeEnabled : bool, default is Undefined, optional
        Should the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
    forceUpdateTag : str, default is Undefined, optional
        A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn't changed.
    name : str, default is Undefined, optional
        The name for the Virtual Machine Scale Set Extension.
    protectedSettingsFromKeyVault : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderExtensionItems0ProtectedSettingsFromKeyVault, default is Undefined, optional
        protected settings from key vault
    protectedSettingsSecretRef : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderExtensionItems0ProtectedSettingsSecretRef, default is Undefined, optional
        protected settings secret ref
    provisionAfterExtensions : [str], default is Undefined, optional
        An ordered list of Extension names which this should be provisioned after.
    publisher : str, default is Undefined, optional
        Specifies the Publisher of the Extension.
    settings : str, default is Undefined, optional
        A JSON String which specifies Settings for the Extension.
    $type : str, default is Undefined, optional
        Specifies the Type of the Extension.
    typeHandlerVersion : str, default is Undefined, optional
        Specifies the version of the extension to use, available versions can be found using the Azure CLI.
    """


    autoUpgradeMinorVersion?: bool

    automaticUpgradeEnabled?: bool

    forceUpdateTag?: str

    name?: str

    protectedSettingsFromKeyVault?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderExtensionItems0ProtectedSettingsFromKeyVault

    protectedSettingsSecretRef?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderExtensionItems0ProtectedSettingsSecretRef

    provisionAfterExtensions?: [str]

    publisher?: str

    settings?: str

    $type?: str

    typeHandlerVersion?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderExtensionItems0ProtectedSettingsFromKeyVault:
    r"""
    A protected_settings_from_key_vault block as defined below.

    Attributes
    ----------
    secretUrl : str, default is Undefined, optional
        The URL to the Key Vault Secret which stores the protected settings.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault.
    """


    secretUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderExtensionItems0ProtectedSettingsSecretRef:
    r"""
    A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderGalleryApplicationItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec init provider gallery application items0

    Attributes
    ----------
    configurationBlobUri : str, default is Undefined, optional
        Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
    order : float, default is Undefined, optional
        Specifies the order in which the packages have to be installed. Possible values are between 0 and 2147483647. Defaults to 0. Changing this forces a new resource to be created.
    tag : str, default is Undefined, optional
        Specifies a passthrough value for more generic context. This field can be any valid string value. Changing this forces a new resource to be created.
    versionId : str, default is Undefined, optional
        Specifies the Gallery Application Version resource ID. Changing this forces a new resource to be created.
    """


    configurationBlobUri?: str

    order?: float

    tag?: str

    versionId?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderGalleryApplicationsItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec init provider gallery applications items0

    Attributes
    ----------
    configurationReferenceBlobUri : str, default is Undefined, optional
        configuration reference blob Uri
    order : float, default is Undefined, optional
        Specifies the order in which the packages have to be installed. Possible values are between 0 and 2147483647. Defaults to 0. Changing this forces a new resource to be created.
    packageReferenceId : str, default is Undefined, optional
        The ID of the Linux Virtual Machine Scale Set.
    tag : str, default is Undefined, optional
        The IP Tag associated with the Public IP, such as SQL or Storage. Changing this forces a new resource to be created.
    """


    configurationReferenceBlobUri?: str

    order?: float

    packageReferenceId?: str

    tag?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderIdentity:
    r"""
    An identity block as defined below.

    Attributes
    ----------
    identityIds : [str], default is Undefined, optional
        Specifies a list of User Assigned Managed Identity IDs to be assigned to this Linux Virtual Machine Scale Set.
    $type : str, default is Undefined, optional
        Specifies the type of Managed Service Identity that should be configured on this Linux Virtual Machine Scale Set. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
    """


    identityIds?: [str]

    $type?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec init provider network interface items0

    Attributes
    ----------
    dnsServers : [str], default is Undefined, optional
        A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
    enableAcceleratedNetworking : bool, default is Undefined, optional
        Does this Network Interface support Accelerated Networking? Defaults to false.
    enableIpForwarding : bool, default is Undefined, optional
        Does this Network Interface support IP Forwarding? Defaults to false.
    ipConfiguration : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0], default is Undefined, optional
        One or more ip_configuration blocks as defined above.
    name : str, default is Undefined, optional
        The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
    networkSecurityGroupId : str, default is Undefined, optional
        The ID of a Network Security Group which should be assigned to this Network Interface.
    primary : bool, default is Undefined, optional
        Is this the Primary IP Configuration?
    """


    dnsServers?: [str]

    enableAcceleratedNetworking?: bool

    enableIpForwarding?: bool

    ipConfiguration?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0]

    name?: str

    networkSecurityGroupId?: str

    primary?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec init provider network interface items0 IP configuration items0

    Attributes
    ----------
    applicationGatewayBackendAddressPoolIds : [str], default is Undefined, optional
        A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
    applicationSecurityGroupIds : [str], default is Undefined, optional
        A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
    loadBalancerBackendAddressPoolIds : [str], default is Undefined, optional
        A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
    loadBalancerInboundNatRulesIds : [str], default is Undefined, optional
        A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
    name : str, default is Undefined, optional
        The Name of the Public IP Address Configuration.
    primary : bool, default is Undefined, optional
        Is this the Primary IP Configuration?
    publicIpAddress : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0], default is Undefined, optional
        A public_ip_address block as defined below.
    subnetId : str, default is Undefined, optional
        The ID of the Subnet which this IP Configuration should be connected to.
    subnetIdRef : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDSelector, default is Undefined, optional
        subnet Id selector
    version : str, default is Undefined, optional
        Specifies the version of the image used to create the virtual machines.
    """


    applicationGatewayBackendAddressPoolIds?: [str]

    applicationSecurityGroupIds?: [str]

    loadBalancerBackendAddressPoolIds?: [str]

    loadBalancerInboundNatRulesIds?: [str]

    name?: str

    primary?: bool

    publicIpAddress?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0]

    subnetId?: str

    subnetIdRef?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDRef

    subnetIdSelector?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDSelector

    version?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec init provider network interface items0 IP configuration items0 public IP address items0

    Attributes
    ----------
    domainNameLabel : str, default is Undefined, optional
        The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
    idleTimeoutInMinutes : float, default is Undefined, optional
        The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range 4 to 32.
    ipTag : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0IPTagItems0], default is Undefined, optional
        One or more ip_tag blocks as defined above. Changing this forces a new resource to be created.
    name : str, default is Undefined, optional
        The Name of the Public IP Address Configuration.
    publicIpPrefixId : str, default is Undefined, optional
        The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
    version : str, default is Undefined, optional
        Specifies the version of the image used to create the virtual machines.
    """


    domainNameLabel?: str

    idleTimeoutInMinutes?: float

    ipTag?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0IPTagItems0]

    name?: str

    publicIpPrefixId?: str

    version?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0IPTagItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec init provider network interface items0 IP configuration items0 public IP address items0 IP tag items0

    Attributes
    ----------
    tag : str, default is Undefined, optional
        The IP Tag associated with the Public IP, such as SQL or Storage. Changing this forces a new resource to be created.
    $type : str, default is Undefined, optional
        The Type of IP Tag, such as FirstPartyUsage. Changing this forces a new resource to be created.
    """


    tag?: str

    $type?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDRef:
    r"""
    Reference to a Subnet in network to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDRefPolicy


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDSelector:
    r"""
    Selector for a Subnet in network to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDSelectorPolicy


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderNetworkInterfaceItems0IPConfigurationItems0SubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderOsDisk:
    r"""
    An os_disk block as defined below.

    Attributes
    ----------
    caching : str, default is Undefined, optional
        The Type of Caching which should be used for the Internal OS Disk. Possible values are None, ReadOnly and ReadWrite.
    diffDiskSettings : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderOsDiskDiffDiskSettings, default is Undefined, optional
        diff disk settings
    diskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used to encrypt this OS Disk. Conflicts with secure_vm_disk_encryption_set_id. Changing this forces a new resource to be created.
    diskSizeGb : float, default is Undefined, optional
        The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
    secureVmDiskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used to Encrypt the OS Disk when the Virtual Machine Scale Set is Confidential VMSS. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.
    securityEncryptionType : str, default is Undefined, optional
        Encryption Type when the Virtual Machine Scale Set is Confidential VMSS. Possible values are VMGuestStateOnly and DiskWithVMGuestState. Changing this forces a new resource to be created.
    storageAccountType : str, default is Undefined, optional
        The Type of Storage Account which should back this the Internal OS Disk. Possible values include Standard_LRS, StandardSSD_LRS, StandardSSD_ZRS, Premium_LRS and Premium_ZRS. Changing this forces a new resource to be created.
    writeAcceleratorEnabled : bool, default is Undefined, optional
        Should Write Accelerator be Enabled for this OS Disk? Defaults to false.
    """


    caching?: str

    diffDiskSettings?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderOsDiskDiffDiskSettings

    diskEncryptionSetId?: str

    diskSizeGb?: float

    secureVmDiskEncryptionSetId?: str

    securityEncryptionType?: str

    storageAccountType?: str

    writeAcceleratorEnabled?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderOsDiskDiffDiskSettings:
    r"""
    A diff_disk_settings block as defined above. Changing this forces a new resource to be created.

    Attributes
    ----------
    option : str, default is Undefined, optional
        Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is Local. Changing this forces a new resource to be created.
    placement : str, default is Undefined, optional
        Specifies where to store the Ephemeral Disk. Possible values are CacheDisk and ResourceDisk. Defaults to CacheDisk. Changing this forces a new resource to be created.
    """


    option?: str

    placement?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderPlan:
    r"""
    A plan block as defined below. Changing this forces a new resource to be created.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Specifies the name of the image from the marketplace. Changing this forces a new resource to be created.
    product : str, default is Undefined, optional
        Specifies the product of the image from the marketplace. Changing this forces a new resource to be created.
    publisher : str, default is Undefined, optional
        Specifies the publisher of the image. Changing this forces a new resource to be created.
    """


    name?: str

    product?: str

    publisher?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderRollingUpgradePolicy:
    r"""
    A rolling_upgrade_policy block as defined below. This is Required and can only be specified when upgrade_mode is set to Automatic or Rolling. Changing this forces a new resource to be created.

    Attributes
    ----------
    crossZoneUpgradesEnabled : bool, default is Undefined, optional
        Should the Virtual Machine Scale Set ignore the Azure Zone boundaries when constructing upgrade batches? Possible values are true or false.
    maxBatchInstancePercent : float, default is Undefined, optional
        The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability.
    maxUnhealthyInstancePercent : float, default is Undefined, optional
        The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch.
    maxUnhealthyUpgradedInstancePercent : float, default is Undefined, optional
        The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts.
    maximumSurgeInstancesEnabled : bool, default is Undefined, optional
        Create new virtual machines to upgrade the scale set, rather than updating the existing virtual machines. Existing virtual machines will be deleted once the new virtual machines are created for each batch. Possible values are true or false.
    pauseTimeBetweenBatches : str, default is Undefined, optional
        The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format.
    prioritizeUnhealthyInstancesEnabled : bool, default is Undefined, optional
        Upgrade all unhealthy instances in a scale set before any healthy instances. Possible values are true or false.
    """


    crossZoneUpgradesEnabled?: bool

    maxBatchInstancePercent?: float

    maxUnhealthyInstancePercent?: float

    maxUnhealthyUpgradedInstancePercent?: float

    maximumSurgeInstancesEnabled?: bool

    pauseTimeBetweenBatches?: str

    prioritizeUnhealthyInstancesEnabled?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderScaleIn:
    r"""
    A scale_in block as defined below.

    Attributes
    ----------
    forceDeletionEnabled : bool, default is Undefined, optional
        Should the virtual machines chosen for removal be force deleted when the virtual machine scale set is being scaled-in? Possible values are true or false. Defaults to false.
    $rule : str, default is Undefined, optional
        The scale-in policy rule that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled in. Possible values for the scale-in policy rules are Default, NewestVM and OldestVM, defaults to Default. For more information about scale in policy, please refer to this doc.
    """


    forceDeletionEnabled?: bool

    $rule?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderSecretItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec init provider secret items0

    Attributes
    ----------
    certificate : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderSecretItems0CertificateItems0], default is Undefined, optional
        One or more certificate blocks as defined above.
    keyVaultId : str, default is Undefined, optional
        The ID of the Key Vault from which all Secrets should be sourced.
    """


    certificate?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderSecretItems0CertificateItems0]

    keyVaultId?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderSecretItems0CertificateItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set spec init provider secret items0 certificate items0

    Attributes
    ----------
    url : str, default is Undefined, optional
        The Secret URL of a Key Vault Certificate.
    """


    url?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderSourceImageReference:
    r"""
    A source_image_reference block as defined below.

    Attributes
    ----------
    offer : str, default is Undefined, optional
        Specifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.
    publisher : str, default is Undefined, optional
        Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.
    sku : str, default is Undefined, optional
        Specifies the SKU of the image used to create the virtual machines.
    version : str, default is Undefined, optional
        Specifies the version of the image used to create the virtual machines.
    """


    offer?: str

    publisher?: str

    sku?: str

    version?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderSpotRestore:
    r"""
    A spot_restore block as defined below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Should the Spot-Try-Restore feature be enabled? The Spot-Try-Restore feature will attempt to automatically restore the evicted Spot Virtual Machine Scale Set VM instances opportunistically based on capacity availability and pricing constraints. Possible values are true or false. Defaults to false. Changing this forces a new resource to be created.
    timeout : str, default is Undefined, optional
        The length of time that the Virtual Machine Scale Set should attempt to restore the Spot VM instances which have been evicted. The time duration should be between 15 minutes and 120 minutes (inclusive). The time duration should be specified in the ISO 8601 format. Defaults to PT1H. Changing this forces a new resource to be created.
    """


    enabled?: bool

    timeout?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderTerminateNotification:
    r"""
    A terminate_notification block as defined below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Should the terminate notification be enabled on this Virtual Machine Scale Set?
    timeout : str, default is Undefined, optional
        Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to PT5M.
    """


    enabled?: bool

    timeout?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecInitProviderTerminationNotification:
    r"""
    A termination_notification block as defined below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Should the termination notification be enabled on this Virtual Machine Scale Set?
    timeout : str, default is Undefined, optional
        Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to PT5M.
    """


    enabled?: bool

    timeout?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecProviderConfigRefPolicy


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatus:
    r"""
    LinuxVirtualMachineScaleSetStatus defines the observed state of LinuxVirtualMachineScaleSet.

    Attributes
    ----------
    atProvider : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProvider

    conditions?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusConditionsItems0]

    observedGeneration?: int


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProvider:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set status at provider

    Attributes
    ----------
    additionalCapabilities : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderAdditionalCapabilities, default is Undefined, optional
        additional capabilities
    adminSshKey : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderAdminSSHKeyItems0], default is Undefined, optional
        One or more admin_ssh_key blocks as defined below.
    adminUsername : str, default is Undefined, optional
        The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
    automaticInstanceRepair : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderAutomaticInstanceRepair, default is Undefined, optional
        automatic instance repair
    automaticOsUpgradePolicy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderAutomaticOsUpgradePolicy, default is Undefined, optional
        automatic os upgrade policy
    bootDiagnostics : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderBootDiagnostics, default is Undefined, optional
        boot diagnostics
    capacityReservationGroupId : str, default is Undefined, optional
        Specifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.
    computerNamePrefix : str, default is Undefined, optional
        The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the name field. If the value of the name field is not a valid computer_name_prefix, then you must specify computer_name_prefix. Changing this forces a new resource to be created.
    dataDisk : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderDataDiskItems0], default is Undefined, optional
        One or more data_disk blocks as defined below.
    disablePasswordAuthentication : bool, default is Undefined, optional
        Should Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to true.
    doNotRunExtensionsOnOverprovisionedMachines : bool, default is Undefined, optional
        Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to false.
    edgeZone : str, default is Undefined, optional
        Specifies the Edge Zone within the Azure Region where this Linux Virtual Machine Scale Set should exist. Changing this forces a new Linux Virtual Machine Scale Set to be created.
    encryptionAtHostEnabled : bool, default is Undefined, optional
        Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
    evictionPolicy : str, default is Undefined, optional
        Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are Deallocate and Delete. Changing this forces a new resource to be created.
    extension : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderExtensionItems0], default is Undefined, optional
        One or more extension blocks as defined below
    extensionOperationsEnabled : bool, default is Undefined, optional
        Should extension operations be allowed on the Virtual Machine Scale Set? Possible values are true or false. Defaults to true. Changing this forces a new Linux Virtual Machine Scale Set to be created.
    extensionsTimeBudget : str, default is Undefined, optional
        Specifies the duration allocated for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to PT1H30M.
    galleryApplication : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderGalleryApplicationItems0], default is Undefined, optional
        One or more gallery_application blocks as defined below.
    galleryApplications : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderGalleryApplicationsItems0], default is Undefined, optional
        gallery applications
    healthProbeId : str, default is Undefined, optional
        The ID of a Load Balancer Probe which should be used to determine the health of an instance. This is Required and can only be specified when upgrade_mode is set to Automatic or Rolling.
    hostGroupId : str, default is Undefined, optional
        Specifies the ID of the dedicated host group that the virtual machine scale set resides in. Changing this forces a new resource to be created.
    id : str, default is Undefined, optional
        The ID of the Linux Virtual Machine Scale Set.
    identity : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderIdentity, default is Undefined, optional
        identity
    instances : float, default is Undefined, optional
        The number of Virtual Machines in the Scale Set. Defaults to 0.
    location : str, default is Undefined, optional
        The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
    maxBidPrice : float, default is Undefined, optional
        The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the eviction_policy. Defaults to -1, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.
    networkInterface : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderNetworkInterfaceItems0], default is Undefined, optional
        One or more network_interface blocks as defined below.
    osDisk : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderOsDisk, default is Undefined, optional
        os disk
    overprovision : bool, default is Undefined, optional
        Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to true.
    plan : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderPlan, default is Undefined, optional
        plan
    platformFaultDomainCount : float, default is Undefined, optional
        Specifies the number of fault domains that are used by this Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
    priority : str, default is Undefined, optional
        The Priority of this Virtual Machine Scale Set. Possible values are Regular and Spot. Defaults to Regular. Changing this value forces a new resource.
    provisionVmAgent : bool, default is Undefined, optional
        Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to true. Changing this value forces a new resource to be created.
    proximityPlacementGroupId : str, default is Undefined, optional
        The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
    resourceGroupName : str, default is Undefined, optional
        The name of the Resource Group in which the Linux Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
    rollingUpgradePolicy : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderRollingUpgradePolicy, default is Undefined, optional
        rolling upgrade policy
    scaleIn : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderScaleIn, default is Undefined, optional
        scale in
    scaleInPolicy : str, default is Undefined, optional
        scale in policy
    secret : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderSecretItems0], default is Undefined, optional
        One or more secret blocks as defined below.
    secureBootEnabled : bool, default is Undefined, optional
        Specifies whether secure boot should be enabled on the virtual machine. Changing this forces a new resource to be created.
    singlePlacementGroup : bool, default is Undefined, optional
        Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to true.
    sku : str, default is Undefined, optional
        The Virtual Machine SKU for the Scale Set, such as Standard_F2.
    sourceImageId : str, default is Undefined, optional
        The ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include Image ID, Shared Image ID, Shared Image Version ID, Community Gallery Image ID, Community Gallery Image Version ID, Shared Gallery Image ID and Shared Gallery Image Version ID.
    sourceImageReference : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderSourceImageReference, default is Undefined, optional
        source image reference
    spotRestore : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderSpotRestore, default is Undefined, optional
        spot restore
    tags : {str:str}, default is Undefined, optional
        A mapping of tags which should be assigned to this Virtual Machine Scale Set.
    terminateNotification : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderTerminateNotification, default is Undefined, optional
        terminate notification
    terminationNotification : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderTerminationNotification, default is Undefined, optional
        termination notification
    uniqueId : str, default is Undefined, optional
        The Unique ID for this Linux Virtual Machine Scale Set.
    upgradeMode : str, default is Undefined, optional
        Specifies how Upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are Automatic, Manual and Rolling. Defaults to Manual. Changing this forces a new resource to be created.
    userData : str, default is Undefined, optional
        The Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.
    vtpmEnabled : bool, default is Undefined, optional
        Specifies whether vTPM should be enabled on the virtual machine. Changing this forces a new resource to be created.
    zoneBalance : bool, default is Undefined, optional
        Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to false. Changing this forces a new resource to be created.
    zones : [str], default is Undefined, optional
        Specifies a list of Availability Zones in which this Linux Virtual Machine Scale Set should be located. Changing this forces a new Linux Virtual Machine Scale Set to be created.
    """


    additionalCapabilities?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderAdditionalCapabilities

    adminSshKey?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderAdminSSHKeyItems0]

    adminUsername?: str

    automaticInstanceRepair?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderAutomaticInstanceRepair

    automaticOsUpgradePolicy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderAutomaticOsUpgradePolicy

    bootDiagnostics?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderBootDiagnostics

    capacityReservationGroupId?: str

    computerNamePrefix?: str

    dataDisk?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderDataDiskItems0]

    disablePasswordAuthentication?: bool

    doNotRunExtensionsOnOverprovisionedMachines?: bool

    edgeZone?: str

    encryptionAtHostEnabled?: bool

    evictionPolicy?: str

    extension?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderExtensionItems0]

    extensionOperationsEnabled?: bool

    extensionsTimeBudget?: str

    galleryApplication?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderGalleryApplicationItems0]

    galleryApplications?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderGalleryApplicationsItems0]

    healthProbeId?: str

    hostGroupId?: str

    id?: str

    identity?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderIdentity

    instances?: float

    location?: str

    maxBidPrice?: float

    networkInterface?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderNetworkInterfaceItems0]

    osDisk?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderOsDisk

    overprovision?: bool

    plan?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderPlan

    platformFaultDomainCount?: float

    priority?: str

    provisionVmAgent?: bool

    proximityPlacementGroupId?: str

    resourceGroupName?: str

    rollingUpgradePolicy?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderRollingUpgradePolicy

    scaleIn?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderScaleIn

    scaleInPolicy?: str

    secret?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderSecretItems0]

    secureBootEnabled?: bool

    singlePlacementGroup?: bool

    sku?: str

    sourceImageId?: str

    sourceImageReference?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderSourceImageReference

    spotRestore?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderSpotRestore

    tags?: {str:str}

    terminateNotification?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderTerminateNotification

    terminationNotification?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderTerminationNotification

    uniqueId?: str

    upgradeMode?: str

    userData?: str

    vtpmEnabled?: bool

    zoneBalance?: bool

    zones?: [str]


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderAdditionalCapabilities:
    r"""
    An additional_capabilities block as defined below.

    Attributes
    ----------
    ultraSsdEnabled : bool, default is Undefined, optional
        Should the capacity to enable Data Disks of the UltraSSD_LRS storage account type be supported on this Virtual Machine Scale Set? Possible values are true or false. Defaults to false. Changing this forces a new resource to be created.
    """


    ultraSsdEnabled?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderAdminSSHKeyItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set status at provider admin SSH key items0

    Attributes
    ----------
    publicKey : str, default is Undefined, optional
        The Public Key which should be used for authentication, which needs to be at least 2048-bit and in ssh-rsa format.
    username : str, default is Undefined, optional
        The Username for which this Public SSH Key should be configured.
    """


    publicKey?: str

    username?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderAutomaticInstanceRepair:
    r"""
    An automatic_instance_repair block as defined below. To enable the automatic instance repair, this Virtual Machine Scale Set must have a valid health_probe_id or an Application Health Extension.

    Attributes
    ----------
    action : str, default is Undefined, optional
        The repair action that will be used for repairing unhealthy virtual machines in the scale set. Possible values include Replace, Restart, Reimage.
    enabled : bool, default is Undefined, optional
        Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
    gracePeriod : str, default is Undefined, optional
        Amount of time for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. Possible values are between 10 and 90 minutes. The time duration should be specified in ISO 8601 format (e.g. PT10M to PT90M).
    """


    action?: str

    enabled?: bool

    gracePeriod?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderAutomaticOsUpgradePolicy:
    r"""
    An automatic_os_upgrade_policy block as defined below. This can only be specified when upgrade_mode is set to either Automatic or Rolling.

    Attributes
    ----------
    disableAutomaticRollback : bool, default is Undefined, optional
        Should automatic rollbacks be disabled?
    enableAutomaticOsUpgrade : bool, default is Undefined, optional
        Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available?
    """


    disableAutomaticRollback?: bool

    enableAutomaticOsUpgrade?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderBootDiagnostics:
    r"""
    A boot_diagnostics block as defined below.

    Attributes
    ----------
    storageAccountUri : str, default is Undefined, optional
        The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
    """


    storageAccountUri?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderDataDiskItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set status at provider data disk items0

    Attributes
    ----------
    caching : str, default is Undefined, optional
        The type of Caching which should be used for this Data Disk. Possible values are None, ReadOnly and ReadWrite.
    createOption : str, default is Undefined, optional
        The create option which should be used for this Data Disk. Possible values are Empty and FromImage. Defaults to Empty. (FromImage should only be used if the source image includes data disks).
    diskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used to encrypt this OS Disk. Conflicts with secure_vm_disk_encryption_set_id. Changing this forces a new resource to be created.
    diskSizeGb : float, default is Undefined, optional
        The size of the Data Disk which should be created.
    lun : float, default is Undefined, optional
        The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
    name : str, default is Undefined, optional
        The name of the Data Disk.
    storageAccountType : str, default is Undefined, optional
        The Type of Storage Account which should back this Data Disk. Possible values include Standard_LRS, StandardSSD_LRS, StandardSSD_ZRS, Premium_LRS, PremiumV2_LRS, Premium_ZRS and UltraSSD_LRS.
    ultraSsdDiskIopsReadWrite : float, default is Undefined, optional
        Specifies the Read-Write IOPS for this Data Disk. Only settable when storage_account_type is PremiumV2_LRS or UltraSSD_LRS.
    ultraSsdDiskMbpsReadWrite : float, default is Undefined, optional
        Specifies the bandwidth in MB per second for this Data Disk. Only settable when storage_account_type is PremiumV2_LRS or UltraSSD_LRS.
    writeAcceleratorEnabled : bool, default is Undefined, optional
        Should Write Accelerator be Enabled for this OS Disk? Defaults to false.
    """


    caching?: str

    createOption?: str

    diskEncryptionSetId?: str

    diskSizeGb?: float

    lun?: float

    name?: str

    storageAccountType?: str

    ultraSsdDiskIopsReadWrite?: float

    ultraSsdDiskMbpsReadWrite?: float

    writeAcceleratorEnabled?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderExtensionItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set status at provider extension items0

    Attributes
    ----------
    autoUpgradeMinorVersion : bool, default is Undefined, optional
        Should the latest version of the Extension be used at Deployment Time, if one is available? This won't auto-update the extension on existing installation. Defaults to true.
    automaticUpgradeEnabled : bool, default is Undefined, optional
        Should the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
    forceUpdateTag : str, default is Undefined, optional
        A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn't changed.
    name : str, default is Undefined, optional
        The name for the Virtual Machine Scale Set Extension.
    protectedSettingsFromKeyVault : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderExtensionItems0ProtectedSettingsFromKeyVault, default is Undefined, optional
        protected settings from key vault
    provisionAfterExtensions : [str], default is Undefined, optional
        An ordered list of Extension names which this should be provisioned after.
    publisher : str, default is Undefined, optional
        Specifies the Publisher of the Extension.
    settings : str, default is Undefined, optional
        A JSON String which specifies Settings for the Extension.
    $type : str, default is Undefined, optional
        Specifies the Type of the Extension.
    typeHandlerVersion : str, default is Undefined, optional
        Specifies the version of the extension to use, available versions can be found using the Azure CLI.
    """


    autoUpgradeMinorVersion?: bool

    automaticUpgradeEnabled?: bool

    forceUpdateTag?: str

    name?: str

    protectedSettingsFromKeyVault?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderExtensionItems0ProtectedSettingsFromKeyVault

    provisionAfterExtensions?: [str]

    publisher?: str

    settings?: str

    $type?: str

    typeHandlerVersion?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderExtensionItems0ProtectedSettingsFromKeyVault:
    r"""
    A protected_settings_from_key_vault block as defined below.

    Attributes
    ----------
    secretUrl : str, default is Undefined, optional
        The URL to the Key Vault Secret which stores the protected settings.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault.
    """


    secretUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderGalleryApplicationItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set status at provider gallery application items0

    Attributes
    ----------
    configurationBlobUri : str, default is Undefined, optional
        Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
    order : float, default is Undefined, optional
        Specifies the order in which the packages have to be installed. Possible values are between 0 and 2147483647. Defaults to 0. Changing this forces a new resource to be created.
    tag : str, default is Undefined, optional
        Specifies a passthrough value for more generic context. This field can be any valid string value. Changing this forces a new resource to be created.
    versionId : str, default is Undefined, optional
        Specifies the Gallery Application Version resource ID. Changing this forces a new resource to be created.
    """


    configurationBlobUri?: str

    order?: float

    tag?: str

    versionId?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderGalleryApplicationsItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set status at provider gallery applications items0

    Attributes
    ----------
    configurationReferenceBlobUri : str, default is Undefined, optional
        configuration reference blob Uri
    order : float, default is Undefined, optional
        Specifies the order in which the packages have to be installed. Possible values are between 0 and 2147483647. Defaults to 0. Changing this forces a new resource to be created.
    packageReferenceId : str, default is Undefined, optional
        The ID of the Linux Virtual Machine Scale Set.
    tag : str, default is Undefined, optional
        The IP Tag associated with the Public IP, such as SQL or Storage. Changing this forces a new resource to be created.
    """


    configurationReferenceBlobUri?: str

    order?: float

    packageReferenceId?: str

    tag?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderIdentity:
    r"""
    An identity block as defined below.

    Attributes
    ----------
    identityIds : [str], default is Undefined, optional
        Specifies a list of User Assigned Managed Identity IDs to be assigned to this Linux Virtual Machine Scale Set.
    principalId : str, default is Undefined, optional
        The Principal ID associated with this Managed Service Identity.
    tenantId : str, default is Undefined, optional
        The Tenant ID associated with this Managed Service Identity.
    $type : str, default is Undefined, optional
        Specifies the type of Managed Service Identity that should be configured on this Linux Virtual Machine Scale Set. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
    """


    identityIds?: [str]

    principalId?: str

    tenantId?: str

    $type?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderNetworkInterfaceItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set status at provider network interface items0

    Attributes
    ----------
    dnsServers : [str], default is Undefined, optional
        A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
    enableAcceleratedNetworking : bool, default is Undefined, optional
        Does this Network Interface support Accelerated Networking? Defaults to false.
    enableIpForwarding : bool, default is Undefined, optional
        Does this Network Interface support IP Forwarding? Defaults to false.
    ipConfiguration : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderNetworkInterfaceItems0IPConfigurationItems0], default is Undefined, optional
        One or more ip_configuration blocks as defined above.
    name : str, default is Undefined, optional
        The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
    networkSecurityGroupId : str, default is Undefined, optional
        The ID of a Network Security Group which should be assigned to this Network Interface.
    primary : bool, default is Undefined, optional
        Is this the Primary IP Configuration?
    """


    dnsServers?: [str]

    enableAcceleratedNetworking?: bool

    enableIpForwarding?: bool

    ipConfiguration?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderNetworkInterfaceItems0IPConfigurationItems0]

    name?: str

    networkSecurityGroupId?: str

    primary?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderNetworkInterfaceItems0IPConfigurationItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set status at provider network interface items0 IP configuration items0

    Attributes
    ----------
    applicationGatewayBackendAddressPoolIds : [str], default is Undefined, optional
        A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
    applicationSecurityGroupIds : [str], default is Undefined, optional
        A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
    loadBalancerBackendAddressPoolIds : [str], default is Undefined, optional
        A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
    loadBalancerInboundNatRulesIds : [str], default is Undefined, optional
        A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
    name : str, default is Undefined, optional
        The Name of the Public IP Address Configuration.
    primary : bool, default is Undefined, optional
        Is this the Primary IP Configuration?
    publicIpAddress : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0], default is Undefined, optional
        A public_ip_address block as defined below.
    subnetId : str, default is Undefined, optional
        The ID of the Subnet which this IP Configuration should be connected to.
    version : str, default is Undefined, optional
        Specifies the version of the image used to create the virtual machines.
    """


    applicationGatewayBackendAddressPoolIds?: [str]

    applicationSecurityGroupIds?: [str]

    loadBalancerBackendAddressPoolIds?: [str]

    loadBalancerInboundNatRulesIds?: [str]

    name?: str

    primary?: bool

    publicIpAddress?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0]

    subnetId?: str

    version?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set status at provider network interface items0 IP configuration items0 public IP address items0

    Attributes
    ----------
    domainNameLabel : str, default is Undefined, optional
        The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
    idleTimeoutInMinutes : float, default is Undefined, optional
        The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range 4 to 32.
    ipTag : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0IPTagItems0], default is Undefined, optional
        One or more ip_tag blocks as defined above. Changing this forces a new resource to be created.
    name : str, default is Undefined, optional
        The Name of the Public IP Address Configuration.
    publicIpPrefixId : str, default is Undefined, optional
        The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
    version : str, default is Undefined, optional
        Specifies the version of the image used to create the virtual machines.
    """


    domainNameLabel?: str

    idleTimeoutInMinutes?: float

    ipTag?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0IPTagItems0]

    name?: str

    publicIpPrefixId?: str

    version?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderNetworkInterfaceItems0IPConfigurationItems0PublicIPAddressItems0IPTagItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set status at provider network interface items0 IP configuration items0 public IP address items0 IP tag items0

    Attributes
    ----------
    tag : str, default is Undefined, optional
        The IP Tag associated with the Public IP, such as SQL or Storage. Changing this forces a new resource to be created.
    $type : str, default is Undefined, optional
        The Type of IP Tag, such as FirstPartyUsage. Changing this forces a new resource to be created.
    """


    tag?: str

    $type?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderOsDisk:
    r"""
    An os_disk block as defined below.

    Attributes
    ----------
    caching : str, default is Undefined, optional
        The Type of Caching which should be used for the Internal OS Disk. Possible values are None, ReadOnly and ReadWrite.
    diffDiskSettings : ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderOsDiskDiffDiskSettings, default is Undefined, optional
        diff disk settings
    diskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used to encrypt this OS Disk. Conflicts with secure_vm_disk_encryption_set_id. Changing this forces a new resource to be created.
    diskSizeGb : float, default is Undefined, optional
        The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
    secureVmDiskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used to Encrypt the OS Disk when the Virtual Machine Scale Set is Confidential VMSS. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.
    securityEncryptionType : str, default is Undefined, optional
        Encryption Type when the Virtual Machine Scale Set is Confidential VMSS. Possible values are VMGuestStateOnly and DiskWithVMGuestState. Changing this forces a new resource to be created.
    storageAccountType : str, default is Undefined, optional
        The Type of Storage Account which should back this the Internal OS Disk. Possible values include Standard_LRS, StandardSSD_LRS, StandardSSD_ZRS, Premium_LRS and Premium_ZRS. Changing this forces a new resource to be created.
    writeAcceleratorEnabled : bool, default is Undefined, optional
        Should Write Accelerator be Enabled for this OS Disk? Defaults to false.
    """


    caching?: str

    diffDiskSettings?: ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderOsDiskDiffDiskSettings

    diskEncryptionSetId?: str

    diskSizeGb?: float

    secureVmDiskEncryptionSetId?: str

    securityEncryptionType?: str

    storageAccountType?: str

    writeAcceleratorEnabled?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderOsDiskDiffDiskSettings:
    r"""
    A diff_disk_settings block as defined above. Changing this forces a new resource to be created.

    Attributes
    ----------
    option : str, default is Undefined, optional
        Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is Local. Changing this forces a new resource to be created.
    placement : str, default is Undefined, optional
        Specifies where to store the Ephemeral Disk. Possible values are CacheDisk and ResourceDisk. Defaults to CacheDisk. Changing this forces a new resource to be created.
    """


    option?: str

    placement?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderPlan:
    r"""
    A plan block as defined below. Changing this forces a new resource to be created.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Specifies the name of the image from the marketplace. Changing this forces a new resource to be created.
    product : str, default is Undefined, optional
        Specifies the product of the image from the marketplace. Changing this forces a new resource to be created.
    publisher : str, default is Undefined, optional
        Specifies the publisher of the image. Changing this forces a new resource to be created.
    """


    name?: str

    product?: str

    publisher?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderRollingUpgradePolicy:
    r"""
    A rolling_upgrade_policy block as defined below. This is Required and can only be specified when upgrade_mode is set to Automatic or Rolling. Changing this forces a new resource to be created.

    Attributes
    ----------
    crossZoneUpgradesEnabled : bool, default is Undefined, optional
        Should the Virtual Machine Scale Set ignore the Azure Zone boundaries when constructing upgrade batches? Possible values are true or false.
    maxBatchInstancePercent : float, default is Undefined, optional
        The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability.
    maxUnhealthyInstancePercent : float, default is Undefined, optional
        The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch.
    maxUnhealthyUpgradedInstancePercent : float, default is Undefined, optional
        The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts.
    maximumSurgeInstancesEnabled : bool, default is Undefined, optional
        Create new virtual machines to upgrade the scale set, rather than updating the existing virtual machines. Existing virtual machines will be deleted once the new virtual machines are created for each batch. Possible values are true or false.
    pauseTimeBetweenBatches : str, default is Undefined, optional
        The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format.
    prioritizeUnhealthyInstancesEnabled : bool, default is Undefined, optional
        Upgrade all unhealthy instances in a scale set before any healthy instances. Possible values are true or false.
    """


    crossZoneUpgradesEnabled?: bool

    maxBatchInstancePercent?: float

    maxUnhealthyInstancePercent?: float

    maxUnhealthyUpgradedInstancePercent?: float

    maximumSurgeInstancesEnabled?: bool

    pauseTimeBetweenBatches?: str

    prioritizeUnhealthyInstancesEnabled?: bool


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderScaleIn:
    r"""
    A scale_in block as defined below.

    Attributes
    ----------
    forceDeletionEnabled : bool, default is Undefined, optional
        Should the virtual machines chosen for removal be force deleted when the virtual machine scale set is being scaled-in? Possible values are true or false. Defaults to false.
    $rule : str, default is Undefined, optional
        The scale-in policy rule that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled in. Possible values for the scale-in policy rules are Default, NewestVM and OldestVM, defaults to Default. For more information about scale in policy, please refer to this doc.
    """


    forceDeletionEnabled?: bool

    $rule?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderSecretItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set status at provider secret items0

    Attributes
    ----------
    certificate : [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderSecretItems0CertificateItems0], default is Undefined, optional
        One or more certificate blocks as defined above.
    keyVaultId : str, default is Undefined, optional
        The ID of the Key Vault from which all Secrets should be sourced.
    """


    certificate?: [ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderSecretItems0CertificateItems0]

    keyVaultId?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderSecretItems0CertificateItems0:
    r"""
    compute azure upbound io v1beta2 linux virtual machine scale set status at provider secret items0 certificate items0

    Attributes
    ----------
    url : str, default is Undefined, optional
        The Secret URL of a Key Vault Certificate.
    """


    url?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderSourceImageReference:
    r"""
    A source_image_reference block as defined below.

    Attributes
    ----------
    offer : str, default is Undefined, optional
        Specifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.
    publisher : str, default is Undefined, optional
        Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.
    sku : str, default is Undefined, optional
        Specifies the SKU of the image used to create the virtual machines.
    version : str, default is Undefined, optional
        Specifies the version of the image used to create the virtual machines.
    """


    offer?: str

    publisher?: str

    sku?: str

    version?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderSpotRestore:
    r"""
    A spot_restore block as defined below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Should the Spot-Try-Restore feature be enabled? The Spot-Try-Restore feature will attempt to automatically restore the evicted Spot Virtual Machine Scale Set VM instances opportunistically based on capacity availability and pricing constraints. Possible values are true or false. Defaults to false. Changing this forces a new resource to be created.
    timeout : str, default is Undefined, optional
        The length of time that the Virtual Machine Scale Set should attempt to restore the Spot VM instances which have been evicted. The time duration should be between 15 minutes and 120 minutes (inclusive). The time duration should be specified in the ISO 8601 format. Defaults to PT1H. Changing this forces a new resource to be created.
    """


    enabled?: bool

    timeout?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderTerminateNotification:
    r"""
    A terminate_notification block as defined below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Should the terminate notification be enabled on this Virtual Machine Scale Set?
    timeout : str, default is Undefined, optional
        Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to PT5M.
    """


    enabled?: bool

    timeout?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusAtProviderTerminationNotification:
    r"""
    A termination_notification block as defined below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Should the termination notification be enabled on this Virtual Machine Scale Set?
    timeout : str, default is Undefined, optional
        Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to PT5M.
    """


    enabled?: bool

    timeout?: str


schema ComputeAzureUpboundIoV1beta2LinuxVirtualMachineScaleSetStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


