"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ManagedDisk:
    r"""
    ManagedDisk is the Schema for the ManagedDisks API. Manages a Managed Disk.

    Attributes
    ----------
    apiVersion : str, default is "compute.azure.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ManagedDisk", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeAzureUpboundIoV1beta2ManagedDiskSpec, default is Undefined, required
        spec
    status : ComputeAzureUpboundIoV1beta2ManagedDiskStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.azure.upbound.io/v1beta2" = "compute.azure.upbound.io/v1beta2"

    kind: "ManagedDisk" = "ManagedDisk"

    metadata?: v1.ObjectMeta

    spec: ComputeAzureUpboundIoV1beta2ManagedDiskSpec

    status?: ComputeAzureUpboundIoV1beta2ManagedDiskStatus


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpec:
    r"""
    ManagedDiskSpec defines the desired state of ManagedDisk

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeAzureUpboundIoV1beta2ManagedDiskSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeAzureUpboundIoV1beta2ManagedDiskSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeAzureUpboundIoV1beta2ManagedDiskSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProvider

    initProvider?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecWriteConnectionSecretToRef


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProvider:
    r"""
    compute azure upbound io v1beta2 managed disk spec for provider

    Attributes
    ----------
    createOption : str, default is Undefined, optional
        The method to use when creating the managed disk. Changing this forces a new resource to be created. Possible values include: * Import - Import a VHD file in to the managed disk (VHD specified with source_uri). * ImportSecure - Securely import a VHD file in to the managed disk (VHD specified with source_uri). * Empty - Create an empty managed disk. * Copy - Copy an existing managed disk or snapshot (specified with source_resource_id). * FromImage - Copy a Platform Image (specified with image_reference_id) * Restore - Set by Azure Backup or Site Recovery on a restored disk (specified with source_resource_id). * Upload - Upload a VHD disk with the help of SAS URL (to be used with upload_size_bytes).
    diskAccessId : str, default is Undefined, optional
        The ID of the disk access resource for using private endpoints on disks.
    diskEncryptionSetId : str, default is Undefined, optional
        The ID of a Disk Encryption Set which should be used to encrypt this Managed Disk. Conflicts with secure_vm_disk_encryption_set_id.
    diskIopsReadOnly : float, default is Undefined, optional
        The number of IOPS allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. One operation can transfer between 4k and 256k bytes.
    diskIopsReadWrite : float, default is Undefined, optional
        The number of IOPS allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. One operation can transfer between 4k and 256k bytes.
    diskMbpsReadOnly : float, default is Undefined, optional
        The bandwidth allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. MBps means millions of bytes per second.
    diskMbpsReadWrite : float, default is Undefined, optional
        The bandwidth allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. MBps means millions of bytes per second.
    diskSizeGb : float, default is Undefined, optional
        Specifies the size of the managed disk to create in gigabytes. If create_option is Copy or FromImage, then the value must be equal to or greater than the source's size. The size can only be increased.
    edgeZone : str, default is Undefined, optional
        Specifies the Edge Zone within the Azure Region where this Managed Disk should exist. Changing this forces a new Managed Disk to be created.
    encryptionSettings : ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderEncryptionSettings, default is Undefined, optional
        encryption settings
    galleryImageReferenceId : str, default is Undefined, optional
        ID of a Gallery Image Version to copy when create_option is FromImage. This field cannot be specified if image_reference_id is specified. Changing this forces a new resource to be created.
    hyperVGeneration : str, default is Undefined, optional
        The HyperV Generation of the Disk when the source of an Import or Copy operation targets a source that contains an operating system. Possible values are V1 and V2. For ImportSecure it must be set to V2. Changing this forces a new resource to be created.
    imageReferenceId : str, default is Undefined, optional
        ID of an existing platform/marketplace disk image to copy when create_option is FromImage. This field cannot be specified if gallery_image_reference_id is specified. Changing this forces a new resource to be created.
    location : str, default is Undefined, optional
        Specified the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    logicalSectorSize : float, default is Undefined, optional
        Logical Sector Size. Possible values are: 512 and 4096. Defaults to 4096. Changing this forces a new resource to be created.
    maxShares : float, default is Undefined, optional
        The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.
    networkAccessPolicy : str, default is Undefined, optional
        Policy for accessing the disk via network. Allowed values are AllowAll, AllowPrivate, and DenyAll.
    onDemandBurstingEnabled : bool, default is Undefined, optional
        Specifies if On-Demand Bursting is enabled for the Managed Disk.
    optimizedFrequentAttachEnabled : bool, default is Undefined, optional
        Specifies whether this Managed Disk should be optimized for frequent disk attachments (where a disk is attached/detached more than 5 times in a day). Defaults to false.
    osType : str, default is Undefined, optional
        Specify a value when the source of an Import, ImportSecure or Copy operation targets a source that contains an operating system. Valid values are Linux or Windows.
    performancePlusEnabled : bool, default is Undefined, optional
        Specifies whether Performance Plus is enabled for this Managed Disk. Defaults to false. Changing this forces a new resource to be created.
    publicNetworkAccessEnabled : bool, default is Undefined, optional
        Whether it is allowed to access the disk via public network. Defaults to true.
    resourceGroupName : str, default is Undefined, optional
        The name of the Resource Group where the Managed Disk should exist. Changing this forces a new resource to be created.
    resourceGroupNameRef : ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderResourceGroupNameRef, default is Undefined, optional
        resource group name ref
    resourceGroupNameSelector : ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderResourceGroupNameSelector, default is Undefined, optional
        resource group name selector
    secureVmDiskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.
    securityType : str, default is Undefined, optional
        Security Type of the Managed Disk when it is used for a Confidential VM. Possible values are ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey, ConfidentialVM_DiskEncryptedWithPlatformKey and ConfidentialVM_DiskEncryptedWithCustomerKey. Changing this forces a new resource to be created.
    sourceResourceId : str, default is Undefined, optional
        The ID of an existing Managed Disk or Snapshot to copy when create_option is Copy or the recovery point to restore when create_option is Restore. Changing this forces a new resource to be created.
    sourceResourceIdRef : ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderSourceResourceIDRef, default is Undefined, optional
        source resource Id ref
    sourceResourceIdSelector : ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderSourceResourceIDSelector, default is Undefined, optional
        source resource Id selector
    sourceUri : str, default is Undefined, optional
        URI to a valid VHD file to be used when create_option is Import or ImportSecure. Changing this forces a new resource to be created.
    storageAccountId : str, default is Undefined, optional
        The ID of the Storage Account where the source_uri is located. Required when create_option is set to Import or ImportSecure. Changing this forces a new resource to be created.
    storageAccountType : str, default is Undefined, optional
        The type of storage to use for the managed disk. Possible values are Standard_LRS, StandardSSD_ZRS, Premium_LRS, PremiumV2_LRS, Premium_ZRS, StandardSSD_LRS or UltraSSD_LRS.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    tier : str, default is Undefined, optional
        The disk performance tier to use. Possible values are documented here. This feature is currently supported only for premium SSDs.
    trustedLaunchEnabled : bool, default is Undefined, optional
        Specifies if Trusted Launch is enabled for the Managed Disk. Changing this forces a new resource to be created.
    uploadSizeBytes : float, default is Undefined, optional
        Specifies the size of the managed disk to create in bytes. Required when create_option is Upload. The value must be equal to the source disk to be copied in bytes. Source disk size could be calculated with ls -l or wc -c. More information can be found at Copy a managed disk. Changing this forces a new resource to be created.
    zone : str, default is Undefined, optional
        Specifies the Availability Zone in which this Managed Disk should be located. Changing this property forces a new resource to be created.
    """


    createOption?: str

    diskAccessId?: str

    diskEncryptionSetId?: str

    diskIopsReadOnly?: float

    diskIopsReadWrite?: float

    diskMbpsReadOnly?: float

    diskMbpsReadWrite?: float

    diskSizeGb?: float

    edgeZone?: str

    encryptionSettings?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderEncryptionSettings

    galleryImageReferenceId?: str

    hyperVGeneration?: str

    imageReferenceId?: str

    location?: str

    logicalSectorSize?: float

    maxShares?: float

    networkAccessPolicy?: str

    onDemandBurstingEnabled?: bool

    optimizedFrequentAttachEnabled?: bool

    osType?: str

    performancePlusEnabled?: bool

    publicNetworkAccessEnabled?: bool

    resourceGroupName?: str

    resourceGroupNameRef?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderResourceGroupNameRef

    resourceGroupNameSelector?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderResourceGroupNameSelector

    secureVmDiskEncryptionSetId?: str

    securityType?: str

    sourceResourceId?: str

    sourceResourceIdRef?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderSourceResourceIDRef

    sourceResourceIdSelector?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderSourceResourceIDSelector

    sourceUri?: str

    storageAccountId?: str

    storageAccountType?: str

    tags?: {str:str}

    tier?: str

    trustedLaunchEnabled?: bool

    uploadSizeBytes?: float

    zone?: str


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderEncryptionSettings:
    r"""
    A encryption_settings block as defined below.

    Attributes
    ----------
    diskEncryptionKey : ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderEncryptionSettingsDiskEncryptionKey, default is Undefined, optional
        disk encryption key
    enabled : bool, default is Undefined, optional
        enabled
    keyEncryptionKey : ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderEncryptionSettingsKeyEncryptionKey, default is Undefined, optional
        key encryption key
    """


    diskEncryptionKey?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderEncryptionSettingsDiskEncryptionKey

    enabled?: bool

    keyEncryptionKey?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderEncryptionSettingsKeyEncryptionKey


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderEncryptionSettingsDiskEncryptionKey:
    r"""
    A disk_encryption_key block as defined above.

    Attributes
    ----------
    secretUrl : str, default is Undefined, optional
        The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as id on the azurerm_key_vault_secret resource.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.
    """


    secretUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderEncryptionSettingsKeyEncryptionKey:
    r"""
    A key_encryption_key block as defined below.

    Attributes
    ----------
    keyUrl : str, default is Undefined, optional
        The URL to the Key Vault Key used as the Key Encryption Key. This can be found as id on the azurerm_key_vault_key resource.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.
    """


    keyUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderResourceGroupNameRef:
    r"""
    Reference to a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderResourceGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderResourceGroupNameRefPolicy


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderResourceGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderResourceGroupNameSelector:
    r"""
    Selector for a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderResourceGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderResourceGroupNameSelectorPolicy


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderResourceGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderSourceResourceIDRef:
    r"""
    Reference to a ManagedDisk in compute to populate sourceResourceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderSourceResourceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderSourceResourceIDRefPolicy


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderSourceResourceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderSourceResourceIDSelector:
    r"""
    Selector for a ManagedDisk in compute to populate sourceResourceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderSourceResourceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderSourceResourceIDSelectorPolicy


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecForProviderSourceResourceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    createOption : str, default is Undefined, optional
        The method to use when creating the managed disk. Changing this forces a new resource to be created. Possible values include: * Import - Import a VHD file in to the managed disk (VHD specified with source_uri). * ImportSecure - Securely import a VHD file in to the managed disk (VHD specified with source_uri). * Empty - Create an empty managed disk. * Copy - Copy an existing managed disk or snapshot (specified with source_resource_id). * FromImage - Copy a Platform Image (specified with image_reference_id) * Restore - Set by Azure Backup or Site Recovery on a restored disk (specified with source_resource_id). * Upload - Upload a VHD disk with the help of SAS URL (to be used with upload_size_bytes).
    diskAccessId : str, default is Undefined, optional
        The ID of the disk access resource for using private endpoints on disks.
    diskEncryptionSetId : str, default is Undefined, optional
        The ID of a Disk Encryption Set which should be used to encrypt this Managed Disk. Conflicts with secure_vm_disk_encryption_set_id.
    diskIopsReadOnly : float, default is Undefined, optional
        The number of IOPS allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. One operation can transfer between 4k and 256k bytes.
    diskIopsReadWrite : float, default is Undefined, optional
        The number of IOPS allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. One operation can transfer between 4k and 256k bytes.
    diskMbpsReadOnly : float, default is Undefined, optional
        The bandwidth allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. MBps means millions of bytes per second.
    diskMbpsReadWrite : float, default is Undefined, optional
        The bandwidth allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. MBps means millions of bytes per second.
    diskSizeGb : float, default is Undefined, optional
        Specifies the size of the managed disk to create in gigabytes. If create_option is Copy or FromImage, then the value must be equal to or greater than the source's size. The size can only be increased.
    edgeZone : str, default is Undefined, optional
        Specifies the Edge Zone within the Azure Region where this Managed Disk should exist. Changing this forces a new Managed Disk to be created.
    encryptionSettings : ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderEncryptionSettings, default is Undefined, optional
        encryption settings
    galleryImageReferenceId : str, default is Undefined, optional
        ID of a Gallery Image Version to copy when create_option is FromImage. This field cannot be specified if image_reference_id is specified. Changing this forces a new resource to be created.
    hyperVGeneration : str, default is Undefined, optional
        The HyperV Generation of the Disk when the source of an Import or Copy operation targets a source that contains an operating system. Possible values are V1 and V2. For ImportSecure it must be set to V2. Changing this forces a new resource to be created.
    imageReferenceId : str, default is Undefined, optional
        ID of an existing platform/marketplace disk image to copy when create_option is FromImage. This field cannot be specified if gallery_image_reference_id is specified. Changing this forces a new resource to be created.
    location : str, default is Undefined, optional
        Specified the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    logicalSectorSize : float, default is Undefined, optional
        Logical Sector Size. Possible values are: 512 and 4096. Defaults to 4096. Changing this forces a new resource to be created.
    maxShares : float, default is Undefined, optional
        The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.
    networkAccessPolicy : str, default is Undefined, optional
        Policy for accessing the disk via network. Allowed values are AllowAll, AllowPrivate, and DenyAll.
    onDemandBurstingEnabled : bool, default is Undefined, optional
        Specifies if On-Demand Bursting is enabled for the Managed Disk.
    optimizedFrequentAttachEnabled : bool, default is Undefined, optional
        Specifies whether this Managed Disk should be optimized for frequent disk attachments (where a disk is attached/detached more than 5 times in a day). Defaults to false.
    osType : str, default is Undefined, optional
        Specify a value when the source of an Import, ImportSecure or Copy operation targets a source that contains an operating system. Valid values are Linux or Windows.
    performancePlusEnabled : bool, default is Undefined, optional
        Specifies whether Performance Plus is enabled for this Managed Disk. Defaults to false. Changing this forces a new resource to be created.
    publicNetworkAccessEnabled : bool, default is Undefined, optional
        Whether it is allowed to access the disk via public network. Defaults to true.
    secureVmDiskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.
    securityType : str, default is Undefined, optional
        Security Type of the Managed Disk when it is used for a Confidential VM. Possible values are ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey, ConfidentialVM_DiskEncryptedWithPlatformKey and ConfidentialVM_DiskEncryptedWithCustomerKey. Changing this forces a new resource to be created.
    sourceResourceId : str, default is Undefined, optional
        The ID of an existing Managed Disk or Snapshot to copy when create_option is Copy or the recovery point to restore when create_option is Restore. Changing this forces a new resource to be created.
    sourceResourceIdRef : ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderSourceResourceIDRef, default is Undefined, optional
        source resource Id ref
    sourceResourceIdSelector : ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderSourceResourceIDSelector, default is Undefined, optional
        source resource Id selector
    sourceUri : str, default is Undefined, optional
        URI to a valid VHD file to be used when create_option is Import or ImportSecure. Changing this forces a new resource to be created.
    storageAccountId : str, default is Undefined, optional
        The ID of the Storage Account where the source_uri is located. Required when create_option is set to Import or ImportSecure. Changing this forces a new resource to be created.
    storageAccountType : str, default is Undefined, optional
        The type of storage to use for the managed disk. Possible values are Standard_LRS, StandardSSD_ZRS, Premium_LRS, PremiumV2_LRS, Premium_ZRS, StandardSSD_LRS or UltraSSD_LRS.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    tier : str, default is Undefined, optional
        The disk performance tier to use. Possible values are documented here. This feature is currently supported only for premium SSDs.
    trustedLaunchEnabled : bool, default is Undefined, optional
        Specifies if Trusted Launch is enabled for the Managed Disk. Changing this forces a new resource to be created.
    uploadSizeBytes : float, default is Undefined, optional
        Specifies the size of the managed disk to create in bytes. Required when create_option is Upload. The value must be equal to the source disk to be copied in bytes. Source disk size could be calculated with ls -l or wc -c. More information can be found at Copy a managed disk. Changing this forces a new resource to be created.
    zone : str, default is Undefined, optional
        Specifies the Availability Zone in which this Managed Disk should be located. Changing this property forces a new resource to be created.
    """


    createOption?: str

    diskAccessId?: str

    diskEncryptionSetId?: str

    diskIopsReadOnly?: float

    diskIopsReadWrite?: float

    diskMbpsReadOnly?: float

    diskMbpsReadWrite?: float

    diskSizeGb?: float

    edgeZone?: str

    encryptionSettings?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderEncryptionSettings

    galleryImageReferenceId?: str

    hyperVGeneration?: str

    imageReferenceId?: str

    location?: str

    logicalSectorSize?: float

    maxShares?: float

    networkAccessPolicy?: str

    onDemandBurstingEnabled?: bool

    optimizedFrequentAttachEnabled?: bool

    osType?: str

    performancePlusEnabled?: bool

    publicNetworkAccessEnabled?: bool

    secureVmDiskEncryptionSetId?: str

    securityType?: str

    sourceResourceId?: str

    sourceResourceIdRef?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderSourceResourceIDRef

    sourceResourceIdSelector?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderSourceResourceIDSelector

    sourceUri?: str

    storageAccountId?: str

    storageAccountType?: str

    tags?: {str:str}

    tier?: str

    trustedLaunchEnabled?: bool

    uploadSizeBytes?: float

    zone?: str


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderEncryptionSettings:
    r"""
    A encryption_settings block as defined below.

    Attributes
    ----------
    diskEncryptionKey : ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderEncryptionSettingsDiskEncryptionKey, default is Undefined, optional
        disk encryption key
    enabled : bool, default is Undefined, optional
        enabled
    keyEncryptionKey : ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderEncryptionSettingsKeyEncryptionKey, default is Undefined, optional
        key encryption key
    """


    diskEncryptionKey?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderEncryptionSettingsDiskEncryptionKey

    enabled?: bool

    keyEncryptionKey?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderEncryptionSettingsKeyEncryptionKey


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderEncryptionSettingsDiskEncryptionKey:
    r"""
    A disk_encryption_key block as defined above.

    Attributes
    ----------
    secretUrl : str, default is Undefined, optional
        The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as id on the azurerm_key_vault_secret resource.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.
    """


    secretUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderEncryptionSettingsKeyEncryptionKey:
    r"""
    A key_encryption_key block as defined below.

    Attributes
    ----------
    keyUrl : str, default is Undefined, optional
        The URL to the Key Vault Key used as the Key Encryption Key. This can be found as id on the azurerm_key_vault_key resource.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.
    """


    keyUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderSourceResourceIDRef:
    r"""
    Reference to a ManagedDisk in compute to populate sourceResourceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderSourceResourceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderSourceResourceIDRefPolicy


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderSourceResourceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderSourceResourceIDSelector:
    r"""
    Selector for a ManagedDisk in compute to populate sourceResourceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderSourceResourceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderSourceResourceIDSelectorPolicy


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecInitProviderSourceResourceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2ManagedDiskSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecProviderConfigRefPolicy


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeAzureUpboundIoV1beta2ManagedDiskSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeAzureUpboundIoV1beta2ManagedDiskSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2ManagedDiskSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2ManagedDiskSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeAzureUpboundIoV1beta2ManagedDiskSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeAzureUpboundIoV1beta2ManagedDiskStatus:
    r"""
    ManagedDiskStatus defines the observed state of ManagedDisk.

    Attributes
    ----------
    atProvider : ComputeAzureUpboundIoV1beta2ManagedDiskStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeAzureUpboundIoV1beta2ManagedDiskStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeAzureUpboundIoV1beta2ManagedDiskStatusAtProvider

    conditions?: [ComputeAzureUpboundIoV1beta2ManagedDiskStatusConditionsItems0]

    observedGeneration?: int


schema ComputeAzureUpboundIoV1beta2ManagedDiskStatusAtProvider:
    r"""
    compute azure upbound io v1beta2 managed disk status at provider

    Attributes
    ----------
    createOption : str, default is Undefined, optional
        The method to use when creating the managed disk. Changing this forces a new resource to be created. Possible values include: * Import - Import a VHD file in to the managed disk (VHD specified with source_uri). * ImportSecure - Securely import a VHD file in to the managed disk (VHD specified with source_uri). * Empty - Create an empty managed disk. * Copy - Copy an existing managed disk or snapshot (specified with source_resource_id). * FromImage - Copy a Platform Image (specified with image_reference_id) * Restore - Set by Azure Backup or Site Recovery on a restored disk (specified with source_resource_id). * Upload - Upload a VHD disk with the help of SAS URL (to be used with upload_size_bytes).
    diskAccessId : str, default is Undefined, optional
        The ID of the disk access resource for using private endpoints on disks.
    diskEncryptionSetId : str, default is Undefined, optional
        The ID of a Disk Encryption Set which should be used to encrypt this Managed Disk. Conflicts with secure_vm_disk_encryption_set_id.
    diskIopsReadOnly : float, default is Undefined, optional
        The number of IOPS allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. One operation can transfer between 4k and 256k bytes.
    diskIopsReadWrite : float, default is Undefined, optional
        The number of IOPS allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. One operation can transfer between 4k and 256k bytes.
    diskMbpsReadOnly : float, default is Undefined, optional
        The bandwidth allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. MBps means millions of bytes per second.
    diskMbpsReadWrite : float, default is Undefined, optional
        The bandwidth allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. MBps means millions of bytes per second.
    diskSizeGb : float, default is Undefined, optional
        Specifies the size of the managed disk to create in gigabytes. If create_option is Copy or FromImage, then the value must be equal to or greater than the source's size. The size can only be increased.
    edgeZone : str, default is Undefined, optional
        Specifies the Edge Zone within the Azure Region where this Managed Disk should exist. Changing this forces a new Managed Disk to be created.
    encryptionSettings : ComputeAzureUpboundIoV1beta2ManagedDiskStatusAtProviderEncryptionSettings, default is Undefined, optional
        encryption settings
    galleryImageReferenceId : str, default is Undefined, optional
        ID of a Gallery Image Version to copy when create_option is FromImage. This field cannot be specified if image_reference_id is specified. Changing this forces a new resource to be created.
    hyperVGeneration : str, default is Undefined, optional
        The HyperV Generation of the Disk when the source of an Import or Copy operation targets a source that contains an operating system. Possible values are V1 and V2. For ImportSecure it must be set to V2. Changing this forces a new resource to be created.
    id : str, default is Undefined, optional
        The ID of the Managed Disk.
    imageReferenceId : str, default is Undefined, optional
        ID of an existing platform/marketplace disk image to copy when create_option is FromImage. This field cannot be specified if gallery_image_reference_id is specified. Changing this forces a new resource to be created.
    location : str, default is Undefined, optional
        Specified the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    logicalSectorSize : float, default is Undefined, optional
        Logical Sector Size. Possible values are: 512 and 4096. Defaults to 4096. Changing this forces a new resource to be created.
    maxShares : float, default is Undefined, optional
        The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.
    networkAccessPolicy : str, default is Undefined, optional
        Policy for accessing the disk via network. Allowed values are AllowAll, AllowPrivate, and DenyAll.
    onDemandBurstingEnabled : bool, default is Undefined, optional
        Specifies if On-Demand Bursting is enabled for the Managed Disk.
    optimizedFrequentAttachEnabled : bool, default is Undefined, optional
        Specifies whether this Managed Disk should be optimized for frequent disk attachments (where a disk is attached/detached more than 5 times in a day). Defaults to false.
    osType : str, default is Undefined, optional
        Specify a value when the source of an Import, ImportSecure or Copy operation targets a source that contains an operating system. Valid values are Linux or Windows.
    performancePlusEnabled : bool, default is Undefined, optional
        Specifies whether Performance Plus is enabled for this Managed Disk. Defaults to false. Changing this forces a new resource to be created.
    publicNetworkAccessEnabled : bool, default is Undefined, optional
        Whether it is allowed to access the disk via public network. Defaults to true.
    resourceGroupName : str, default is Undefined, optional
        The name of the Resource Group where the Managed Disk should exist. Changing this forces a new resource to be created.
    secureVmDiskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.
    securityType : str, default is Undefined, optional
        Security Type of the Managed Disk when it is used for a Confidential VM. Possible values are ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey, ConfidentialVM_DiskEncryptedWithPlatformKey and ConfidentialVM_DiskEncryptedWithCustomerKey. Changing this forces a new resource to be created.
    sourceResourceId : str, default is Undefined, optional
        The ID of an existing Managed Disk or Snapshot to copy when create_option is Copy or the recovery point to restore when create_option is Restore. Changing this forces a new resource to be created.
    sourceUri : str, default is Undefined, optional
        URI to a valid VHD file to be used when create_option is Import or ImportSecure. Changing this forces a new resource to be created.
    storageAccountId : str, default is Undefined, optional
        The ID of the Storage Account where the source_uri is located. Required when create_option is set to Import or ImportSecure. Changing this forces a new resource to be created.
    storageAccountType : str, default is Undefined, optional
        The type of storage to use for the managed disk. Possible values are Standard_LRS, StandardSSD_ZRS, Premium_LRS, PremiumV2_LRS, Premium_ZRS, StandardSSD_LRS or UltraSSD_LRS.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    tier : str, default is Undefined, optional
        The disk performance tier to use. Possible values are documented here. This feature is currently supported only for premium SSDs.
    trustedLaunchEnabled : bool, default is Undefined, optional
        Specifies if Trusted Launch is enabled for the Managed Disk. Changing this forces a new resource to be created.
    uploadSizeBytes : float, default is Undefined, optional
        Specifies the size of the managed disk to create in bytes. Required when create_option is Upload. The value must be equal to the source disk to be copied in bytes. Source disk size could be calculated with ls -l or wc -c. More information can be found at Copy a managed disk. Changing this forces a new resource to be created.
    zone : str, default is Undefined, optional
        Specifies the Availability Zone in which this Managed Disk should be located. Changing this property forces a new resource to be created.
    """


    createOption?: str

    diskAccessId?: str

    diskEncryptionSetId?: str

    diskIopsReadOnly?: float

    diskIopsReadWrite?: float

    diskMbpsReadOnly?: float

    diskMbpsReadWrite?: float

    diskSizeGb?: float

    edgeZone?: str

    encryptionSettings?: ComputeAzureUpboundIoV1beta2ManagedDiskStatusAtProviderEncryptionSettings

    galleryImageReferenceId?: str

    hyperVGeneration?: str

    id?: str

    imageReferenceId?: str

    location?: str

    logicalSectorSize?: float

    maxShares?: float

    networkAccessPolicy?: str

    onDemandBurstingEnabled?: bool

    optimizedFrequentAttachEnabled?: bool

    osType?: str

    performancePlusEnabled?: bool

    publicNetworkAccessEnabled?: bool

    resourceGroupName?: str

    secureVmDiskEncryptionSetId?: str

    securityType?: str

    sourceResourceId?: str

    sourceUri?: str

    storageAccountId?: str

    storageAccountType?: str

    tags?: {str:str}

    tier?: str

    trustedLaunchEnabled?: bool

    uploadSizeBytes?: float

    zone?: str


schema ComputeAzureUpboundIoV1beta2ManagedDiskStatusAtProviderEncryptionSettings:
    r"""
    A encryption_settings block as defined below.

    Attributes
    ----------
    diskEncryptionKey : ComputeAzureUpboundIoV1beta2ManagedDiskStatusAtProviderEncryptionSettingsDiskEncryptionKey, default is Undefined, optional
        disk encryption key
    enabled : bool, default is Undefined, optional
        enabled
    keyEncryptionKey : ComputeAzureUpboundIoV1beta2ManagedDiskStatusAtProviderEncryptionSettingsKeyEncryptionKey, default is Undefined, optional
        key encryption key
    """


    diskEncryptionKey?: ComputeAzureUpboundIoV1beta2ManagedDiskStatusAtProviderEncryptionSettingsDiskEncryptionKey

    enabled?: bool

    keyEncryptionKey?: ComputeAzureUpboundIoV1beta2ManagedDiskStatusAtProviderEncryptionSettingsKeyEncryptionKey


schema ComputeAzureUpboundIoV1beta2ManagedDiskStatusAtProviderEncryptionSettingsDiskEncryptionKey:
    r"""
    A disk_encryption_key block as defined above.

    Attributes
    ----------
    secretUrl : str, default is Undefined, optional
        The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as id on the azurerm_key_vault_secret resource.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.
    """


    secretUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2ManagedDiskStatusAtProviderEncryptionSettingsKeyEncryptionKey:
    r"""
    A key_encryption_key block as defined below.

    Attributes
    ----------
    keyUrl : str, default is Undefined, optional
        The URL to the Key Vault Key used as the Key Encryption Key. This can be found as id on the azurerm_key_vault_key resource.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.
    """


    keyUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2ManagedDiskStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


