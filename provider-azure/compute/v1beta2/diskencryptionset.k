"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DiskEncryptionSet:
    r"""
    DiskEncryptionSet is the Schema for the DiskEncryptionSets API. Manages a Disk Encryption Set.

    Attributes
    ----------
    apiVersion : str, default is "compute.azure.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DiskEncryptionSet", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpec, default is Undefined, required
        spec
    status : ComputeAzureUpboundIoV1beta2DiskEncryptionSetStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.azure.upbound.io/v1beta2" = "compute.azure.upbound.io/v1beta2"

    kind: "DiskEncryptionSet" = "DiskEncryptionSet"

    metadata?: v1.ObjectMeta

    spec: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpec

    status?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetStatus


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpec:
    r"""
    DiskEncryptionSetSpec defines the desired state of DiskEncryptionSet

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProvider

    initProvider?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecWriteConnectionSecretToRef


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProvider:
    r"""
    compute azure upbound io v1beta2 disk encryption set spec for provider

    Attributes
    ----------
    autoKeyRotationEnabled : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Disk Encryption Set automatically rotates the encryption Key to latest version or not. Possible values are true or false. Defaults to false.
    encryptionType : str, default is Undefined, optional
        The type of key used to encrypt the data of the disk. Possible values are EncryptionAtRestWithCustomerKey, EncryptionAtRestWithPlatformAndCustomerKeys and ConfidentialVmEncryptedWithCustomerKey. Defaults to EncryptionAtRestWithCustomerKey. Changing this forces a new resource to be created.
    federatedClientId : str, default is Undefined, optional
        Multi-tenant application client id to access key vault in a different tenant.
    identity : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderIdentity, default is Undefined, optional
        identity
    keyVaultKeyId : str, default is Undefined, optional
        Specifies the URL to a Key Vault Key (either from a Key Vault Key, or the Key URL for the Key Vault Secret). Exactly one of managed_hsm_key_id, key_vault_key_id must be specified.
    keyVaultKeyIdRef : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderKeyVaultKeyIDRef, default is Undefined, optional
        key vault key Id ref
    keyVaultKeyIdSelector : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderKeyVaultKeyIDSelector, default is Undefined, optional
        key vault key Id selector
    location : str, default is Undefined, optional
        Specifies the Azure Region where the Disk Encryption Set exists. Changing this forces a new resource to be created.
    managedHsmKeyId : str, default is Undefined, optional
        Key ID of a key in a managed HSM.  Exactly one of managed_hsm_key_id, key_vault_key_id must be specified.
    resourceGroupName : str, default is Undefined, optional
        Specifies the name of the Resource Group where the Disk Encryption Set should exist. Changing this forces a new resource to be created.
    resourceGroupNameRef : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderResourceGroupNameRef, default is Undefined, optional
        resource group name ref
    resourceGroupNameSelector : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderResourceGroupNameSelector, default is Undefined, optional
        resource group name selector
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the Disk Encryption Set.
    """


    autoKeyRotationEnabled?: bool

    encryptionType?: str

    federatedClientId?: str

    identity?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderIdentity

    keyVaultKeyId?: str

    keyVaultKeyIdRef?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderKeyVaultKeyIDRef

    keyVaultKeyIdSelector?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderKeyVaultKeyIDSelector

    location?: str

    managedHsmKeyId?: str

    resourceGroupName?: str

    resourceGroupNameRef?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderResourceGroupNameRef

    resourceGroupNameSelector?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderResourceGroupNameSelector

    tags?: {str:str}


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderIdentity:
    r"""
    An identity block as defined below.

    Attributes
    ----------
    identityIds : [str], default is Undefined, optional
        A list of User Assigned Managed Identity IDs to be assigned to this Disk Encryption Set.
    $type : str, default is Undefined, optional
        The type of Managed Service Identity that is configured on this Disk Encryption Set. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
    """


    identityIds?: [str]

    $type?: str


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderKeyVaultKeyIDRef:
    r"""
    Reference to a Key in keyvault to populate keyVaultKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderKeyVaultKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderKeyVaultKeyIDRefPolicy


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderKeyVaultKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderKeyVaultKeyIDSelector:
    r"""
    Selector for a Key in keyvault to populate keyVaultKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderKeyVaultKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderKeyVaultKeyIDSelectorPolicy


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderKeyVaultKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderResourceGroupNameRef:
    r"""
    Reference to a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderResourceGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderResourceGroupNameRefPolicy


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderResourceGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderResourceGroupNameSelector:
    r"""
    Selector for a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderResourceGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderResourceGroupNameSelectorPolicy


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecForProviderResourceGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    autoKeyRotationEnabled : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Disk Encryption Set automatically rotates the encryption Key to latest version or not. Possible values are true or false. Defaults to false.
    encryptionType : str, default is Undefined, optional
        The type of key used to encrypt the data of the disk. Possible values are EncryptionAtRestWithCustomerKey, EncryptionAtRestWithPlatformAndCustomerKeys and ConfidentialVmEncryptedWithCustomerKey. Defaults to EncryptionAtRestWithCustomerKey. Changing this forces a new resource to be created.
    federatedClientId : str, default is Undefined, optional
        Multi-tenant application client id to access key vault in a different tenant.
    identity : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderIdentity, default is Undefined, optional
        identity
    keyVaultKeyId : str, default is Undefined, optional
        Specifies the URL to a Key Vault Key (either from a Key Vault Key, or the Key URL for the Key Vault Secret). Exactly one of managed_hsm_key_id, key_vault_key_id must be specified.
    keyVaultKeyIdRef : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderKeyVaultKeyIDRef, default is Undefined, optional
        key vault key Id ref
    keyVaultKeyIdSelector : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderKeyVaultKeyIDSelector, default is Undefined, optional
        key vault key Id selector
    location : str, default is Undefined, optional
        Specifies the Azure Region where the Disk Encryption Set exists. Changing this forces a new resource to be created.
    managedHsmKeyId : str, default is Undefined, optional
        Key ID of a key in a managed HSM.  Exactly one of managed_hsm_key_id, key_vault_key_id must be specified.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the Disk Encryption Set.
    """


    autoKeyRotationEnabled?: bool

    encryptionType?: str

    federatedClientId?: str

    identity?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderIdentity

    keyVaultKeyId?: str

    keyVaultKeyIdRef?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderKeyVaultKeyIDRef

    keyVaultKeyIdSelector?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderKeyVaultKeyIDSelector

    location?: str

    managedHsmKeyId?: str

    tags?: {str:str}


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderIdentity:
    r"""
    An identity block as defined below.

    Attributes
    ----------
    identityIds : [str], default is Undefined, optional
        A list of User Assigned Managed Identity IDs to be assigned to this Disk Encryption Set.
    $type : str, default is Undefined, optional
        The type of Managed Service Identity that is configured on this Disk Encryption Set. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
    """


    identityIds?: [str]

    $type?: str


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderKeyVaultKeyIDRef:
    r"""
    Reference to a Key in keyvault to populate keyVaultKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderKeyVaultKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderKeyVaultKeyIDRefPolicy


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderKeyVaultKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderKeyVaultKeyIDSelector:
    r"""
    Selector for a Key in keyvault to populate keyVaultKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderKeyVaultKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderKeyVaultKeyIDSelectorPolicy


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecInitProviderKeyVaultKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecProviderConfigRefPolicy


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetStatus:
    r"""
    DiskEncryptionSetStatus defines the observed state of DiskEncryptionSet.

    Attributes
    ----------
    atProvider : ComputeAzureUpboundIoV1beta2DiskEncryptionSetStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeAzureUpboundIoV1beta2DiskEncryptionSetStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetStatusAtProvider

    conditions?: [ComputeAzureUpboundIoV1beta2DiskEncryptionSetStatusConditionsItems0]

    observedGeneration?: int


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetStatusAtProvider:
    r"""
    compute azure upbound io v1beta2 disk encryption set status at provider

    Attributes
    ----------
    autoKeyRotationEnabled : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Disk Encryption Set automatically rotates the encryption Key to latest version or not. Possible values are true or false. Defaults to false.
    encryptionType : str, default is Undefined, optional
        The type of key used to encrypt the data of the disk. Possible values are EncryptionAtRestWithCustomerKey, EncryptionAtRestWithPlatformAndCustomerKeys and ConfidentialVmEncryptedWithCustomerKey. Defaults to EncryptionAtRestWithCustomerKey. Changing this forces a new resource to be created.
    federatedClientId : str, default is Undefined, optional
        Multi-tenant application client id to access key vault in a different tenant.
    id : str, default is Undefined, optional
        The ID of the Disk Encryption Set.
    identity : ComputeAzureUpboundIoV1beta2DiskEncryptionSetStatusAtProviderIdentity, default is Undefined, optional
        identity
    keyVaultKeyId : str, default is Undefined, optional
        Specifies the URL to a Key Vault Key (either from a Key Vault Key, or the Key URL for the Key Vault Secret). Exactly one of managed_hsm_key_id, key_vault_key_id must be specified.
    keyVaultKeyUrl : str, default is Undefined, optional
        The URL for the Key Vault Key or Key Vault Secret that is currently being used by the service.
    location : str, default is Undefined, optional
        Specifies the Azure Region where the Disk Encryption Set exists. Changing this forces a new resource to be created.
    managedHsmKeyId : str, default is Undefined, optional
        Key ID of a key in a managed HSM.  Exactly one of managed_hsm_key_id, key_vault_key_id must be specified.
    resourceGroupName : str, default is Undefined, optional
        Specifies the name of the Resource Group where the Disk Encryption Set should exist. Changing this forces a new resource to be created.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the Disk Encryption Set.
    """


    autoKeyRotationEnabled?: bool

    encryptionType?: str

    federatedClientId?: str

    id?: str

    identity?: ComputeAzureUpboundIoV1beta2DiskEncryptionSetStatusAtProviderIdentity

    keyVaultKeyId?: str

    keyVaultKeyUrl?: str

    location?: str

    managedHsmKeyId?: str

    resourceGroupName?: str

    tags?: {str:str}


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetStatusAtProviderIdentity:
    r"""
    An identity block as defined below.

    Attributes
    ----------
    identityIds : [str], default is Undefined, optional
        A list of User Assigned Managed Identity IDs to be assigned to this Disk Encryption Set.
    principalId : str, default is Undefined, optional
        The (Client) ID of the Service Principal.
    tenantId : str, default is Undefined, optional
        The ID of the Tenant the Service Principal is assigned in.
    $type : str, default is Undefined, optional
        The type of Managed Service Identity that is configured on this Disk Encryption Set. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
    """


    identityIds?: [str]

    principalId?: str

    tenantId?: str

    $type?: str


schema ComputeAzureUpboundIoV1beta2DiskEncryptionSetStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


