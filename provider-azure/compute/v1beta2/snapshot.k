"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Snapshot:
    r"""
    Snapshot is the Schema for the Snapshots API. Manages a Disk Snapshot.

    Attributes
    ----------
    apiVersion : str, default is "compute.azure.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Snapshot", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeAzureUpboundIoV1beta2SnapshotSpec, default is Undefined, required
        spec
    status : ComputeAzureUpboundIoV1beta2SnapshotStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.azure.upbound.io/v1beta2" = "compute.azure.upbound.io/v1beta2"

    kind: "Snapshot" = "Snapshot"

    metadata?: v1.ObjectMeta

    spec: ComputeAzureUpboundIoV1beta2SnapshotSpec

    status?: ComputeAzureUpboundIoV1beta2SnapshotStatus


schema ComputeAzureUpboundIoV1beta2SnapshotSpec:
    r"""
    SnapshotSpec defines the desired state of Snapshot

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeAzureUpboundIoV1beta2SnapshotSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeAzureUpboundIoV1beta2SnapshotSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeAzureUpboundIoV1beta2SnapshotSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeAzureUpboundIoV1beta2SnapshotSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeAzureUpboundIoV1beta2SnapshotSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeAzureUpboundIoV1beta2SnapshotSpecForProvider

    initProvider?: ComputeAzureUpboundIoV1beta2SnapshotSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeAzureUpboundIoV1beta2SnapshotSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeAzureUpboundIoV1beta2SnapshotSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeAzureUpboundIoV1beta2SnapshotSpecWriteConnectionSecretToRef


schema ComputeAzureUpboundIoV1beta2SnapshotSpecForProvider:
    r"""
    compute azure upbound io v1beta2 snapshot spec for provider

    Attributes
    ----------
    createOption : str, default is Undefined, optional
        Indicates how the snapshot is to be created. Possible values are Copy or Import.
    diskAccessId : str, default is Undefined, optional
        Specifies the ID of the Disk Access which should be used for this Snapshot. This is used in conjunction with setting network_access_policy to AllowPrivate.
    diskSizeGb : float, default is Undefined, optional
        The size of the Snapshotted Disk in GB.
    encryptionSettings : ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderEncryptionSettings, default is Undefined, optional
        encryption settings
    incrementalEnabled : bool, default is Undefined, optional
        Specifies if the Snapshot is incremental. Changing this forces a new resource to be created.
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    networkAccessPolicy : str, default is Undefined, optional
        Policy for accessing the disk via network. Possible values are AllowAll, AllowPrivate, or DenyAll. Defaults to AllowAll.
    publicNetworkAccessEnabled : bool, default is Undefined, optional
        Policy for controlling export on the disk. Possible values are true or false. Defaults to true.
    resourceGroupName : str, default is Undefined, optional
        The name of the resource group in which to create the Snapshot. Changing this forces a new resource to be created.
    resourceGroupNameRef : ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderResourceGroupNameRef, default is Undefined, optional
        resource group name ref
    resourceGroupNameSelector : ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderResourceGroupNameSelector, default is Undefined, optional
        resource group name selector
    sourceResourceId : str, default is Undefined, optional
        Specifies a reference to an existing snapshot, when create_option is Copy. Changing this forces a new resource to be created.
    sourceUri : str, default is Undefined, optional
        Specifies the URI to a Managed or Unmanaged Disk. Changing this forces a new resource to be created.
    sourceUriRef : ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderSourceURIRef, default is Undefined, optional
        source Uri ref
    sourceUriSelector : ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderSourceURISelector, default is Undefined, optional
        source Uri selector
    storageAccountId : str, default is Undefined, optional
        Specifies the ID of an storage account. Used with source_uri to allow authorization during import of unmanaged blobs from a different subscription. Changing this forces a new resource to be created.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    createOption?: str

    diskAccessId?: str

    diskSizeGb?: float

    encryptionSettings?: ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderEncryptionSettings

    incrementalEnabled?: bool

    location?: str

    networkAccessPolicy?: str

    publicNetworkAccessEnabled?: bool

    resourceGroupName?: str

    resourceGroupNameRef?: ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderResourceGroupNameRef

    resourceGroupNameSelector?: ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderResourceGroupNameSelector

    sourceResourceId?: str

    sourceUri?: str

    sourceUriRef?: ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderSourceURIRef

    sourceUriSelector?: ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderSourceURISelector

    storageAccountId?: str

    tags?: {str:str}


schema ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderEncryptionSettings:
    r"""
    A encryption_settings block as defined below.

    Attributes
    ----------
    diskEncryptionKey : ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderEncryptionSettingsDiskEncryptionKey, default is Undefined, optional
        disk encryption key
    enabled : bool, default is Undefined, optional
        enabled
    keyEncryptionKey : ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderEncryptionSettingsKeyEncryptionKey, default is Undefined, optional
        key encryption key
    """


    diskEncryptionKey?: ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderEncryptionSettingsDiskEncryptionKey

    enabled?: bool

    keyEncryptionKey?: ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderEncryptionSettingsKeyEncryptionKey


schema ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderEncryptionSettingsDiskEncryptionKey:
    r"""
    A disk_encryption_key block as defined below.

    Attributes
    ----------
    secretUrl : str, default is Undefined, optional
        The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as id on the azurerm_key_vault_secret resource.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.
    """


    secretUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderEncryptionSettingsKeyEncryptionKey:
    r"""
    A key_encryption_key block as defined below.

    Attributes
    ----------
    keyUrl : str, default is Undefined, optional
        The URL to the Key Vault Key used as the Key Encryption Key. This can be found as id on the azurerm_key_vault_key resource.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.
    """


    keyUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderResourceGroupNameRef:
    r"""
    Reference to a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderResourceGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderResourceGroupNameRefPolicy


schema ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderResourceGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderResourceGroupNameSelector:
    r"""
    Selector for a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderResourceGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderResourceGroupNameSelectorPolicy


schema ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderResourceGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderSourceURIRef:
    r"""
    Reference to a ManagedDisk in compute to populate sourceUri.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderSourceURIRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderSourceURIRefPolicy


schema ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderSourceURIRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderSourceURISelector:
    r"""
    Selector for a ManagedDisk in compute to populate sourceUri.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderSourceURISelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderSourceURISelectorPolicy


schema ComputeAzureUpboundIoV1beta2SnapshotSpecForProviderSourceURISelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2SnapshotSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    createOption : str, default is Undefined, optional
        Indicates how the snapshot is to be created. Possible values are Copy or Import.
    diskAccessId : str, default is Undefined, optional
        Specifies the ID of the Disk Access which should be used for this Snapshot. This is used in conjunction with setting network_access_policy to AllowPrivate.
    diskSizeGb : float, default is Undefined, optional
        The size of the Snapshotted Disk in GB.
    encryptionSettings : ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderEncryptionSettings, default is Undefined, optional
        encryption settings
    incrementalEnabled : bool, default is Undefined, optional
        Specifies if the Snapshot is incremental. Changing this forces a new resource to be created.
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    networkAccessPolicy : str, default is Undefined, optional
        Policy for accessing the disk via network. Possible values are AllowAll, AllowPrivate, or DenyAll. Defaults to AllowAll.
    publicNetworkAccessEnabled : bool, default is Undefined, optional
        Policy for controlling export on the disk. Possible values are true or false. Defaults to true.
    sourceResourceId : str, default is Undefined, optional
        Specifies a reference to an existing snapshot, when create_option is Copy. Changing this forces a new resource to be created.
    sourceUri : str, default is Undefined, optional
        Specifies the URI to a Managed or Unmanaged Disk. Changing this forces a new resource to be created.
    sourceUriRef : ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderSourceURIRef, default is Undefined, optional
        source Uri ref
    sourceUriSelector : ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderSourceURISelector, default is Undefined, optional
        source Uri selector
    storageAccountId : str, default is Undefined, optional
        Specifies the ID of an storage account. Used with source_uri to allow authorization during import of unmanaged blobs from a different subscription. Changing this forces a new resource to be created.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    createOption?: str

    diskAccessId?: str

    diskSizeGb?: float

    encryptionSettings?: ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderEncryptionSettings

    incrementalEnabled?: bool

    location?: str

    networkAccessPolicy?: str

    publicNetworkAccessEnabled?: bool

    sourceResourceId?: str

    sourceUri?: str

    sourceUriRef?: ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderSourceURIRef

    sourceUriSelector?: ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderSourceURISelector

    storageAccountId?: str

    tags?: {str:str}


schema ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderEncryptionSettings:
    r"""
    A encryption_settings block as defined below.

    Attributes
    ----------
    diskEncryptionKey : ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderEncryptionSettingsDiskEncryptionKey, default is Undefined, optional
        disk encryption key
    enabled : bool, default is Undefined, optional
        enabled
    keyEncryptionKey : ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderEncryptionSettingsKeyEncryptionKey, default is Undefined, optional
        key encryption key
    """


    diskEncryptionKey?: ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderEncryptionSettingsDiskEncryptionKey

    enabled?: bool

    keyEncryptionKey?: ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderEncryptionSettingsKeyEncryptionKey


schema ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderEncryptionSettingsDiskEncryptionKey:
    r"""
    A disk_encryption_key block as defined below.

    Attributes
    ----------
    secretUrl : str, default is Undefined, optional
        The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as id on the azurerm_key_vault_secret resource.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.
    """


    secretUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderEncryptionSettingsKeyEncryptionKey:
    r"""
    A key_encryption_key block as defined below.

    Attributes
    ----------
    keyUrl : str, default is Undefined, optional
        The URL to the Key Vault Key used as the Key Encryption Key. This can be found as id on the azurerm_key_vault_key resource.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.
    """


    keyUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderSourceURIRef:
    r"""
    Reference to a ManagedDisk in compute to populate sourceUri.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderSourceURIRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderSourceURIRefPolicy


schema ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderSourceURIRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderSourceURISelector:
    r"""
    Selector for a ManagedDisk in compute to populate sourceUri.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderSourceURISelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderSourceURISelectorPolicy


schema ComputeAzureUpboundIoV1beta2SnapshotSpecInitProviderSourceURISelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2SnapshotSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2SnapshotSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2SnapshotSpecProviderConfigRefPolicy


schema ComputeAzureUpboundIoV1beta2SnapshotSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2SnapshotSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeAzureUpboundIoV1beta2SnapshotSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeAzureUpboundIoV1beta2SnapshotSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeAzureUpboundIoV1beta2SnapshotSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeAzureUpboundIoV1beta2SnapshotSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeAzureUpboundIoV1beta2SnapshotSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta2SnapshotSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta2SnapshotSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeAzureUpboundIoV1beta2SnapshotSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta2SnapshotSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeAzureUpboundIoV1beta2SnapshotSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeAzureUpboundIoV1beta2SnapshotStatus:
    r"""
    SnapshotStatus defines the observed state of Snapshot.

    Attributes
    ----------
    atProvider : ComputeAzureUpboundIoV1beta2SnapshotStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeAzureUpboundIoV1beta2SnapshotStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeAzureUpboundIoV1beta2SnapshotStatusAtProvider

    conditions?: [ComputeAzureUpboundIoV1beta2SnapshotStatusConditionsItems0]

    observedGeneration?: int


schema ComputeAzureUpboundIoV1beta2SnapshotStatusAtProvider:
    r"""
    compute azure upbound io v1beta2 snapshot status at provider

    Attributes
    ----------
    createOption : str, default is Undefined, optional
        Indicates how the snapshot is to be created. Possible values are Copy or Import.
    diskAccessId : str, default is Undefined, optional
        Specifies the ID of the Disk Access which should be used for this Snapshot. This is used in conjunction with setting network_access_policy to AllowPrivate.
    diskSizeGb : float, default is Undefined, optional
        The size of the Snapshotted Disk in GB.
    encryptionSettings : ComputeAzureUpboundIoV1beta2SnapshotStatusAtProviderEncryptionSettings, default is Undefined, optional
        encryption settings
    id : str, default is Undefined, optional
        The Snapshot ID.
    incrementalEnabled : bool, default is Undefined, optional
        Specifies if the Snapshot is incremental. Changing this forces a new resource to be created.
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    networkAccessPolicy : str, default is Undefined, optional
        Policy for accessing the disk via network. Possible values are AllowAll, AllowPrivate, or DenyAll. Defaults to AllowAll.
    publicNetworkAccessEnabled : bool, default is Undefined, optional
        Policy for controlling export on the disk. Possible values are true or false. Defaults to true.
    resourceGroupName : str, default is Undefined, optional
        The name of the resource group in which to create the Snapshot. Changing this forces a new resource to be created.
    sourceResourceId : str, default is Undefined, optional
        Specifies a reference to an existing snapshot, when create_option is Copy. Changing this forces a new resource to be created.
    sourceUri : str, default is Undefined, optional
        Specifies the URI to a Managed or Unmanaged Disk. Changing this forces a new resource to be created.
    storageAccountId : str, default is Undefined, optional
        Specifies the ID of an storage account. Used with source_uri to allow authorization during import of unmanaged blobs from a different subscription. Changing this forces a new resource to be created.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    trustedLaunchEnabled : bool, default is Undefined, optional
        Whether Trusted Launch is enabled for the Snapshot.
    """


    createOption?: str

    diskAccessId?: str

    diskSizeGb?: float

    encryptionSettings?: ComputeAzureUpboundIoV1beta2SnapshotStatusAtProviderEncryptionSettings

    id?: str

    incrementalEnabled?: bool

    location?: str

    networkAccessPolicy?: str

    publicNetworkAccessEnabled?: bool

    resourceGroupName?: str

    sourceResourceId?: str

    sourceUri?: str

    storageAccountId?: str

    tags?: {str:str}

    trustedLaunchEnabled?: bool


schema ComputeAzureUpboundIoV1beta2SnapshotStatusAtProviderEncryptionSettings:
    r"""
    A encryption_settings block as defined below.

    Attributes
    ----------
    diskEncryptionKey : ComputeAzureUpboundIoV1beta2SnapshotStatusAtProviderEncryptionSettingsDiskEncryptionKey, default is Undefined, optional
        disk encryption key
    enabled : bool, default is Undefined, optional
        enabled
    keyEncryptionKey : ComputeAzureUpboundIoV1beta2SnapshotStatusAtProviderEncryptionSettingsKeyEncryptionKey, default is Undefined, optional
        key encryption key
    """


    diskEncryptionKey?: ComputeAzureUpboundIoV1beta2SnapshotStatusAtProviderEncryptionSettingsDiskEncryptionKey

    enabled?: bool

    keyEncryptionKey?: ComputeAzureUpboundIoV1beta2SnapshotStatusAtProviderEncryptionSettingsKeyEncryptionKey


schema ComputeAzureUpboundIoV1beta2SnapshotStatusAtProviderEncryptionSettingsDiskEncryptionKey:
    r"""
    A disk_encryption_key block as defined below.

    Attributes
    ----------
    secretUrl : str, default is Undefined, optional
        The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as id on the azurerm_key_vault_secret resource.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.
    """


    secretUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2SnapshotStatusAtProviderEncryptionSettingsKeyEncryptionKey:
    r"""
    A key_encryption_key block as defined below.

    Attributes
    ----------
    keyUrl : str, default is Undefined, optional
        The URL to the Key Vault Key used as the Key Encryption Key. This can be found as id on the azurerm_key_vault_key resource.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.
    """


    keyUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta2SnapshotStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


