"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VirtualMachineExtension:
    r"""
    VirtualMachineExtension is the Schema for the VirtualMachineExtensions API. Manages a Virtual Machine Extension to provide post deployment configuration and run automated tasks.

    Attributes
    ----------
    apiVersion : str, default is "compute.azure.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VirtualMachineExtension", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpec, default is Undefined, required
        spec
    status : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.azure.upbound.io/v1beta1" = "compute.azure.upbound.io/v1beta1"

    kind: "VirtualMachineExtension" = "VirtualMachineExtension"

    metadata?: v1.ObjectMeta

    spec: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpec

    status?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionStatus


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpec:
    r"""
    VirtualMachineExtensionSpec defines the desired state of VirtualMachineExtension

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProvider

    initProvider?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecWriteConnectionSecretToRef


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProvider:
    r"""
    compute azure upbound io v1beta1 virtual machine extension spec for provider

    Attributes
    ----------
    autoUpgradeMinorVersion : bool, default is Undefined, optional
        Specifies if the platform deploys the latest minor version update to the type_handler_version specified.
    automaticUpgradeEnabled : bool, default is Undefined, optional
        Should the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
    failureSuppressionEnabled : bool, default is Undefined, optional
        Should failures from the extension be suppressed? Possible values are true or false. Defaults to false.
    protectedSettingsFromKeyVault : [ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderProtectedSettingsFromKeyVaultItems0], default is Undefined, optional
        A protected_settings_from_key_vault block as defined below.
    protectedSettingsSecretRef : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderProtectedSettingsSecretRef, default is Undefined, optional
        protected settings secret ref
    provisionAfterExtensions : [str], default is Undefined, optional
        Specifies the collection of extension names after which this extension needs to be provisioned.
    publisher : str, default is Undefined, optional
        The publisher of the extension, available publishers can be found by using the Azure CLI. Changing this forces a new resource to be created.
    settings : str, default is Undefined, optional
        The settings passed to the extension, these are specified as a JSON object in a string.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    $type : str, default is Undefined, optional
        The type of extension, available types for a publisher can be found using the Azure CLI.
    typeHandlerVersion : str, default is Undefined, optional
        Specifies the version of the extension to use, available versions can be found using the Azure CLI.
    virtualMachineId : str, default is Undefined, optional
        The ID of the Virtual Machine. Changing this forces a new resource to be created
    virtualMachineIdRef : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderVirtualMachineIDRef, default is Undefined, optional
        virtual machine Id ref
    virtualMachineIdSelector : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderVirtualMachineIDSelector, default is Undefined, optional
        virtual machine Id selector
    """


    autoUpgradeMinorVersion?: bool

    automaticUpgradeEnabled?: bool

    failureSuppressionEnabled?: bool

    protectedSettingsFromKeyVault?: [ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderProtectedSettingsFromKeyVaultItems0]

    protectedSettingsSecretRef?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderProtectedSettingsSecretRef

    provisionAfterExtensions?: [str]

    publisher?: str

    settings?: str

    tags?: {str:str}

    $type?: str

    typeHandlerVersion?: str

    virtualMachineId?: str

    virtualMachineIdRef?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderVirtualMachineIDRef

    virtualMachineIdSelector?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderVirtualMachineIDSelector


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderProtectedSettingsFromKeyVaultItems0:
    r"""
    compute azure upbound io v1beta1 virtual machine extension spec for provider protected settings from key vault items0

    Attributes
    ----------
    secretUrl : str, default is Undefined, optional
        The URL to the Key Vault Secret which stores the protected settings.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault.
    """


    secretUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderProtectedSettingsSecretRef:
    r"""
    The protected_settings passed to the extension, like settings, these are specified as a JSON object in a string.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderVirtualMachineIDRef:
    r"""
    Reference to a LinuxVirtualMachine in compute to populate virtualMachineId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderVirtualMachineIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderVirtualMachineIDRefPolicy


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderVirtualMachineIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderVirtualMachineIDSelector:
    r"""
    Selector for a LinuxVirtualMachine in compute to populate virtualMachineId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderVirtualMachineIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderVirtualMachineIDSelectorPolicy


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecForProviderVirtualMachineIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    autoUpgradeMinorVersion : bool, default is Undefined, optional
        Specifies if the platform deploys the latest minor version update to the type_handler_version specified.
    automaticUpgradeEnabled : bool, default is Undefined, optional
        Should the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
    failureSuppressionEnabled : bool, default is Undefined, optional
        Should failures from the extension be suppressed? Possible values are true or false. Defaults to false.
    protectedSettingsFromKeyVault : [ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecInitProviderProtectedSettingsFromKeyVaultItems0], default is Undefined, optional
        A protected_settings_from_key_vault block as defined below.
    provisionAfterExtensions : [str], default is Undefined, optional
        Specifies the collection of extension names after which this extension needs to be provisioned.
    publisher : str, default is Undefined, optional
        The publisher of the extension, available publishers can be found by using the Azure CLI. Changing this forces a new resource to be created.
    settings : str, default is Undefined, optional
        The settings passed to the extension, these are specified as a JSON object in a string.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    $type : str, default is Undefined, optional
        The type of extension, available types for a publisher can be found using the Azure CLI.
    typeHandlerVersion : str, default is Undefined, optional
        Specifies the version of the extension to use, available versions can be found using the Azure CLI.
    """


    autoUpgradeMinorVersion?: bool

    automaticUpgradeEnabled?: bool

    failureSuppressionEnabled?: bool

    protectedSettingsFromKeyVault?: [ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecInitProviderProtectedSettingsFromKeyVaultItems0]

    provisionAfterExtensions?: [str]

    publisher?: str

    settings?: str

    tags?: {str:str}

    $type?: str

    typeHandlerVersion?: str


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecInitProviderProtectedSettingsFromKeyVaultItems0:
    r"""
    compute azure upbound io v1beta1 virtual machine extension spec init provider protected settings from key vault items0

    Attributes
    ----------
    secretUrl : str, default is Undefined, optional
        The URL to the Key Vault Secret which stores the protected settings.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault.
    """


    secretUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecProviderConfigRefPolicy


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionStatus:
    r"""
    VirtualMachineExtensionStatus defines the observed state of VirtualMachineExtension.

    Attributes
    ----------
    atProvider : ComputeAzureUpboundIoV1beta1VirtualMachineExtensionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeAzureUpboundIoV1beta1VirtualMachineExtensionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeAzureUpboundIoV1beta1VirtualMachineExtensionStatusAtProvider

    conditions?: [ComputeAzureUpboundIoV1beta1VirtualMachineExtensionStatusConditionsItems0]

    observedGeneration?: int


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionStatusAtProvider:
    r"""
    compute azure upbound io v1beta1 virtual machine extension status at provider

    Attributes
    ----------
    autoUpgradeMinorVersion : bool, default is Undefined, optional
        Specifies if the platform deploys the latest minor version update to the type_handler_version specified.
    automaticUpgradeEnabled : bool, default is Undefined, optional
        Should the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
    failureSuppressionEnabled : bool, default is Undefined, optional
        Should failures from the extension be suppressed? Possible values are true or false. Defaults to false.
    id : str, default is Undefined, optional
        The ID of the Virtual Machine Extension.
    protectedSettingsFromKeyVault : [ComputeAzureUpboundIoV1beta1VirtualMachineExtensionStatusAtProviderProtectedSettingsFromKeyVaultItems0], default is Undefined, optional
        A protected_settings_from_key_vault block as defined below.
    provisionAfterExtensions : [str], default is Undefined, optional
        Specifies the collection of extension names after which this extension needs to be provisioned.
    publisher : str, default is Undefined, optional
        The publisher of the extension, available publishers can be found by using the Azure CLI. Changing this forces a new resource to be created.
    settings : str, default is Undefined, optional
        The settings passed to the extension, these are specified as a JSON object in a string.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    $type : str, default is Undefined, optional
        The type of extension, available types for a publisher can be found using the Azure CLI.
    typeHandlerVersion : str, default is Undefined, optional
        Specifies the version of the extension to use, available versions can be found using the Azure CLI.
    virtualMachineId : str, default is Undefined, optional
        The ID of the Virtual Machine. Changing this forces a new resource to be created
    """


    autoUpgradeMinorVersion?: bool

    automaticUpgradeEnabled?: bool

    failureSuppressionEnabled?: bool

    id?: str

    protectedSettingsFromKeyVault?: [ComputeAzureUpboundIoV1beta1VirtualMachineExtensionStatusAtProviderProtectedSettingsFromKeyVaultItems0]

    provisionAfterExtensions?: [str]

    publisher?: str

    settings?: str

    tags?: {str:str}

    $type?: str

    typeHandlerVersion?: str

    virtualMachineId?: str


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionStatusAtProviderProtectedSettingsFromKeyVaultItems0:
    r"""
    compute azure upbound io v1beta1 virtual machine extension status at provider protected settings from key vault items0

    Attributes
    ----------
    secretUrl : str, default is Undefined, optional
        The URL to the Key Vault Secret which stores the protected settings.
    sourceVaultId : str, default is Undefined, optional
        The ID of the source Key Vault.
    """


    secretUrl?: str

    sourceVaultId?: str


schema ComputeAzureUpboundIoV1beta1VirtualMachineExtensionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


