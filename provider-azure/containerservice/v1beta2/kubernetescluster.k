"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema KubernetesCluster:
    r"""
    KubernetesCluster is the Schema for the KubernetesClusters API. Manages a managed Kubernetes Cluster (also known as AKS / Azure Kubernetes Service)

    Attributes
    ----------
    apiVersion : str, default is "containerservice.azure.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "KubernetesCluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpec, default is Undefined, required
        spec
    status : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "containerservice.azure.upbound.io/v1beta2" = "containerservice.azure.upbound.io/v1beta2"

    kind: "KubernetesCluster" = "KubernetesCluster"

    metadata?: v1.ObjectMeta

    spec: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpec

    status?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatus


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpec:
    r"""
    KubernetesClusterSpec defines the desired state of KubernetesCluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProvider

    initProvider?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecWriteConnectionSecretToRef


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProvider:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster spec for provider

    Attributes
    ----------
    aciConnectorLinux : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinux, default is Undefined, optional
        aci connector linux
    apiServerAccessProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfile, default is Undefined, optional
        api server access profile
    apiServerAuthorizedIpRanges : [str], default is Undefined, optional
        Deprecated in favor of `spec.forProvider.apiServerAccessProfile[0].authorizedIpRanges`
    autoScalerProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAutoScalerProfile, default is Undefined, optional
        auto scaler profile
    automaticChannelUpgrade : str, default is Undefined, optional
        The upgrade channel for this Kubernetes Cluster. Possible values are patch, rapid, node-image and stable. Omitting this field sets this value to none.
    azureActiveDirectoryRoleBasedAccessControl : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAzureActiveDirectoryRoleBasedAccessControl, default is Undefined, optional
        azure active directory role based access control
    azurePolicyEnabled : bool, default is Undefined, optional
        Should the Azure Policy Add-On be enabled? For more details please visit Understand Azure Policy for Azure Kubernetes Service
    confidentialComputing : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderConfidentialComputing, default is Undefined, optional
        confidential computing
    costAnalysisEnabled : bool, default is Undefined, optional
        Should cost analysis be enabled for this Kubernetes Cluster? Defaults to false. The sku_tier must be set to Standard or Premium to enable this feature. Enabling this will add Kubernetes Namespace and Deployment details to the Cost Analysis views in the Azure portal.
    customCaTrustCertificatesBase64 : [str], default is Undefined, optional
        custom ca trust certificates base64
    defaultNodePool : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePool, default is Undefined, optional
        default node pool
    diskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used for the Nodes and Volumes. More information can be found in the documentation. Changing this forces a new resource to be created.
    dnsPrefix : str, default is Undefined, optional
        DNS prefix specified when creating the managed cluster. Possible values must begin and end with a letter or number, contain only letters, numbers, and hyphens and be between 1 and 54 characters in length. Changing this forces a new resource to be created.
    dnsPrefixPrivateCluster : str, default is Undefined, optional
        Specifies the DNS prefix to use with private clusters. Changing this forces a new resource to be created.
    edgeZone : str, default is Undefined, optional
        Specifies the Edge Zone within the Azure Region where this Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
    enablePodSecurityPolicy : bool, default is Undefined, optional
        enable pod security policy
    httpApplicationRoutingEnabled : bool, default is Undefined, optional
        Should HTTP Application Routing be enabled?
    httpProxyConfig : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderHTTPProxyConfig, default is Undefined, optional
        http proxy config
    identity : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentity, default is Undefined, optional
        identity
    imageCleanerEnabled : bool, default is Undefined, optional
        Specifies whether Image Cleaner is enabled.
    imageCleanerIntervalHours : float, default is Undefined, optional
        Specifies the interval in hours when images should be cleaned up. Defaults to 48.
    ingressApplicationGateway : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGateway, default is Undefined, optional
        ingress application gateway
    keyManagementService : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderKeyManagementService, default is Undefined, optional
        key management service
    keyVaultSecretsProvider : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderKeyVaultSecretsProvider, default is Undefined, optional
        key vault secrets provider
    kubeletIdentity : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderKubeletIdentity, default is Undefined, optional
        kubelet identity
    kubernetesVersion : str, default is Undefined, optional
        Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as 1.22 are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in the documentation.
    linuxProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderLinuxProfile, default is Undefined, optional
        linux profile
    localAccountDisabled : bool, default is Undefined, optional
        If true local accounts will be disabled. See the documentation for more information.
    location : str, default is Undefined, optional
        The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
    maintenanceWindow : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindow, default is Undefined, optional
        maintenance window
    maintenanceWindowAutoUpgrade : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowAutoUpgrade, default is Undefined, optional
        maintenance window auto upgrade
    maintenanceWindowNodeOs : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowNodeOs, default is Undefined, optional
        maintenance window node os
    microsoftDefender : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMicrosoftDefender, default is Undefined, optional
        microsoft defender
    monitorMetrics : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMonitorMetrics, default is Undefined, optional
        monitor metrics
    networkProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderNetworkProfile, default is Undefined, optional
        network profile
    nodeOsChannelUpgrade : str, default is Undefined, optional
        The upgrade channel for this Kubernetes Cluster Nodes' OS Image. Possible values are Unmanaged, SecurityPatch, NodeImage and None.
    nodeResourceGroup : str, default is Undefined, optional
        The auto-generated Resource Group which contains the resources for this Managed Kubernetes Cluster.
    oidcIssuerEnabled : bool, default is Undefined, optional
        Enable or Disable the OIDC issuer URL
    omsAgent : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderOmsAgent, default is Undefined, optional
        oms agent
    openServiceMeshEnabled : bool, default is Undefined, optional
        Is Open Service Mesh enabled? For more details, please visit Open Service Mesh for AKS.
    privateClusterEnabled : bool, default is Undefined, optional
        Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to false. Changing this forces a new resource to be created.
    privateClusterPublicFqdnEnabled : bool, default is Undefined, optional
        Specifies whether a Public FQDN for this Private Cluster should be added. Defaults to false.
    privateDnsZoneId : str, default is Undefined, optional
        Either the ID of Private DNS Zone which should be delegated to this Cluster, System to have AKS manage this or None. In case of None you will need to bring your own DNS server and set up resolving, otherwise, the cluster will have issues after provisioning. Changing this forces a new resource to be created.
    privateDnsZoneIdRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderPrivateDNSZoneIDRef, default is Undefined, optional
        private Dns zone Id ref
    privateDnsZoneIdSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderPrivateDNSZoneIDSelector, default is Undefined, optional
        private Dns zone Id selector
    publicNetworkAccessEnabled : bool, default is Undefined, optional
        public network access enabled
    resourceGroupName : str, default is Undefined, optional
        Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
    resourceGroupNameRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderResourceGroupNameRef, default is Undefined, optional
        resource group name ref
    resourceGroupNameSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderResourceGroupNameSelector, default is Undefined, optional
        resource group name selector
    roleBasedAccessControlEnabled : bool, default is Undefined, optional
        Whether Role Based Access Control for the Kubernetes Cluster should be enabled. Defaults to true. Changing this forces a new resource to be created.
    runCommandEnabled : bool, default is Undefined, optional
        Whether to enable run command for the cluster or not. Defaults to true.
    serviceMeshProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderServiceMeshProfile, default is Undefined, optional
        service mesh profile
    servicePrincipal : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderServicePrincipal, default is Undefined, optional
        service principal
    skuTier : str, default is Undefined, optional
        The SKU Tier that should be used for this Kubernetes Cluster. Possible values are Free, Standard (which includes the Uptime SLA) and Premium. Defaults to Free.
    storageProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderStorageProfile, default is Undefined, optional
        storage profile
    supportPlan : str, default is Undefined, optional
        Specifies the support plan which should be used for this Kubernetes Cluster. Possible values are KubernetesOfficial and AKSLongTermSupport. Defaults to KubernetesOfficial.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    webAppRouting : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWebAppRouting, default is Undefined, optional
        web app routing
    windowsProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWindowsProfile, default is Undefined, optional
        windows profile
    workloadAutoscalerProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWorkloadAutoscalerProfile, default is Undefined, optional
        workload autoscaler profile
    workloadIdentityEnabled : bool, default is Undefined, optional
        Specifies whether Azure AD Workload Identity should be enabled for the Cluster. Defaults to false.
    """


    aciConnectorLinux?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinux

    apiServerAccessProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfile

    apiServerAuthorizedIpRanges?: [str]

    autoScalerProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAutoScalerProfile

    automaticChannelUpgrade?: str

    azureActiveDirectoryRoleBasedAccessControl?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAzureActiveDirectoryRoleBasedAccessControl

    azurePolicyEnabled?: bool

    confidentialComputing?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderConfidentialComputing

    costAnalysisEnabled?: bool

    customCaTrustCertificatesBase64?: [str]

    defaultNodePool?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePool

    diskEncryptionSetId?: str

    dnsPrefix?: str

    dnsPrefixPrivateCluster?: str

    edgeZone?: str

    enablePodSecurityPolicy?: bool

    httpApplicationRoutingEnabled?: bool

    httpProxyConfig?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderHTTPProxyConfig

    identity?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentity

    imageCleanerEnabled?: bool

    imageCleanerIntervalHours?: float

    ingressApplicationGateway?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGateway

    keyManagementService?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderKeyManagementService

    keyVaultSecretsProvider?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderKeyVaultSecretsProvider

    kubeletIdentity?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderKubeletIdentity

    kubernetesVersion?: str

    linuxProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderLinuxProfile

    localAccountDisabled?: bool

    location?: str

    maintenanceWindow?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindow

    maintenanceWindowAutoUpgrade?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowAutoUpgrade

    maintenanceWindowNodeOs?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowNodeOs

    microsoftDefender?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMicrosoftDefender

    monitorMetrics?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMonitorMetrics

    networkProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderNetworkProfile

    nodeOsChannelUpgrade?: str

    nodeResourceGroup?: str

    oidcIssuerEnabled?: bool

    omsAgent?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderOmsAgent

    openServiceMeshEnabled?: bool

    privateClusterEnabled?: bool

    privateClusterPublicFqdnEnabled?: bool

    privateDnsZoneId?: str

    privateDnsZoneIdRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderPrivateDNSZoneIDRef

    privateDnsZoneIdSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderPrivateDNSZoneIDSelector

    publicNetworkAccessEnabled?: bool

    resourceGroupName?: str

    resourceGroupNameRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderResourceGroupNameRef

    resourceGroupNameSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderResourceGroupNameSelector

    roleBasedAccessControlEnabled?: bool

    runCommandEnabled?: bool

    serviceMeshProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderServiceMeshProfile

    servicePrincipal?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderServicePrincipal

    skuTier?: str

    storageProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderStorageProfile

    supportPlan?: str

    tags?: {str:str}

    webAppRouting?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWebAppRouting

    windowsProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWindowsProfile

    workloadAutoscalerProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWorkloadAutoscalerProfile

    workloadIdentityEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfile:
    r"""
    An api_server_access_profile block as defined below.

    Attributes
    ----------
    authorizedIpRanges : [str], default is Undefined, optional
        Set of authorized IP ranges to allow access to API server, e.g. ["198.51.100.0/24"].
    subnetId : str, default is Undefined, optional
        The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See this page for further details.
    subnetIdRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfileSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfileSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    vnetIntegrationEnabled : bool, default is Undefined, optional
        vnet integration enabled
    """


    authorizedIpRanges?: [str]

    subnetId?: str

    subnetIdRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfileSubnetIDRef

    subnetIdSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfileSubnetIDSelector

    vnetIntegrationEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfileSubnetIDRef:
    r"""
    Reference to a Subnet in network to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfileSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfileSubnetIDRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfileSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfileSubnetIDSelector:
    r"""
    Selector for a Subnet in network to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfileSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfileSubnetIDSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAPIServerAccessProfileSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinux:
    r"""
    A aci_connector_linux block as defined below. For more details, please visit Create and configure an AKS cluster to use virtual nodes.

    Attributes
    ----------
    subnetName : str, default is Undefined, optional
        The subnet name for the virtual nodes to run.
    subnetNameRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinuxSubnetNameRef, default is Undefined, optional
        subnet name ref
    subnetNameSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinuxSubnetNameSelector, default is Undefined, optional
        subnet name selector
    """


    subnetName?: str

    subnetNameRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinuxSubnetNameRef

    subnetNameSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinuxSubnetNameSelector


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinuxSubnetNameRef:
    r"""
    Reference to a Subnet in network to populate subnetName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinuxSubnetNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinuxSubnetNameRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinuxSubnetNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinuxSubnetNameSelector:
    r"""
    Selector for a Subnet in network to populate subnetName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinuxSubnetNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinuxSubnetNameSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAciConnectorLinuxSubnetNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAutoScalerProfile:
    r"""
    A auto_scaler_profile block as defined below.

    Attributes
    ----------
    balanceSimilarNodeGroups : bool, default is Undefined, optional
        Detect similar node groups and balance the number of nodes between them. Defaults to false.
    emptyBulkDeleteMax : str, default is Undefined, optional
        Maximum number of empty nodes that can be deleted at the same time. Defaults to 10.
    expander : str, default is Undefined, optional
        Expander to use. Possible values are least-waste, priority, most-pods and random. Defaults to random.
    maxGracefulTerminationSec : str, default is Undefined, optional
        Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node. Defaults to 600.
    maxNodeProvisioningTime : str, default is Undefined, optional
        Maximum time the autoscaler waits for a node to be provisioned. Defaults to 15m.
    maxUnreadyNodes : float, default is Undefined, optional
        Maximum Number of allowed unready nodes. Defaults to 3.
    maxUnreadyPercentage : float, default is Undefined, optional
        Maximum percentage of unready nodes the cluster autoscaler will stop if the percentage is exceeded. Defaults to 45.
    newPodScaleUpDelay : str, default is Undefined, optional
        For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. Defaults to 10s.
    scaleDownDelayAfterAdd : str, default is Undefined, optional
        How long after the scale up of AKS nodes the scale down evaluation resumes. Defaults to 10m.
    scaleDownDelayAfterDelete : str, default is Undefined, optional
        How long after node deletion that scale down evaluation resumes. Defaults to the value used for scan_interval.
    scaleDownDelayAfterFailure : str, default is Undefined, optional
        How long after scale down failure that scale down evaluation resumes. Defaults to 3m.
    scaleDownUnneeded : str, default is Undefined, optional
        How long a node should be unneeded before it is eligible for scale down. Defaults to 10m.
    scaleDownUnready : str, default is Undefined, optional
        How long an unready node should be unneeded before it is eligible for scale down. Defaults to 20m.
    scaleDownUtilizationThreshold : str, default is Undefined, optional
        Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down. Defaults to 0.5.
    scanInterval : str, default is Undefined, optional
        How often the AKS Cluster should be re-evaluated for scale up/down. Defaults to 10s.
    skipNodesWithLocalStorage : bool, default is Undefined, optional
        If true cluster autoscaler will never delete nodes with pods with local storage, for example, EmptyDir or HostPath. Defaults to true.
    skipNodesWithSystemPods : bool, default is Undefined, optional
        If true cluster autoscaler will never delete nodes with pods from kube-system (except for DaemonSet or mirror pods). Defaults to true.
    """


    balanceSimilarNodeGroups?: bool

    emptyBulkDeleteMax?: str

    expander?: str

    maxGracefulTerminationSec?: str

    maxNodeProvisioningTime?: str

    maxUnreadyNodes?: float

    maxUnreadyPercentage?: float

    newPodScaleUpDelay?: str

    scaleDownDelayAfterAdd?: str

    scaleDownDelayAfterDelete?: str

    scaleDownDelayAfterFailure?: str

    scaleDownUnneeded?: str

    scaleDownUnready?: str

    scaleDownUtilizationThreshold?: str

    scanInterval?: str

    skipNodesWithLocalStorage?: bool

    skipNodesWithSystemPods?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAzureActiveDirectoryRoleBasedAccessControl:
    r"""
    A azure_active_directory_role_based_access_control block as defined below.

    Attributes
    ----------
    adminGroupObjectIds : [str], default is Undefined, optional
        A list of Object IDs of Azure Active Directory Groups which should have Admin Role on the Cluster.
    azureRbacEnabled : bool, default is Undefined, optional
        Is Role Based Access Control based on Azure AD enabled?
    clientAppId : str, default is Undefined, optional
        The Kubernetes Managed Cluster ID.
    managed : bool, default is Undefined, optional
        Is the Azure Active Directory integration Managed, meaning that Azure will create/manage the Service Principal used for integration. Defaults to false.
    serverAppId : str, default is Undefined, optional
        The Kubernetes Managed Cluster ID.
    serverAppSecretSecretRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAzureActiveDirectoryRoleBasedAccessControlServerAppSecretSecretRef, default is Undefined, optional
        server app secret secret ref
    tenantId : str, default is Undefined, optional
        The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
    """


    adminGroupObjectIds?: [str]

    azureRbacEnabled?: bool

    clientAppId?: str

    managed?: bool

    serverAppId?: str

    serverAppSecretSecretRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAzureActiveDirectoryRoleBasedAccessControlServerAppSecretSecretRef

    tenantId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderAzureActiveDirectoryRoleBasedAccessControlServerAppSecretSecretRef:
    r"""
    A SecretKeySelector is a reference to a secret key in an arbitrary namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderConfidentialComputing:
    r"""
    A confidential_computing block as defined below. For more details please the documentation

    Attributes
    ----------
    sgxQuoteHelperEnabled : bool, default is Undefined, optional
        Should the SGX quote helper be enabled?
    """


    sgxQuoteHelperEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePool:
    r"""
    A default_node_pool block as defined below.

    Attributes
    ----------
    capacityReservationGroupId : str, default is Undefined, optional
        Specifies the ID of the Capacity Reservation Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
    customCaTrustEnabled : bool, default is Undefined, optional
        custom ca trust enabled
    enableAutoScaling : bool, default is Undefined, optional
        Should the Kubernetes Auto Scaler be enabled for this Node Pool?
    enableHostEncryption : bool, default is Undefined, optional
        Should the nodes in the Default Node Pool have host encryption enabled? temporary_name_for_rotation must be specified when changing this property.
    enableNodePublicIp : bool, default is Undefined, optional
        Should nodes in this Node Pool have a Public IP Address? temporary_name_for_rotation must be specified when changing this property.
    fipsEnabled : bool, default is Undefined, optional
        Should the nodes in this Node Pool have Federal Information Processing Standard enabled? temporary_name_for_rotation must be specified when changing this block. Changing this forces a new resource to be created.
    gpuInstance : str, default is Undefined, optional
        Specifies the GPU MIG instance profile for supported GPU VM SKU. The allowed values are MIG1g, MIG2g, MIG3g, MIG4g and MIG7g. Changing this forces a new resource to be created.
    hostGroupId : str, default is Undefined, optional
        Specifies the ID of the Host Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
    kubeletConfig : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolKubeletConfig, default is Undefined, optional
        kubelet config
    kubeletDiskType : str, default is Undefined, optional
        The type of disk used by kubelet. Possible values are OS and Temporary.
    linuxOsConfig : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolLinuxOsConfig, default is Undefined, optional
        linux os config
    maxCount : float, default is Undefined, optional
        The maximum number of nodes which should exist in this Node Pool. If specified this must be between 1 and 1000.
    maxPods : float, default is Undefined, optional
        The maximum number of pods that can run on each agent. temporary_name_for_rotation must be specified when changing this property.
    messageOfTheDay : str, default is Undefined, optional
        message of the day
    minCount : float, default is Undefined, optional
        The minimum number of nodes which should exist in this Node Pool. If specified this must be between 1 and 1000.
    name : str, default is Undefined, optional
        The name which should be used for the default Kubernetes Node Pool.
    nodeCount : float, default is Undefined, optional
        The initial number of nodes which should exist in this Node Pool. If specified this must be between 1 and 1000 and between min_count and max_count.
    nodeLabels : {str:str}, default is Undefined, optional
        A map of Kubernetes labels which should be applied to nodes in the Default Node Pool.
    nodeNetworkProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolNodeNetworkProfile, default is Undefined, optional
        node network profile
    nodePublicIpPrefixId : str, default is Undefined, optional
        Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. enable_node_public_ip should be true. Changing this forces a new resource to be created.
    nodeTaints : [str], default is Undefined, optional
        node taints
    onlyCriticalAddonsEnabled : bool, default is Undefined, optional
        Enabling this option will taint default node pool with CriticalAddonsOnly=true:NoSchedule taint. temporary_name_for_rotation must be specified when changing this property.
    orchestratorVersion : str, default is Undefined, optional
        Version of Kubernetes used for the Agents. If not specified, the default node pool will be created with the version specified by kubernetes_version. If both are unspecified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as 1.22 are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in the documentation.
    osDiskSizeGb : float, default is Undefined, optional
        The size of the OS Disk which should be used for each agent in the Node Pool. temporary_name_for_rotation must be specified when attempting a change.
    osDiskType : str, default is Undefined, optional
        The type of disk which should be used for the Operating System. Possible values are Ephemeral and Managed. Defaults to Managed. temporary_name_for_rotation must be specified when attempting a change.
    osSku : str, default is Undefined, optional
        Specifies the OS SKU used by the agent pool. Possible values are AzureLinux, Ubuntu, Windows2019 and Windows2022. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated. Changing this from AzureLinux or Ubuntu to AzureLinux or Ubuntu will not replace the resource, otherwise temporary_name_for_rotation must be specified when attempting a change.
    podSubnetId : str, default is Undefined, optional
        The ID of the Subnet where the pods in the default Node Pool should exist.
    podSubnetIdRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolPodSubnetIDRef, default is Undefined, optional
        pod subnet Id ref
    podSubnetIdSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolPodSubnetIDSelector, default is Undefined, optional
        pod subnet Id selector
    proximityPlacementGroupId : str, default is Undefined, optional
        The ID of the Proximity Placement Group. Changing this forces a new resource to be created.
    scaleDownMode : str, default is Undefined, optional
        Specifies the autoscaling behaviour of the Kubernetes Cluster. Allowed values are Delete and Deallocate. Defaults to Delete.
    snapshotId : str, default is Undefined, optional
        The ID of the Snapshot which should be used to create this default Node Pool. temporary_name_for_rotation must be specified when changing this property.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the Node Pool.
    temporaryNameForRotation : str, default is Undefined, optional
        Specifies the name of the temporary node pool used to cycle the default node pool for VM resizing.
    $type : str, default is Undefined, optional
        The type of Node Pool which should be created. Possible values are AvailabilitySet and VirtualMachineScaleSets. Defaults to VirtualMachineScaleSets. Changing this forces a new resource to be created.
    ultraSsdEnabled : bool, default is Undefined, optional
        Used to specify whether the UltraSSD is enabled in the Default Node Pool. Defaults to false. See the documentation for more information. temporary_name_for_rotation must be specified when attempting a change.
    upgradeSettings : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolUpgradeSettings, default is Undefined, optional
        upgrade settings
    vmSize : str, default is Undefined, optional
        The size of the Virtual Machine, such as Standard_DS2_v2. temporary_name_for_rotation must be specified when attempting a resize.
    vnetSubnetId : str, default is Undefined, optional
        The ID of a Subnet where the Kubernetes Node Pool should exist.
    vnetSubnetIdRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolVnetSubnetIDRef, default is Undefined, optional
        vnet subnet Id ref
    vnetSubnetIdSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolVnetSubnetIDSelector, default is Undefined, optional
        vnet subnet Id selector
    workloadRuntime : str, default is Undefined, optional
        Specifies the workload runtime used by the node pool. Possible value is OCIContainer.
    zones : [str], default is Undefined, optional
        Specifies a list of Availability Zones in which this Kubernetes Cluster should be located. temporary_name_for_rotation must be specified when changing this property.
    """


    capacityReservationGroupId?: str

    customCaTrustEnabled?: bool

    enableAutoScaling?: bool

    enableHostEncryption?: bool

    enableNodePublicIp?: bool

    fipsEnabled?: bool

    gpuInstance?: str

    hostGroupId?: str

    kubeletConfig?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolKubeletConfig

    kubeletDiskType?: str

    linuxOsConfig?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolLinuxOsConfig

    maxCount?: float

    maxPods?: float

    messageOfTheDay?: str

    minCount?: float

    name?: str

    nodeCount?: float

    nodeLabels?: {str:str}

    nodeNetworkProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolNodeNetworkProfile

    nodePublicIpPrefixId?: str

    nodeTaints?: [str]

    onlyCriticalAddonsEnabled?: bool

    orchestratorVersion?: str

    osDiskSizeGb?: float

    osDiskType?: str

    osSku?: str

    podSubnetId?: str

    podSubnetIdRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolPodSubnetIDRef

    podSubnetIdSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolPodSubnetIDSelector

    proximityPlacementGroupId?: str

    scaleDownMode?: str

    snapshotId?: str

    tags?: {str:str}

    temporaryNameForRotation?: str

    $type?: str

    ultraSsdEnabled?: bool

    upgradeSettings?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolUpgradeSettings

    vmSize?: str

    vnetSubnetId?: str

    vnetSubnetIdRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolVnetSubnetIDRef

    vnetSubnetIdSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolVnetSubnetIDSelector

    workloadRuntime?: str

    zones?: [str]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolKubeletConfig:
    r"""
    A kubelet_config block as defined below. temporary_name_for_rotation must be specified when changing this block.

    Attributes
    ----------
    allowedUnsafeSysctls : [str], default is Undefined, optional
        Specifies the allow list of unsafe sysctls command or patterns (ending in *).
    containerLogMaxLine : float, default is Undefined, optional
        Specifies the maximum number of container log files that can be present for a container. must be at least 2.
    containerLogMaxSizeMb : float, default is Undefined, optional
        Specifies the maximum size (e.g. 10MB) of container log file before it is rotated.
    cpuCfsQuotaEnabled : bool, default is Undefined, optional
        Is CPU CFS quota enforcement for containers enabled?
    cpuCfsQuotaPeriod : str, default is Undefined, optional
        Specifies the CPU CFS quota period value.
    cpuManagerPolicy : str, default is Undefined, optional
        Specifies the CPU Manager policy to use. Possible values are none and static,.
    imageGcHighThreshold : float, default is Undefined, optional
        Specifies the percent of disk usage above which image garbage collection is always run. Must be between 0 and 100.
    imageGcLowThreshold : float, default is Undefined, optional
        Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between 0 and 100.
    podMaxPid : float, default is Undefined, optional
        Specifies the maximum number of processes per pod.
    topologyManagerPolicy : str, default is Undefined, optional
        Specifies the Topology Manager policy to use. Possible values are none, best-effort, restricted or single-numa-node.
    """


    allowedUnsafeSysctls?: [str]

    containerLogMaxLine?: float

    containerLogMaxSizeMb?: float

    cpuCfsQuotaEnabled?: bool

    cpuCfsQuotaPeriod?: str

    cpuManagerPolicy?: str

    imageGcHighThreshold?: float

    imageGcLowThreshold?: float

    podMaxPid?: float

    topologyManagerPolicy?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolLinuxOsConfig:
    r"""
    A linux_os_config block as defined below. temporary_name_for_rotation must be specified when changing this block.

    Attributes
    ----------
    swapFileSizeMb : float, default is Undefined, optional
        Specifies the size of the swap file on each node in MB.
    sysctlConfig : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolLinuxOsConfigSysctlConfig, default is Undefined, optional
        sysctl config
    transparentHugePageDefrag : str, default is Undefined, optional
        specifies the defrag configuration for Transparent Huge Page. Possible values are always, defer, defer+madvise, madvise and never.
    transparentHugePageEnabled : str, default is Undefined, optional
        Specifies the Transparent Huge Page enabled configuration. Possible values are always, madvise and never.
    """


    swapFileSizeMb?: float

    sysctlConfig?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolLinuxOsConfigSysctlConfig

    transparentHugePageDefrag?: str

    transparentHugePageEnabled?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolLinuxOsConfigSysctlConfig:
    r"""
    A sysctl_config block as defined below.

    Attributes
    ----------
    fsAioMaxNr : float, default is Undefined, optional
        The sysctl setting fs.aio-max-nr. Must be between 65536 and 6553500.
    fsFileMax : float, default is Undefined, optional
        The sysctl setting fs.file-max. Must be between 8192 and 12000500.
    fsInotifyMaxUserWatches : float, default is Undefined, optional
        The sysctl setting fs.inotify.max_user_watches. Must be between 781250 and 2097152.
    fsNrOpen : float, default is Undefined, optional
        The sysctl setting fs.nr_open. Must be between 8192 and 20000500.
    kernelThreadsMax : float, default is Undefined, optional
        The sysctl setting kernel.threads-max. Must be between 20 and 513785.
    netCoreNetdevMaxBacklog : float, default is Undefined, optional
        The sysctl setting net.core.netdev_max_backlog. Must be between 1000 and 3240000.
    netCoreOptmemMax : float, default is Undefined, optional
        The sysctl setting net.core.optmem_max. Must be between 20480 and 4194304.
    netCoreRmemDefault : float, default is Undefined, optional
        The sysctl setting net.core.rmem_default. Must be between 212992 and 134217728.
    netCoreRmemMax : float, default is Undefined, optional
        The sysctl setting net.core.rmem_max. Must be between 212992 and 134217728.
    netCoreSomaxconn : float, default is Undefined, optional
        The sysctl setting net.core.somaxconn. Must be between 4096 and 3240000.
    netCoreWmemDefault : float, default is Undefined, optional
        The sysctl setting net.core.wmem_default. Must be between 212992 and 134217728.
    netCoreWmemMax : float, default is Undefined, optional
        The sysctl setting net.core.wmem_max. Must be between 212992 and 134217728.
    netIpv4IpLocalPortRangeMax : float, default is Undefined, optional
        The sysctl setting net.ipv4.ip_local_port_range max value. Must be between 32768 and 65535.
    netIpv4IpLocalPortRangeMin : float, default is Undefined, optional
        The sysctl setting net.ipv4.ip_local_port_range min value. Must be between 1024 and 60999.
    netIpv4NeighDefaultGcThresh1 : float, default is Undefined, optional
        The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between 128 and 80000.
    netIpv4NeighDefaultGcThresh2 : float, default is Undefined, optional
        The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between 512 and 90000.
    netIpv4NeighDefaultGcThresh3 : float, default is Undefined, optional
        The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between 1024 and 100000.
    netIpv4TcpFinTimeout : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_fin_timeout. Must be between 5 and 120.
    netIpv4TcpKeepaliveIntvl : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between 10 and 90.
    netIpv4TcpKeepaliveProbes : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between 1 and 15.
    netIpv4TcpKeepaliveTime : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_keepalive_time. Must be between 30 and 432000.
    netIpv4TcpMaxSynBacklog : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between 128 and 3240000.
    netIpv4TcpMaxTwBuckets : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between 8000 and 1440000.
    netIpv4TcpTwReuse : bool, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_tw_reuse.
    netNetfilterNfConntrackBuckets : float, default is Undefined, optional
        The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between 65536 and 524288.
    netNetfilterNfConntrackMax : float, default is Undefined, optional
        The sysctl setting net.netfilter.nf_conntrack_max. Must be between 131072 and 2097152.
    vmMaxMapCount : float, default is Undefined, optional
        The sysctl setting vm.max_map_count. Must be between 65530 and 262144.
    vmSwappiness : float, default is Undefined, optional
        The sysctl setting vm.swappiness. Must be between 0 and 100.
    vmVfsCachePressure : float, default is Undefined, optional
        The sysctl setting vm.vfs_cache_pressure. Must be between 0 and 100.
    """


    fsAioMaxNr?: float

    fsFileMax?: float

    fsInotifyMaxUserWatches?: float

    fsNrOpen?: float

    kernelThreadsMax?: float

    netCoreNetdevMaxBacklog?: float

    netCoreOptmemMax?: float

    netCoreRmemDefault?: float

    netCoreRmemMax?: float

    netCoreSomaxconn?: float

    netCoreWmemDefault?: float

    netCoreWmemMax?: float

    netIpv4IpLocalPortRangeMax?: float

    netIpv4IpLocalPortRangeMin?: float

    netIpv4NeighDefaultGcThresh1?: float

    netIpv4NeighDefaultGcThresh2?: float

    netIpv4NeighDefaultGcThresh3?: float

    netIpv4TcpFinTimeout?: float

    netIpv4TcpKeepaliveIntvl?: float

    netIpv4TcpKeepaliveProbes?: float

    netIpv4TcpKeepaliveTime?: float

    netIpv4TcpMaxSynBacklog?: float

    netIpv4TcpMaxTwBuckets?: float

    netIpv4TcpTwReuse?: bool

    netNetfilterNfConntrackBuckets?: float

    netNetfilterNfConntrackMax?: float

    vmMaxMapCount?: float

    vmSwappiness?: float

    vmVfsCachePressure?: float


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolNodeNetworkProfile:
    r"""
    A node_network_profile block as documented below.

    Attributes
    ----------
    allowedHostPorts : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolNodeNetworkProfileAllowedHostPortsItems0], default is Undefined, optional
        One or more allowed_host_ports blocks as defined below.
    applicationSecurityGroupIds : [str], default is Undefined, optional
        A list of Application Security Group IDs which should be associated with this Node Pool.
    nodePublicIpTags : {str:str}, default is Undefined, optional
        Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
    """


    allowedHostPorts?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolNodeNetworkProfileAllowedHostPortsItems0]

    applicationSecurityGroupIds?: [str]

    nodePublicIpTags?: {str:str}


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolNodeNetworkProfileAllowedHostPortsItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster spec for provider default node pool node network profile allowed host ports items0

    Attributes
    ----------
    portEnd : float, default is Undefined, optional
        Specifies the end of the port range.
    portStart : float, default is Undefined, optional
        Specifies the start of the port range.
    $protocol : str, default is Undefined, optional
        Specifies the protocol of the port range. Possible values are TCP and UDP.
    """


    portEnd?: float

    portStart?: float

    $protocol?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolPodSubnetIDRef:
    r"""
    Reference to a Subnet in network to populate podSubnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolPodSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolPodSubnetIDRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolPodSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolPodSubnetIDSelector:
    r"""
    Selector for a Subnet in network to populate podSubnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolPodSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolPodSubnetIDSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolPodSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolUpgradeSettings:
    r"""
    A upgrade_settings block as documented below.

    Attributes
    ----------
    drainTimeoutInMinutes : float, default is Undefined, optional
        The amount of time in minutes to wait on eviction of pods and graceful termination per node. This eviction wait time honors pod disruption budgets for upgrades. If this time is exceeded, the upgrade fails. Unsetting this after configuring it will force a new resource to be created.
    maxSurge : str, default is Undefined, optional
        The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
    nodeSoakDurationInMinutes : float, default is Undefined, optional
        The amount of time in minutes to wait after draining a node and before reimaging and moving on to next node. Defaults to 0.
    """


    drainTimeoutInMinutes?: float

    maxSurge?: str

    nodeSoakDurationInMinutes?: float


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolVnetSubnetIDRef:
    r"""
    Reference to a Subnet in network to populate vnetSubnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolVnetSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolVnetSubnetIDRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolVnetSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolVnetSubnetIDSelector:
    r"""
    Selector for a Subnet in network to populate vnetSubnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolVnetSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolVnetSubnetIDSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderDefaultNodePoolVnetSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderHTTPProxyConfig:
    r"""
    A http_proxy_config block as defined below.

    Attributes
    ----------
    httpProxy : str, default is Undefined, optional
        The proxy address to be used when communicating over HTTP.
    httpsProxy : str, default is Undefined, optional
        The proxy address to be used when communicating over HTTPS.
    noProxy : [str], default is Undefined, optional
        The list of domains that will not use the proxy for communication.
    trustedCaSecretRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderHTTPProxyConfigTrustedCaSecretRef, default is Undefined, optional
        trusted ca secret ref
    """


    httpProxy?: str

    httpsProxy?: str

    noProxy?: [str]

    trustedCaSecretRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderHTTPProxyConfigTrustedCaSecretRef


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderHTTPProxyConfigTrustedCaSecretRef:
    r"""
    The base64 encoded alternative CA certificate content in PEM format.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentity:
    r"""
    An identity block as defined below. One of either identity or service_principal must be specified.

    Attributes
    ----------
    identityIds : [str], default is Undefined, optional
        Specifies a list of User Assigned Managed Identity IDs to be assigned to this Kubernetes Cluster.
    identityIdsRefs : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentityIdentityIdsRefsItems0], default is Undefined, optional
        References to UserAssignedIdentity in managedidentity to populate identityIds.
    identityIdsSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentityIdentityIdsSelector, default is Undefined, optional
        identity ids selector
    $type : str, default is Undefined, optional
        Specifies the type of Managed Service Identity that should be configured on this Kubernetes Cluster. Possible values are SystemAssigned or UserAssigned.
    """


    identityIds?: [str]

    identityIdsRefs?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentityIdentityIdsRefsItems0]

    identityIdsSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentityIdentityIdsSelector

    $type?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentityIdentityIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentityIdentityIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentityIdentityIdsRefsItems0Policy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentityIdentityIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentityIdentityIdsSelector:
    r"""
    Selector for a list of UserAssignedIdentity in managedidentity to populate identityIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentityIdentityIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentityIdentityIdsSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIdentityIdentityIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGateway:
    r"""
    An ingress_application_gateway block as defined below.

    Attributes
    ----------
    gatewayId : str, default is Undefined, optional
        The ID of the Application Gateway to integrate with the ingress controller of this Kubernetes Cluster. See this page for further details.
    gatewayName : str, default is Undefined, optional
        The name of the Application Gateway to be used or created in the Nodepool Resource Group, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See this page for further details.
    subnetCidr : str, default is Undefined, optional
        The subnet CIDR to be used to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See this page for further details.
    subnetId : str, default is Undefined, optional
        The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See this page for further details.
    subnetIdRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGatewaySubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGatewaySubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    gatewayId?: str

    gatewayName?: str

    subnetCidr?: str

    subnetId?: str

    subnetIdRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGatewaySubnetIDRef

    subnetIdSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGatewaySubnetIDSelector


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGatewaySubnetIDRef:
    r"""
    Reference to a Subnet in network to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGatewaySubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGatewaySubnetIDRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGatewaySubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGatewaySubnetIDSelector:
    r"""
    Selector for a Subnet in network to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGatewaySubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGatewaySubnetIDSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderIngressApplicationGatewaySubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderKeyManagementService:
    r"""
    A key_management_service block as defined below. For more details, please visit Key Management Service (KMS) etcd encryption to an AKS cluster.

    Attributes
    ----------
    keyVaultKeyId : str, default is Undefined, optional
        Identifier of Azure Key Vault key. See key identifier format for more details.
    keyVaultNetworkAccess : str, default is Undefined, optional
        Network access of the key vault Network access of key vault. The possible values are Public and Private. Public means the key vault allows public access from all networks. Private means the key vault disables public access and enables private link. Defaults to Public.
    """


    keyVaultKeyId?: str

    keyVaultNetworkAccess?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderKeyVaultSecretsProvider:
    r"""
    A key_vault_secrets_provider block as defined below.

    Attributes
    ----------
    secretRotationEnabled : bool, default is Undefined, optional
        Should the secret store CSI driver on the AKS cluster be enabled?
    secretRotationInterval : str, default is Undefined, optional
        The interval to poll for secret rotation. This attribute is only set when secret_rotation is true. Defaults to 2m.
    """


    secretRotationEnabled?: bool

    secretRotationInterval?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderKubeletIdentity:
    r"""
    A kubelet_identity block as defined below.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
    objectId : str, default is Undefined, optional
        The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
    userAssignedIdentityId : str, default is Undefined, optional
        The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
    """


    clientId?: str

    objectId?: str

    userAssignedIdentityId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderLinuxProfile:
    r"""
    A linux_profile block as defined below.

    Attributes
    ----------
    adminUsername : str, default is Undefined, optional
        The Admin Username for the Cluster. Changing this forces a new resource to be created.
    sshKey : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderLinuxProfileSSHKey, default is Undefined, optional
        ssh key
    """


    adminUsername?: str

    sshKey?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderLinuxProfileSSHKey


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderLinuxProfileSSHKey:
    r"""
    An ssh_key block as defined below. Only one is currently allowed. Changing this will update the key on all node pools. More information can be found in the documentation.

    Attributes
    ----------
    keyData : str, default is Undefined, optional
        The Public SSH Key used to access the cluster.
    """


    keyData?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindow:
    r"""
    A maintenance_window block as defined below.

    Attributes
    ----------
    allowed : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowAllowedItems0], default is Undefined, optional
        One or more allowed blocks as defined below.
    notAllowed : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowNotAllowedItems0], default is Undefined, optional
        One or more not_allowed block as defined below.
    """


    allowed?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowAllowedItems0]

    notAllowed?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowNotAllowedItems0]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowAllowedItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster spec for provider maintenance window allowed items0

    Attributes
    ----------
    day : str, default is Undefined, optional
        A day in a week. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.
    hours : [float], default is Undefined, optional
        An array of hour slots in a day. For example, specifying 1 will allow maintenance from 1:00am to 2:00am. Specifying 1, 2 will allow maintenance from 1:00am to 3:00m. Possible values are between 0 and 23.
    """


    day?: str

    hours?: [float]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowAutoUpgrade:
    r"""
    A maintenance_window_auto_upgrade block as defined below.

    Attributes
    ----------
    dayOfMonth : float, default is Undefined, optional
        The day of the month for the maintenance run. Required in combination with AbsoluteMonthly frequency. Value between 0 and 31 (inclusive).
    dayOfWeek : str, default is Undefined, optional
        The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are Friday, Monday, Saturday, Sunday, Thursday, Tuesday and Wednesday.
    duration : float, default is Undefined, optional
        The duration of the window for maintenance to run in hours. Possible options are between 4 to 24.
    frequency : str, default is Undefined, optional
        Frequency of maintenance. Possible options are Weekly, AbsoluteMonthly and RelativeMonthly.
    interval : float, default is Undefined, optional
        The interval for maintenance runs. Depending on the frequency this interval is week or month based.
    notAllowed : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowAutoUpgradeNotAllowedItems0], default is Undefined, optional
        One or more not_allowed block as defined below.
    startDate : str, default is Undefined, optional
        The date on which the maintenance window begins to take effect.
    startTime : str, default is Undefined, optional
        The time for maintenance to begin, based on the timezone determined by utc_offset. Format is HH:mm.
    utcOffset : str, default is Undefined, optional
        Used to determine the timezone for cluster maintenance.
    weekIndex : str, default is Undefined, optional
        Specifies on which instance of the allowed days specified in day_of_week the maintenance occurs. Options are First, Second, Third, Fourth, and Last.
        Required in combination with relative monthly frequency.
    """


    dayOfMonth?: float

    dayOfWeek?: str

    duration?: float

    frequency?: str

    interval?: float

    notAllowed?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowAutoUpgradeNotAllowedItems0]

    startDate?: str

    startTime?: str

    utcOffset?: str

    weekIndex?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowAutoUpgradeNotAllowedItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster spec for provider maintenance window auto upgrade not allowed items0

    Attributes
    ----------
    end : str, default is Undefined, optional
        The end of a time span, formatted as an RFC3339 string.
    start : str, default is Undefined, optional
        The start of a time span, formatted as an RFC3339 string.
    """


    end?: str

    start?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowNodeOs:
    r"""
    A maintenance_window_node_os block as defined below.

    Attributes
    ----------
    dayOfMonth : float, default is Undefined, optional
        The day of the month for the maintenance run. Required in combination with AbsoluteMonthly frequency. Value between 0 and 31 (inclusive).
    dayOfWeek : str, default is Undefined, optional
        The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are Friday, Monday, Saturday, Sunday, Thursday, Tuesday and Wednesday.
    duration : float, default is Undefined, optional
        The duration of the window for maintenance to run in hours. Possible options are between 4 to 24.
    frequency : str, default is Undefined, optional
        Frequency of maintenance. Possible options are Daily, Weekly, AbsoluteMonthly and RelativeMonthly.
    interval : float, default is Undefined, optional
        The interval for maintenance runs. Depending on the frequency this interval is week or month based.
    notAllowed : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowNodeOsNotAllowedItems0], default is Undefined, optional
        One or more not_allowed block as defined below.
    startDate : str, default is Undefined, optional
        The date on which the maintenance window begins to take effect.
    startTime : str, default is Undefined, optional
        The time for maintenance to begin, based on the timezone determined by utc_offset. Format is HH:mm.
    utcOffset : str, default is Undefined, optional
        Used to determine the timezone for cluster maintenance.
    weekIndex : str, default is Undefined, optional
        The week in the month used for the maintenance run. Options are First, Second, Third, Fourth, and Last.
    """


    dayOfMonth?: float

    dayOfWeek?: str

    duration?: float

    frequency?: str

    interval?: float

    notAllowed?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowNodeOsNotAllowedItems0]

    startDate?: str

    startTime?: str

    utcOffset?: str

    weekIndex?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowNodeOsNotAllowedItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster spec for provider maintenance window node os not allowed items0

    Attributes
    ----------
    end : str, default is Undefined, optional
        The end of a time span, formatted as an RFC3339 string.
    start : str, default is Undefined, optional
        The start of a time span, formatted as an RFC3339 string.
    """


    end?: str

    start?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMaintenanceWindowNotAllowedItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster spec for provider maintenance window not allowed items0

    Attributes
    ----------
    end : str, default is Undefined, optional
        The end of a time span, formatted as an RFC3339 string.
    start : str, default is Undefined, optional
        The start of a time span, formatted as an RFC3339 string.
    """


    end?: str

    start?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMicrosoftDefender:
    r"""
    A microsoft_defender block as defined below.

    Attributes
    ----------
    logAnalyticsWorkspaceId : str, default is Undefined, optional
        Specifies the ID of the Log Analytics Workspace where the audit logs collected by Microsoft Defender should be sent to.
    """


    logAnalyticsWorkspaceId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderMonitorMetrics:
    r"""
    Specifies a Prometheus add-on profile for the Kubernetes Cluster. A monitor_metrics block as defined below.

    Attributes
    ----------
    annotationsAllowed : str, default is Undefined, optional
        Specifies a comma-separated list of Kubernetes annotation keys that will be used in the resource's labels metric.
    labelsAllowed : str, default is Undefined, optional
        Specifies a Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
    """


    annotationsAllowed?: str

    labelsAllowed?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderNetworkProfile:
    r"""
    A network_profile block as defined below.

    Attributes
    ----------
    dnsServiceIp : str, default is Undefined, optional
        IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
    dockerBridgeCidr : str, default is Undefined, optional
        IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
    ebpfDataPlane : str, default is Undefined, optional
        ebpf data plane
    ipVersions : [str], default is Undefined, optional
        Specifies a list of IP versions the Kubernetes Cluster will use to assign IP addresses to its nodes and pods. Possible values are IPv4 and/or IPv6. IPv4 must always be specified. Changing this forces a new resource to be created.
    loadBalancerProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderNetworkProfileLoadBalancerProfile, default is Undefined, optional
        load balancer profile
    loadBalancerSku : str, default is Undefined, optional
        Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are basic and standard. Defaults to standard. Changing this forces a new resource to be created.
    natGatewayProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderNetworkProfileNatGatewayProfile, default is Undefined, optional
        nat gateway profile
    networkDataPlane : str, default is Undefined, optional
        Specifies the data plane used for building the Kubernetes network. Possible values are azure and cilium. Defaults to azure. Disabling this forces a new resource to be created.
    networkMode : str, default is Undefined, optional
        Network mode to be used with Azure CNI. Possible values are bridge and transparent. Changing this forces a new resource to be created.
    networkPlugin : str, default is Undefined, optional
        Network plugin to use for networking. Currently supported values are azure, kubenet and none. Changing this forces a new resource to be created.
    networkPluginMode : str, default is Undefined, optional
        Specifies the network plugin mode used for building the Kubernetes network. Possible value is overlay.
    networkPolicy : str, default is Undefined, optional
        Sets up network policy to be used with Azure CNI. Network policy allows us to control the traffic flow between pods. Currently supported values are calico, azure and cilium.
    outboundIpAddressIds : [str], default is Undefined, optional
        The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
    outboundIpPrefixIds : [str], default is Undefined, optional
        The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
    outboundType : str, default is Undefined, optional
        The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are loadBalancer, userDefinedRouting, managedNATGateway and userAssignedNATGateway. Defaults to loadBalancer. More information on supported migration paths for outbound_type can be found in this documentation.
    podCidr : str, default is Undefined, optional
        The CIDR to use for pod IP addresses. This field can only be set when network_plugin is set to kubenet or network_plugin_mode is set to overlay. Changing this forces a new resource to be created.
    podCidrs : [str], default is Undefined, optional
        A list of CIDRs to use for pod IP addresses. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
    serviceCidr : str, default is Undefined, optional
        The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
    serviceCidrs : [str], default is Undefined, optional
        A list of CIDRs to use for Kubernetes services. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
    """


    dnsServiceIp?: str

    dockerBridgeCidr?: str

    ebpfDataPlane?: str

    ipVersions?: [str]

    loadBalancerProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderNetworkProfileLoadBalancerProfile

    loadBalancerSku?: str

    natGatewayProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderNetworkProfileNatGatewayProfile

    networkDataPlane?: str

    networkMode?: str

    networkPlugin?: str

    networkPluginMode?: str

    networkPolicy?: str

    outboundIpAddressIds?: [str]

    outboundIpPrefixIds?: [str]

    outboundType?: str

    podCidr?: str

    podCidrs?: [str]

    serviceCidr?: str

    serviceCidrs?: [str]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderNetworkProfileLoadBalancerProfile:
    r"""
    A load_balancer_profile block as defined below. This can only be specified when load_balancer_sku is set to standard. Changing this forces a new resource to be created.

    Attributes
    ----------
    idleTimeoutInMinutes : float, default is Undefined, optional
        Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between 4 and 120 inclusive. Defaults to 4.
    managedOutboundIpCount : float, default is Undefined, optional
        Count of desired managed outbound IPs for the cluster load balancer. Must be between 1 and 100 inclusive.
    managedOutboundIpv6Count : float, default is Undefined, optional
        The desired number of IPv6 outbound IPs created and managed by Azure for the cluster load balancer. Must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
    outboundIpAddressIds : [str], default is Undefined, optional
        The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
    outboundIpPrefixIds : [str], default is Undefined, optional
        The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
    outboundPortsAllocated : float, default is Undefined, optional
        Number of desired SNAT port for each VM in the clusters load balancer. Must be between 0 and 64000 inclusive. Defaults to 0.
    """


    idleTimeoutInMinutes?: float

    managedOutboundIpCount?: float

    managedOutboundIpv6Count?: float

    outboundIpAddressIds?: [str]

    outboundIpPrefixIds?: [str]

    outboundPortsAllocated?: float


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderNetworkProfileNatGatewayProfile:
    r"""
    A nat_gateway_profile block as defined below. This can only be specified when load_balancer_sku is set to standard and outbound_type is set to managedNATGateway or userAssignedNATGateway. Changing this forces a new resource to be created.

    Attributes
    ----------
    idleTimeoutInMinutes : float, default is Undefined, optional
        Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between 4 and 120 inclusive. Defaults to 4.
    managedOutboundIpCount : float, default is Undefined, optional
        Count of desired managed outbound IPs for the cluster load balancer. Must be between 1 and 100 inclusive.
    """


    idleTimeoutInMinutes?: float

    managedOutboundIpCount?: float


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderOmsAgent:
    r"""
    An oms_agent block as defined below.

    Attributes
    ----------
    logAnalyticsWorkspaceId : str, default is Undefined, optional
        The ID of the Log Analytics Workspace which the OMS Agent should send data to.
    msiAuthForMonitoringEnabled : bool, default is Undefined, optional
        Is managed identity authentication for monitoring enabled?
    """


    logAnalyticsWorkspaceId?: str

    msiAuthForMonitoringEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderPrivateDNSZoneIDRef:
    r"""
    Reference to a PrivateDNSZone in network to populate privateDnsZoneId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderPrivateDNSZoneIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderPrivateDNSZoneIDRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderPrivateDNSZoneIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderPrivateDNSZoneIDSelector:
    r"""
    Selector for a PrivateDNSZone in network to populate privateDnsZoneId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderPrivateDNSZoneIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderPrivateDNSZoneIDSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderPrivateDNSZoneIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderResourceGroupNameRef:
    r"""
    Reference to a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderResourceGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderResourceGroupNameRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderResourceGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderResourceGroupNameSelector:
    r"""
    Selector for a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderResourceGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderResourceGroupNameSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderResourceGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderServiceMeshProfile:
    r"""
    A service_mesh_profile block as defined below.

    Attributes
    ----------
    certificateAuthority : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderServiceMeshProfileCertificateAuthority, default is Undefined, optional
        certificate authority
    externalIngressGatewayEnabled : bool, default is Undefined, optional
        Is Istio External Ingress Gateway enabled?
    internalIngressGatewayEnabled : bool, default is Undefined, optional
        Is Istio Internal Ingress Gateway enabled?
    mode : str, default is Undefined, optional
        The mode of the service mesh. Possible value is Istio.
    """


    certificateAuthority?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderServiceMeshProfileCertificateAuthority

    externalIngressGatewayEnabled?: bool

    internalIngressGatewayEnabled?: bool

    mode?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderServiceMeshProfileCertificateAuthority:
    r"""
    A certificate_authority block as defined below. When this property is specified, key_vault_secrets_provider is also required to be set. This configuration allows you to bring your own root certificate and keys for Istio CA in the Istio-based service mesh add-on for Azure Kubernetes Service.

    Attributes
    ----------
    certChainObjectName : str, default is Undefined, optional
        The certificate chain object name in Azure Key Vault.
    certObjectName : str, default is Undefined, optional
        The intermediate certificate object name in Azure Key Vault.
    keyObjectName : str, default is Undefined, optional
        The intermediate certificate private key object name in Azure Key Vault.
    keyVaultId : str, default is Undefined, optional
        The resource ID of the Key Vault.
    rootCertObjectName : str, default is Undefined, optional
        The root certificate object name in Azure Key Vault.
    """


    certChainObjectName?: str

    certObjectName?: str

    keyObjectName?: str

    keyVaultId?: str

    rootCertObjectName?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderServicePrincipal:
    r"""
    A service_principal block as documented below. One of either identity or service_principal must be specified.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The Client ID for the Service Principal.
    clientSecretSecretRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderServicePrincipalClientSecretSecretRef, default is Undefined, optional
        client secret secret ref
    """


    clientId?: str

    clientSecretSecretRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderServicePrincipalClientSecretSecretRef


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderServicePrincipalClientSecretSecretRef:
    r"""
    The Client Secret for the Service Principal.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderStorageProfile:
    r"""
    A storage_profile block as defined below.

    Attributes
    ----------
    blobDriverEnabled : bool, default is Undefined, optional
        Is the Blob CSI driver enabled? Defaults to false.
    diskDriverEnabled : bool, default is Undefined, optional
        Is the Disk CSI driver enabled? Defaults to true.
    diskDriverVersion : str, default is Undefined, optional
        disk driver version
    fileDriverEnabled : bool, default is Undefined, optional
        Is the File CSI driver enabled? Defaults to true.
    snapshotControllerEnabled : bool, default is Undefined, optional
        Is the Snapshot Controller enabled? Defaults to true.
    """


    blobDriverEnabled?: bool

    diskDriverEnabled?: bool

    diskDriverVersion?: str

    fileDriverEnabled?: bool

    snapshotControllerEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWebAppRouting:
    r"""
    A web_app_routing block as defined below.

    Attributes
    ----------
    dnsZoneId : str, default is Undefined, optional
        The Kubernetes Managed Cluster ID.
    dnsZoneIds : [str], default is Undefined, optional
        Specifies the list of the DNS Zone IDs in which DNS entries are created for applications deployed to the cluster when Web App Routing is enabled. If not using Bring-Your-Own DNS zones this property should be set to an empty list.
    """


    dnsZoneId?: str

    dnsZoneIds?: [str]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWindowsProfile:
    r"""
    A windows_profile block as defined below.

    Attributes
    ----------
    adminPasswordSecretRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWindowsProfileAdminPasswordSecretRef, default is Undefined, optional
        admin password secret ref
    adminUsername : str, default is Undefined, optional
        The Admin Username for Windows VMs. Changing this forces a new resource to be created.
    gmsa : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWindowsProfileGmsa, default is Undefined, optional
        gmsa
    license : str, default is Undefined, optional
        Specifies the type of on-premise license which should be used for Node Pool Windows Virtual Machine. At this time the only possible value is Windows_Server.
    """


    adminPasswordSecretRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWindowsProfileAdminPasswordSecretRef

    adminUsername?: str

    gmsa?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWindowsProfileGmsa

    license?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWindowsProfileAdminPasswordSecretRef:
    r"""
    The Admin Password for Windows VMs. Length must be between 14 and 123 characters.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWindowsProfileGmsa:
    r"""
    A gmsa block as defined below.

    Attributes
    ----------
    dnsServer : str, default is Undefined, optional
        Specifies the DNS server for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
    rootDomain : str, default is Undefined, optional
        Specifies the root domain name for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
    """


    dnsServer?: str

    rootDomain?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecForProviderWorkloadAutoscalerProfile:
    r"""
    A workload_autoscaler_profile block defined below.

    Attributes
    ----------
    kedaEnabled : bool, default is Undefined, optional
        Specifies whether KEDA Autoscaler can be used for workloads.
    verticalPodAutoscalerEnabled : bool, default is Undefined, optional
        Specifies whether Vertical Pod Autoscaler should be enabled.
    """


    kedaEnabled?: bool

    verticalPodAutoscalerEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    aciConnectorLinux : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinux, default is Undefined, optional
        aci connector linux
    apiServerAccessProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfile, default is Undefined, optional
        api server access profile
    apiServerAuthorizedIpRanges : [str], default is Undefined, optional
        Deprecated in favor of `spec.forProvider.apiServerAccessProfile[0].authorizedIpRanges`
    autoScalerProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAutoScalerProfile, default is Undefined, optional
        auto scaler profile
    automaticChannelUpgrade : str, default is Undefined, optional
        The upgrade channel for this Kubernetes Cluster. Possible values are patch, rapid, node-image and stable. Omitting this field sets this value to none.
    azureActiveDirectoryRoleBasedAccessControl : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAzureActiveDirectoryRoleBasedAccessControl, default is Undefined, optional
        azure active directory role based access control
    azurePolicyEnabled : bool, default is Undefined, optional
        Should the Azure Policy Add-On be enabled? For more details please visit Understand Azure Policy for Azure Kubernetes Service
    confidentialComputing : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderConfidentialComputing, default is Undefined, optional
        confidential computing
    costAnalysisEnabled : bool, default is Undefined, optional
        Should cost analysis be enabled for this Kubernetes Cluster? Defaults to false. The sku_tier must be set to Standard or Premium to enable this feature. Enabling this will add Kubernetes Namespace and Deployment details to the Cost Analysis views in the Azure portal.
    customCaTrustCertificatesBase64 : [str], default is Undefined, optional
        custom ca trust certificates base64
    defaultNodePool : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePool, default is Undefined, optional
        default node pool
    diskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used for the Nodes and Volumes. More information can be found in the documentation. Changing this forces a new resource to be created.
    dnsPrefix : str, default is Undefined, optional
        DNS prefix specified when creating the managed cluster. Possible values must begin and end with a letter or number, contain only letters, numbers, and hyphens and be between 1 and 54 characters in length. Changing this forces a new resource to be created.
    dnsPrefixPrivateCluster : str, default is Undefined, optional
        Specifies the DNS prefix to use with private clusters. Changing this forces a new resource to be created.
    edgeZone : str, default is Undefined, optional
        Specifies the Edge Zone within the Azure Region where this Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
    enablePodSecurityPolicy : bool, default is Undefined, optional
        enable pod security policy
    httpApplicationRoutingEnabled : bool, default is Undefined, optional
        Should HTTP Application Routing be enabled?
    httpProxyConfig : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderHTTPProxyConfig, default is Undefined, optional
        http proxy config
    identity : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentity, default is Undefined, optional
        identity
    imageCleanerEnabled : bool, default is Undefined, optional
        Specifies whether Image Cleaner is enabled.
    imageCleanerIntervalHours : float, default is Undefined, optional
        Specifies the interval in hours when images should be cleaned up. Defaults to 48.
    ingressApplicationGateway : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGateway, default is Undefined, optional
        ingress application gateway
    keyManagementService : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderKeyManagementService, default is Undefined, optional
        key management service
    keyVaultSecretsProvider : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderKeyVaultSecretsProvider, default is Undefined, optional
        key vault secrets provider
    kubeletIdentity : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderKubeletIdentity, default is Undefined, optional
        kubelet identity
    kubernetesVersion : str, default is Undefined, optional
        Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as 1.22 are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in the documentation.
    linuxProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderLinuxProfile, default is Undefined, optional
        linux profile
    localAccountDisabled : bool, default is Undefined, optional
        If true local accounts will be disabled. See the documentation for more information.
    location : str, default is Undefined, optional
        The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
    maintenanceWindow : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindow, default is Undefined, optional
        maintenance window
    maintenanceWindowAutoUpgrade : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowAutoUpgrade, default is Undefined, optional
        maintenance window auto upgrade
    maintenanceWindowNodeOs : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowNodeOs, default is Undefined, optional
        maintenance window node os
    microsoftDefender : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMicrosoftDefender, default is Undefined, optional
        microsoft defender
    monitorMetrics : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMonitorMetrics, default is Undefined, optional
        monitor metrics
    networkProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderNetworkProfile, default is Undefined, optional
        network profile
    nodeOsChannelUpgrade : str, default is Undefined, optional
        The upgrade channel for this Kubernetes Cluster Nodes' OS Image. Possible values are Unmanaged, SecurityPatch, NodeImage and None.
    nodeResourceGroup : str, default is Undefined, optional
        The auto-generated Resource Group which contains the resources for this Managed Kubernetes Cluster.
    oidcIssuerEnabled : bool, default is Undefined, optional
        Enable or Disable the OIDC issuer URL
    omsAgent : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderOmsAgent, default is Undefined, optional
        oms agent
    openServiceMeshEnabled : bool, default is Undefined, optional
        Is Open Service Mesh enabled? For more details, please visit Open Service Mesh for AKS.
    privateClusterEnabled : bool, default is Undefined, optional
        Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to false. Changing this forces a new resource to be created.
    privateClusterPublicFqdnEnabled : bool, default is Undefined, optional
        Specifies whether a Public FQDN for this Private Cluster should be added. Defaults to false.
    privateDnsZoneId : str, default is Undefined, optional
        Either the ID of Private DNS Zone which should be delegated to this Cluster, System to have AKS manage this or None. In case of None you will need to bring your own DNS server and set up resolving, otherwise, the cluster will have issues after provisioning. Changing this forces a new resource to be created.
    privateDnsZoneIdRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderPrivateDNSZoneIDRef, default is Undefined, optional
        private Dns zone Id ref
    privateDnsZoneIdSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderPrivateDNSZoneIDSelector, default is Undefined, optional
        private Dns zone Id selector
    publicNetworkAccessEnabled : bool, default is Undefined, optional
        public network access enabled
    roleBasedAccessControlEnabled : bool, default is Undefined, optional
        Whether Role Based Access Control for the Kubernetes Cluster should be enabled. Defaults to true. Changing this forces a new resource to be created.
    runCommandEnabled : bool, default is Undefined, optional
        Whether to enable run command for the cluster or not. Defaults to true.
    serviceMeshProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderServiceMeshProfile, default is Undefined, optional
        service mesh profile
    servicePrincipal : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderServicePrincipal, default is Undefined, optional
        service principal
    skuTier : str, default is Undefined, optional
        The SKU Tier that should be used for this Kubernetes Cluster. Possible values are Free, Standard (which includes the Uptime SLA) and Premium. Defaults to Free.
    storageProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderStorageProfile, default is Undefined, optional
        storage profile
    supportPlan : str, default is Undefined, optional
        Specifies the support plan which should be used for this Kubernetes Cluster. Possible values are KubernetesOfficial and AKSLongTermSupport. Defaults to KubernetesOfficial.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    webAppRouting : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWebAppRouting, default is Undefined, optional
        web app routing
    windowsProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWindowsProfile, default is Undefined, optional
        windows profile
    workloadAutoscalerProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWorkloadAutoscalerProfile, default is Undefined, optional
        workload autoscaler profile
    workloadIdentityEnabled : bool, default is Undefined, optional
        Specifies whether Azure AD Workload Identity should be enabled for the Cluster. Defaults to false.
    """


    aciConnectorLinux?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinux

    apiServerAccessProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfile

    apiServerAuthorizedIpRanges?: [str]

    autoScalerProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAutoScalerProfile

    automaticChannelUpgrade?: str

    azureActiveDirectoryRoleBasedAccessControl?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAzureActiveDirectoryRoleBasedAccessControl

    azurePolicyEnabled?: bool

    confidentialComputing?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderConfidentialComputing

    costAnalysisEnabled?: bool

    customCaTrustCertificatesBase64?: [str]

    defaultNodePool?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePool

    diskEncryptionSetId?: str

    dnsPrefix?: str

    dnsPrefixPrivateCluster?: str

    edgeZone?: str

    enablePodSecurityPolicy?: bool

    httpApplicationRoutingEnabled?: bool

    httpProxyConfig?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderHTTPProxyConfig

    identity?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentity

    imageCleanerEnabled?: bool

    imageCleanerIntervalHours?: float

    ingressApplicationGateway?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGateway

    keyManagementService?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderKeyManagementService

    keyVaultSecretsProvider?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderKeyVaultSecretsProvider

    kubeletIdentity?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderKubeletIdentity

    kubernetesVersion?: str

    linuxProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderLinuxProfile

    localAccountDisabled?: bool

    location?: str

    maintenanceWindow?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindow

    maintenanceWindowAutoUpgrade?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowAutoUpgrade

    maintenanceWindowNodeOs?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowNodeOs

    microsoftDefender?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMicrosoftDefender

    monitorMetrics?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMonitorMetrics

    networkProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderNetworkProfile

    nodeOsChannelUpgrade?: str

    nodeResourceGroup?: str

    oidcIssuerEnabled?: bool

    omsAgent?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderOmsAgent

    openServiceMeshEnabled?: bool

    privateClusterEnabled?: bool

    privateClusterPublicFqdnEnabled?: bool

    privateDnsZoneId?: str

    privateDnsZoneIdRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderPrivateDNSZoneIDRef

    privateDnsZoneIdSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderPrivateDNSZoneIDSelector

    publicNetworkAccessEnabled?: bool

    roleBasedAccessControlEnabled?: bool

    runCommandEnabled?: bool

    serviceMeshProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderServiceMeshProfile

    servicePrincipal?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderServicePrincipal

    skuTier?: str

    storageProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderStorageProfile

    supportPlan?: str

    tags?: {str:str}

    webAppRouting?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWebAppRouting

    windowsProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWindowsProfile

    workloadAutoscalerProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWorkloadAutoscalerProfile

    workloadIdentityEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfile:
    r"""
    An api_server_access_profile block as defined below.

    Attributes
    ----------
    authorizedIpRanges : [str], default is Undefined, optional
        Set of authorized IP ranges to allow access to API server, e.g. ["198.51.100.0/24"].
    subnetId : str, default is Undefined, optional
        The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See this page for further details.
    subnetIdRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfileSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfileSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    vnetIntegrationEnabled : bool, default is Undefined, optional
        vnet integration enabled
    """


    authorizedIpRanges?: [str]

    subnetId?: str

    subnetIdRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfileSubnetIDRef

    subnetIdSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfileSubnetIDSelector

    vnetIntegrationEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfileSubnetIDRef:
    r"""
    Reference to a Subnet in network to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfileSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfileSubnetIDRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfileSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfileSubnetIDSelector:
    r"""
    Selector for a Subnet in network to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfileSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfileSubnetIDSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAPIServerAccessProfileSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinux:
    r"""
    A aci_connector_linux block as defined below. For more details, please visit Create and configure an AKS cluster to use virtual nodes.

    Attributes
    ----------
    subnetName : str, default is Undefined, optional
        The subnet name for the virtual nodes to run.
    subnetNameRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinuxSubnetNameRef, default is Undefined, optional
        subnet name ref
    subnetNameSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinuxSubnetNameSelector, default is Undefined, optional
        subnet name selector
    """


    subnetName?: str

    subnetNameRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinuxSubnetNameRef

    subnetNameSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinuxSubnetNameSelector


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinuxSubnetNameRef:
    r"""
    Reference to a Subnet in network to populate subnetName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinuxSubnetNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinuxSubnetNameRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinuxSubnetNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinuxSubnetNameSelector:
    r"""
    Selector for a Subnet in network to populate subnetName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinuxSubnetNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinuxSubnetNameSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAciConnectorLinuxSubnetNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAutoScalerProfile:
    r"""
    A auto_scaler_profile block as defined below.

    Attributes
    ----------
    balanceSimilarNodeGroups : bool, default is Undefined, optional
        Detect similar node groups and balance the number of nodes between them. Defaults to false.
    emptyBulkDeleteMax : str, default is Undefined, optional
        Maximum number of empty nodes that can be deleted at the same time. Defaults to 10.
    expander : str, default is Undefined, optional
        Expander to use. Possible values are least-waste, priority, most-pods and random. Defaults to random.
    maxGracefulTerminationSec : str, default is Undefined, optional
        Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node. Defaults to 600.
    maxNodeProvisioningTime : str, default is Undefined, optional
        Maximum time the autoscaler waits for a node to be provisioned. Defaults to 15m.
    maxUnreadyNodes : float, default is Undefined, optional
        Maximum Number of allowed unready nodes. Defaults to 3.
    maxUnreadyPercentage : float, default is Undefined, optional
        Maximum percentage of unready nodes the cluster autoscaler will stop if the percentage is exceeded. Defaults to 45.
    newPodScaleUpDelay : str, default is Undefined, optional
        For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. Defaults to 10s.
    scaleDownDelayAfterAdd : str, default is Undefined, optional
        How long after the scale up of AKS nodes the scale down evaluation resumes. Defaults to 10m.
    scaleDownDelayAfterDelete : str, default is Undefined, optional
        How long after node deletion that scale down evaluation resumes. Defaults to the value used for scan_interval.
    scaleDownDelayAfterFailure : str, default is Undefined, optional
        How long after scale down failure that scale down evaluation resumes. Defaults to 3m.
    scaleDownUnneeded : str, default is Undefined, optional
        How long a node should be unneeded before it is eligible for scale down. Defaults to 10m.
    scaleDownUnready : str, default is Undefined, optional
        How long an unready node should be unneeded before it is eligible for scale down. Defaults to 20m.
    scaleDownUtilizationThreshold : str, default is Undefined, optional
        Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down. Defaults to 0.5.
    scanInterval : str, default is Undefined, optional
        How often the AKS Cluster should be re-evaluated for scale up/down. Defaults to 10s.
    skipNodesWithLocalStorage : bool, default is Undefined, optional
        If true cluster autoscaler will never delete nodes with pods with local storage, for example, EmptyDir or HostPath. Defaults to true.
    skipNodesWithSystemPods : bool, default is Undefined, optional
        If true cluster autoscaler will never delete nodes with pods from kube-system (except for DaemonSet or mirror pods). Defaults to true.
    """


    balanceSimilarNodeGroups?: bool

    emptyBulkDeleteMax?: str

    expander?: str

    maxGracefulTerminationSec?: str

    maxNodeProvisioningTime?: str

    maxUnreadyNodes?: float

    maxUnreadyPercentage?: float

    newPodScaleUpDelay?: str

    scaleDownDelayAfterAdd?: str

    scaleDownDelayAfterDelete?: str

    scaleDownDelayAfterFailure?: str

    scaleDownUnneeded?: str

    scaleDownUnready?: str

    scaleDownUtilizationThreshold?: str

    scanInterval?: str

    skipNodesWithLocalStorage?: bool

    skipNodesWithSystemPods?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAzureActiveDirectoryRoleBasedAccessControl:
    r"""
    A azure_active_directory_role_based_access_control block as defined below.

    Attributes
    ----------
    adminGroupObjectIds : [str], default is Undefined, optional
        A list of Object IDs of Azure Active Directory Groups which should have Admin Role on the Cluster.
    azureRbacEnabled : bool, default is Undefined, optional
        Is Role Based Access Control based on Azure AD enabled?
    clientAppId : str, default is Undefined, optional
        The Kubernetes Managed Cluster ID.
    managed : bool, default is Undefined, optional
        Is the Azure Active Directory integration Managed, meaning that Azure will create/manage the Service Principal used for integration. Defaults to false.
    serverAppId : str, default is Undefined, optional
        The Kubernetes Managed Cluster ID.
    serverAppSecretSecretRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAzureActiveDirectoryRoleBasedAccessControlServerAppSecretSecretRef, default is Undefined, optional
        server app secret secret ref
    tenantId : str, default is Undefined, optional
        The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
    """


    adminGroupObjectIds?: [str]

    azureRbacEnabled?: bool

    clientAppId?: str

    managed?: bool

    serverAppId?: str

    serverAppSecretSecretRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAzureActiveDirectoryRoleBasedAccessControlServerAppSecretSecretRef

    tenantId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderAzureActiveDirectoryRoleBasedAccessControlServerAppSecretSecretRef:
    r"""
    A SecretKeySelector is a reference to a secret key in an arbitrary namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderConfidentialComputing:
    r"""
    A confidential_computing block as defined below. For more details please the documentation

    Attributes
    ----------
    sgxQuoteHelperEnabled : bool, default is Undefined, optional
        Should the SGX quote helper be enabled?
    """


    sgxQuoteHelperEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePool:
    r"""
    A default_node_pool block as defined below.

    Attributes
    ----------
    capacityReservationGroupId : str, default is Undefined, optional
        Specifies the ID of the Capacity Reservation Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
    customCaTrustEnabled : bool, default is Undefined, optional
        custom ca trust enabled
    enableAutoScaling : bool, default is Undefined, optional
        Should the Kubernetes Auto Scaler be enabled for this Node Pool?
    enableHostEncryption : bool, default is Undefined, optional
        Should the nodes in the Default Node Pool have host encryption enabled? temporary_name_for_rotation must be specified when changing this property.
    enableNodePublicIp : bool, default is Undefined, optional
        Should nodes in this Node Pool have a Public IP Address? temporary_name_for_rotation must be specified when changing this property.
    fipsEnabled : bool, default is Undefined, optional
        Should the nodes in this Node Pool have Federal Information Processing Standard enabled? temporary_name_for_rotation must be specified when changing this block. Changing this forces a new resource to be created.
    gpuInstance : str, default is Undefined, optional
        Specifies the GPU MIG instance profile for supported GPU VM SKU. The allowed values are MIG1g, MIG2g, MIG3g, MIG4g and MIG7g. Changing this forces a new resource to be created.
    hostGroupId : str, default is Undefined, optional
        Specifies the ID of the Host Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
    kubeletConfig : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolKubeletConfig, default is Undefined, optional
        kubelet config
    kubeletDiskType : str, default is Undefined, optional
        The type of disk used by kubelet. Possible values are OS and Temporary.
    linuxOsConfig : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolLinuxOsConfig, default is Undefined, optional
        linux os config
    maxCount : float, default is Undefined, optional
        The maximum number of nodes which should exist in this Node Pool. If specified this must be between 1 and 1000.
    maxPods : float, default is Undefined, optional
        The maximum number of pods that can run on each agent. temporary_name_for_rotation must be specified when changing this property.
    messageOfTheDay : str, default is Undefined, optional
        message of the day
    minCount : float, default is Undefined, optional
        The minimum number of nodes which should exist in this Node Pool. If specified this must be between 1 and 1000.
    name : str, default is Undefined, optional
        The name which should be used for the default Kubernetes Node Pool.
    nodeCount : float, default is Undefined, optional
        The initial number of nodes which should exist in this Node Pool. If specified this must be between 1 and 1000 and between min_count and max_count.
    nodeLabels : {str:str}, default is Undefined, optional
        A map of Kubernetes labels which should be applied to nodes in the Default Node Pool.
    nodeNetworkProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolNodeNetworkProfile, default is Undefined, optional
        node network profile
    nodePublicIpPrefixId : str, default is Undefined, optional
        Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. enable_node_public_ip should be true. Changing this forces a new resource to be created.
    nodeTaints : [str], default is Undefined, optional
        node taints
    onlyCriticalAddonsEnabled : bool, default is Undefined, optional
        Enabling this option will taint default node pool with CriticalAddonsOnly=true:NoSchedule taint. temporary_name_for_rotation must be specified when changing this property.
    orchestratorVersion : str, default is Undefined, optional
        Version of Kubernetes used for the Agents. If not specified, the default node pool will be created with the version specified by kubernetes_version. If both are unspecified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as 1.22 are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in the documentation.
    osDiskSizeGb : float, default is Undefined, optional
        The size of the OS Disk which should be used for each agent in the Node Pool. temporary_name_for_rotation must be specified when attempting a change.
    osDiskType : str, default is Undefined, optional
        The type of disk which should be used for the Operating System. Possible values are Ephemeral and Managed. Defaults to Managed. temporary_name_for_rotation must be specified when attempting a change.
    osSku : str, default is Undefined, optional
        Specifies the OS SKU used by the agent pool. Possible values are AzureLinux, Ubuntu, Windows2019 and Windows2022. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated. Changing this from AzureLinux or Ubuntu to AzureLinux or Ubuntu will not replace the resource, otherwise temporary_name_for_rotation must be specified when attempting a change.
    podSubnetId : str, default is Undefined, optional
        The ID of the Subnet where the pods in the default Node Pool should exist.
    podSubnetIdRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolPodSubnetIDRef, default is Undefined, optional
        pod subnet Id ref
    podSubnetIdSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolPodSubnetIDSelector, default is Undefined, optional
        pod subnet Id selector
    proximityPlacementGroupId : str, default is Undefined, optional
        The ID of the Proximity Placement Group. Changing this forces a new resource to be created.
    scaleDownMode : str, default is Undefined, optional
        Specifies the autoscaling behaviour of the Kubernetes Cluster. Allowed values are Delete and Deallocate. Defaults to Delete.
    snapshotId : str, default is Undefined, optional
        The ID of the Snapshot which should be used to create this default Node Pool. temporary_name_for_rotation must be specified when changing this property.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the Node Pool.
    temporaryNameForRotation : str, default is Undefined, optional
        Specifies the name of the temporary node pool used to cycle the default node pool for VM resizing.
    $type : str, default is Undefined, optional
        The type of Node Pool which should be created. Possible values are AvailabilitySet and VirtualMachineScaleSets. Defaults to VirtualMachineScaleSets. Changing this forces a new resource to be created.
    ultraSsdEnabled : bool, default is Undefined, optional
        Used to specify whether the UltraSSD is enabled in the Default Node Pool. Defaults to false. See the documentation for more information. temporary_name_for_rotation must be specified when attempting a change.
    upgradeSettings : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolUpgradeSettings, default is Undefined, optional
        upgrade settings
    vmSize : str, default is Undefined, optional
        The size of the Virtual Machine, such as Standard_DS2_v2. temporary_name_for_rotation must be specified when attempting a resize.
    vnetSubnetId : str, default is Undefined, optional
        The ID of a Subnet where the Kubernetes Node Pool should exist.
    vnetSubnetIdRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolVnetSubnetIDRef, default is Undefined, optional
        vnet subnet Id ref
    vnetSubnetIdSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolVnetSubnetIDSelector, default is Undefined, optional
        vnet subnet Id selector
    workloadRuntime : str, default is Undefined, optional
        Specifies the workload runtime used by the node pool. Possible value is OCIContainer.
    zones : [str], default is Undefined, optional
        Specifies a list of Availability Zones in which this Kubernetes Cluster should be located. temporary_name_for_rotation must be specified when changing this property.
    """


    capacityReservationGroupId?: str

    customCaTrustEnabled?: bool

    enableAutoScaling?: bool

    enableHostEncryption?: bool

    enableNodePublicIp?: bool

    fipsEnabled?: bool

    gpuInstance?: str

    hostGroupId?: str

    kubeletConfig?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolKubeletConfig

    kubeletDiskType?: str

    linuxOsConfig?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolLinuxOsConfig

    maxCount?: float

    maxPods?: float

    messageOfTheDay?: str

    minCount?: float

    name?: str

    nodeCount?: float

    nodeLabels?: {str:str}

    nodeNetworkProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolNodeNetworkProfile

    nodePublicIpPrefixId?: str

    nodeTaints?: [str]

    onlyCriticalAddonsEnabled?: bool

    orchestratorVersion?: str

    osDiskSizeGb?: float

    osDiskType?: str

    osSku?: str

    podSubnetId?: str

    podSubnetIdRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolPodSubnetIDRef

    podSubnetIdSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolPodSubnetIDSelector

    proximityPlacementGroupId?: str

    scaleDownMode?: str

    snapshotId?: str

    tags?: {str:str}

    temporaryNameForRotation?: str

    $type?: str

    ultraSsdEnabled?: bool

    upgradeSettings?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolUpgradeSettings

    vmSize?: str

    vnetSubnetId?: str

    vnetSubnetIdRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolVnetSubnetIDRef

    vnetSubnetIdSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolVnetSubnetIDSelector

    workloadRuntime?: str

    zones?: [str]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolKubeletConfig:
    r"""
    A kubelet_config block as defined below. temporary_name_for_rotation must be specified when changing this block.

    Attributes
    ----------
    allowedUnsafeSysctls : [str], default is Undefined, optional
        Specifies the allow list of unsafe sysctls command or patterns (ending in *).
    containerLogMaxLine : float, default is Undefined, optional
        Specifies the maximum number of container log files that can be present for a container. must be at least 2.
    containerLogMaxSizeMb : float, default is Undefined, optional
        Specifies the maximum size (e.g. 10MB) of container log file before it is rotated.
    cpuCfsQuotaEnabled : bool, default is Undefined, optional
        Is CPU CFS quota enforcement for containers enabled?
    cpuCfsQuotaPeriod : str, default is Undefined, optional
        Specifies the CPU CFS quota period value.
    cpuManagerPolicy : str, default is Undefined, optional
        Specifies the CPU Manager policy to use. Possible values are none and static,.
    imageGcHighThreshold : float, default is Undefined, optional
        Specifies the percent of disk usage above which image garbage collection is always run. Must be between 0 and 100.
    imageGcLowThreshold : float, default is Undefined, optional
        Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between 0 and 100.
    podMaxPid : float, default is Undefined, optional
        Specifies the maximum number of processes per pod.
    topologyManagerPolicy : str, default is Undefined, optional
        Specifies the Topology Manager policy to use. Possible values are none, best-effort, restricted or single-numa-node.
    """


    allowedUnsafeSysctls?: [str]

    containerLogMaxLine?: float

    containerLogMaxSizeMb?: float

    cpuCfsQuotaEnabled?: bool

    cpuCfsQuotaPeriod?: str

    cpuManagerPolicy?: str

    imageGcHighThreshold?: float

    imageGcLowThreshold?: float

    podMaxPid?: float

    topologyManagerPolicy?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolLinuxOsConfig:
    r"""
    A linux_os_config block as defined below. temporary_name_for_rotation must be specified when changing this block.

    Attributes
    ----------
    swapFileSizeMb : float, default is Undefined, optional
        Specifies the size of the swap file on each node in MB.
    sysctlConfig : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolLinuxOsConfigSysctlConfig, default is Undefined, optional
        sysctl config
    transparentHugePageDefrag : str, default is Undefined, optional
        specifies the defrag configuration for Transparent Huge Page. Possible values are always, defer, defer+madvise, madvise and never.
    transparentHugePageEnabled : str, default is Undefined, optional
        Specifies the Transparent Huge Page enabled configuration. Possible values are always, madvise and never.
    """


    swapFileSizeMb?: float

    sysctlConfig?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolLinuxOsConfigSysctlConfig

    transparentHugePageDefrag?: str

    transparentHugePageEnabled?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolLinuxOsConfigSysctlConfig:
    r"""
    A sysctl_config block as defined below.

    Attributes
    ----------
    fsAioMaxNr : float, default is Undefined, optional
        The sysctl setting fs.aio-max-nr. Must be between 65536 and 6553500.
    fsFileMax : float, default is Undefined, optional
        The sysctl setting fs.file-max. Must be between 8192 and 12000500.
    fsInotifyMaxUserWatches : float, default is Undefined, optional
        The sysctl setting fs.inotify.max_user_watches. Must be between 781250 and 2097152.
    fsNrOpen : float, default is Undefined, optional
        The sysctl setting fs.nr_open. Must be between 8192 and 20000500.
    kernelThreadsMax : float, default is Undefined, optional
        The sysctl setting kernel.threads-max. Must be between 20 and 513785.
    netCoreNetdevMaxBacklog : float, default is Undefined, optional
        The sysctl setting net.core.netdev_max_backlog. Must be between 1000 and 3240000.
    netCoreOptmemMax : float, default is Undefined, optional
        The sysctl setting net.core.optmem_max. Must be between 20480 and 4194304.
    netCoreRmemDefault : float, default is Undefined, optional
        The sysctl setting net.core.rmem_default. Must be between 212992 and 134217728.
    netCoreRmemMax : float, default is Undefined, optional
        The sysctl setting net.core.rmem_max. Must be between 212992 and 134217728.
    netCoreSomaxconn : float, default is Undefined, optional
        The sysctl setting net.core.somaxconn. Must be between 4096 and 3240000.
    netCoreWmemDefault : float, default is Undefined, optional
        The sysctl setting net.core.wmem_default. Must be between 212992 and 134217728.
    netCoreWmemMax : float, default is Undefined, optional
        The sysctl setting net.core.wmem_max. Must be between 212992 and 134217728.
    netIpv4IpLocalPortRangeMax : float, default is Undefined, optional
        The sysctl setting net.ipv4.ip_local_port_range max value. Must be between 32768 and 65535.
    netIpv4IpLocalPortRangeMin : float, default is Undefined, optional
        The sysctl setting net.ipv4.ip_local_port_range min value. Must be between 1024 and 60999.
    netIpv4NeighDefaultGcThresh1 : float, default is Undefined, optional
        The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between 128 and 80000.
    netIpv4NeighDefaultGcThresh2 : float, default is Undefined, optional
        The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between 512 and 90000.
    netIpv4NeighDefaultGcThresh3 : float, default is Undefined, optional
        The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between 1024 and 100000.
    netIpv4TcpFinTimeout : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_fin_timeout. Must be between 5 and 120.
    netIpv4TcpKeepaliveIntvl : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between 10 and 90.
    netIpv4TcpKeepaliveProbes : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between 1 and 15.
    netIpv4TcpKeepaliveTime : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_keepalive_time. Must be between 30 and 432000.
    netIpv4TcpMaxSynBacklog : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between 128 and 3240000.
    netIpv4TcpMaxTwBuckets : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between 8000 and 1440000.
    netIpv4TcpTwReuse : bool, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_tw_reuse.
    netNetfilterNfConntrackBuckets : float, default is Undefined, optional
        The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between 65536 and 524288.
    netNetfilterNfConntrackMax : float, default is Undefined, optional
        The sysctl setting net.netfilter.nf_conntrack_max. Must be between 131072 and 2097152.
    vmMaxMapCount : float, default is Undefined, optional
        The sysctl setting vm.max_map_count. Must be between 65530 and 262144.
    vmSwappiness : float, default is Undefined, optional
        The sysctl setting vm.swappiness. Must be between 0 and 100.
    vmVfsCachePressure : float, default is Undefined, optional
        The sysctl setting vm.vfs_cache_pressure. Must be between 0 and 100.
    """


    fsAioMaxNr?: float

    fsFileMax?: float

    fsInotifyMaxUserWatches?: float

    fsNrOpen?: float

    kernelThreadsMax?: float

    netCoreNetdevMaxBacklog?: float

    netCoreOptmemMax?: float

    netCoreRmemDefault?: float

    netCoreRmemMax?: float

    netCoreSomaxconn?: float

    netCoreWmemDefault?: float

    netCoreWmemMax?: float

    netIpv4IpLocalPortRangeMax?: float

    netIpv4IpLocalPortRangeMin?: float

    netIpv4NeighDefaultGcThresh1?: float

    netIpv4NeighDefaultGcThresh2?: float

    netIpv4NeighDefaultGcThresh3?: float

    netIpv4TcpFinTimeout?: float

    netIpv4TcpKeepaliveIntvl?: float

    netIpv4TcpKeepaliveProbes?: float

    netIpv4TcpKeepaliveTime?: float

    netIpv4TcpMaxSynBacklog?: float

    netIpv4TcpMaxTwBuckets?: float

    netIpv4TcpTwReuse?: bool

    netNetfilterNfConntrackBuckets?: float

    netNetfilterNfConntrackMax?: float

    vmMaxMapCount?: float

    vmSwappiness?: float

    vmVfsCachePressure?: float


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolNodeNetworkProfile:
    r"""
    A node_network_profile block as documented below.

    Attributes
    ----------
    allowedHostPorts : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolNodeNetworkProfileAllowedHostPortsItems0], default is Undefined, optional
        One or more allowed_host_ports blocks as defined below.
    applicationSecurityGroupIds : [str], default is Undefined, optional
        A list of Application Security Group IDs which should be associated with this Node Pool.
    nodePublicIpTags : {str:str}, default is Undefined, optional
        Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
    """


    allowedHostPorts?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolNodeNetworkProfileAllowedHostPortsItems0]

    applicationSecurityGroupIds?: [str]

    nodePublicIpTags?: {str:str}


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolNodeNetworkProfileAllowedHostPortsItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster spec init provider default node pool node network profile allowed host ports items0

    Attributes
    ----------
    portEnd : float, default is Undefined, optional
        Specifies the end of the port range.
    portStart : float, default is Undefined, optional
        Specifies the start of the port range.
    $protocol : str, default is Undefined, optional
        Specifies the protocol of the port range. Possible values are TCP and UDP.
    """


    portEnd?: float

    portStart?: float

    $protocol?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolPodSubnetIDRef:
    r"""
    Reference to a Subnet in network to populate podSubnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolPodSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolPodSubnetIDRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolPodSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolPodSubnetIDSelector:
    r"""
    Selector for a Subnet in network to populate podSubnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolPodSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolPodSubnetIDSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolPodSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolUpgradeSettings:
    r"""
    A upgrade_settings block as documented below.

    Attributes
    ----------
    drainTimeoutInMinutes : float, default is Undefined, optional
        The amount of time in minutes to wait on eviction of pods and graceful termination per node. This eviction wait time honors pod disruption budgets for upgrades. If this time is exceeded, the upgrade fails. Unsetting this after configuring it will force a new resource to be created.
    maxSurge : str, default is Undefined, optional
        The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
    nodeSoakDurationInMinutes : float, default is Undefined, optional
        The amount of time in minutes to wait after draining a node and before reimaging and moving on to next node. Defaults to 0.
    """


    drainTimeoutInMinutes?: float

    maxSurge?: str

    nodeSoakDurationInMinutes?: float


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolVnetSubnetIDRef:
    r"""
    Reference to a Subnet in network to populate vnetSubnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolVnetSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolVnetSubnetIDRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolVnetSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolVnetSubnetIDSelector:
    r"""
    Selector for a Subnet in network to populate vnetSubnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolVnetSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolVnetSubnetIDSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderDefaultNodePoolVnetSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderHTTPProxyConfig:
    r"""
    A http_proxy_config block as defined below.

    Attributes
    ----------
    httpProxy : str, default is Undefined, optional
        The proxy address to be used when communicating over HTTP.
    httpsProxy : str, default is Undefined, optional
        The proxy address to be used when communicating over HTTPS.
    noProxy : [str], default is Undefined, optional
        The list of domains that will not use the proxy for communication.
    trustedCaSecretRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderHTTPProxyConfigTrustedCaSecretRef, default is Undefined, optional
        trusted ca secret ref
    """


    httpProxy?: str

    httpsProxy?: str

    noProxy?: [str]

    trustedCaSecretRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderHTTPProxyConfigTrustedCaSecretRef


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderHTTPProxyConfigTrustedCaSecretRef:
    r"""
    The base64 encoded alternative CA certificate content in PEM format.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentity:
    r"""
    An identity block as defined below. One of either identity or service_principal must be specified.

    Attributes
    ----------
    identityIds : [str], default is Undefined, optional
        Specifies a list of User Assigned Managed Identity IDs to be assigned to this Kubernetes Cluster.
    identityIdsRefs : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentityIdentityIdsRefsItems0], default is Undefined, optional
        References to UserAssignedIdentity in managedidentity to populate identityIds.
    identityIdsSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentityIdentityIdsSelector, default is Undefined, optional
        identity ids selector
    $type : str, default is Undefined, optional
        Specifies the type of Managed Service Identity that should be configured on this Kubernetes Cluster. Possible values are SystemAssigned or UserAssigned.
    """


    identityIds?: [str]

    identityIdsRefs?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentityIdentityIdsRefsItems0]

    identityIdsSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentityIdentityIdsSelector

    $type?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentityIdentityIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentityIdentityIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentityIdentityIdsRefsItems0Policy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentityIdentityIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentityIdentityIdsSelector:
    r"""
    Selector for a list of UserAssignedIdentity in managedidentity to populate identityIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentityIdentityIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentityIdentityIdsSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIdentityIdentityIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGateway:
    r"""
    An ingress_application_gateway block as defined below.

    Attributes
    ----------
    gatewayId : str, default is Undefined, optional
        The ID of the Application Gateway to integrate with the ingress controller of this Kubernetes Cluster. See this page for further details.
    gatewayName : str, default is Undefined, optional
        The name of the Application Gateway to be used or created in the Nodepool Resource Group, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See this page for further details.
    subnetCidr : str, default is Undefined, optional
        The subnet CIDR to be used to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See this page for further details.
    subnetId : str, default is Undefined, optional
        The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See this page for further details.
    subnetIdRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGatewaySubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGatewaySubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    gatewayId?: str

    gatewayName?: str

    subnetCidr?: str

    subnetId?: str

    subnetIdRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGatewaySubnetIDRef

    subnetIdSelector?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGatewaySubnetIDSelector


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGatewaySubnetIDRef:
    r"""
    Reference to a Subnet in network to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGatewaySubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGatewaySubnetIDRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGatewaySubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGatewaySubnetIDSelector:
    r"""
    Selector for a Subnet in network to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGatewaySubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGatewaySubnetIDSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderIngressApplicationGatewaySubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderKeyManagementService:
    r"""
    A key_management_service block as defined below. For more details, please visit Key Management Service (KMS) etcd encryption to an AKS cluster.

    Attributes
    ----------
    keyVaultKeyId : str, default is Undefined, optional
        Identifier of Azure Key Vault key. See key identifier format for more details.
    keyVaultNetworkAccess : str, default is Undefined, optional
        Network access of the key vault Network access of key vault. The possible values are Public and Private. Public means the key vault allows public access from all networks. Private means the key vault disables public access and enables private link. Defaults to Public.
    """


    keyVaultKeyId?: str

    keyVaultNetworkAccess?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderKeyVaultSecretsProvider:
    r"""
    A key_vault_secrets_provider block as defined below.

    Attributes
    ----------
    secretRotationEnabled : bool, default is Undefined, optional
        Should the secret store CSI driver on the AKS cluster be enabled?
    secretRotationInterval : str, default is Undefined, optional
        The interval to poll for secret rotation. This attribute is only set when secret_rotation is true. Defaults to 2m.
    """


    secretRotationEnabled?: bool

    secretRotationInterval?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderKubeletIdentity:
    r"""
    A kubelet_identity block as defined below.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
    objectId : str, default is Undefined, optional
        The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
    userAssignedIdentityId : str, default is Undefined, optional
        The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
    """


    clientId?: str

    objectId?: str

    userAssignedIdentityId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderLinuxProfile:
    r"""
    A linux_profile block as defined below.

    Attributes
    ----------
    adminUsername : str, default is Undefined, optional
        The Admin Username for the Cluster. Changing this forces a new resource to be created.
    sshKey : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderLinuxProfileSSHKey, default is Undefined, optional
        ssh key
    """


    adminUsername?: str

    sshKey?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderLinuxProfileSSHKey


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderLinuxProfileSSHKey:
    r"""
    An ssh_key block as defined below. Only one is currently allowed. Changing this will update the key on all node pools. More information can be found in the documentation.

    Attributes
    ----------
    keyData : str, default is Undefined, optional
        The Public SSH Key used to access the cluster.
    """


    keyData?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindow:
    r"""
    A maintenance_window block as defined below.

    Attributes
    ----------
    allowed : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowAllowedItems0], default is Undefined, optional
        One or more allowed blocks as defined below.
    notAllowed : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowNotAllowedItems0], default is Undefined, optional
        One or more not_allowed block as defined below.
    """


    allowed?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowAllowedItems0]

    notAllowed?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowNotAllowedItems0]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowAllowedItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster spec init provider maintenance window allowed items0

    Attributes
    ----------
    day : str, default is Undefined, optional
        A day in a week. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.
    hours : [float], default is Undefined, optional
        An array of hour slots in a day. For example, specifying 1 will allow maintenance from 1:00am to 2:00am. Specifying 1, 2 will allow maintenance from 1:00am to 3:00m. Possible values are between 0 and 23.
    """


    day?: str

    hours?: [float]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowAutoUpgrade:
    r"""
    A maintenance_window_auto_upgrade block as defined below.

    Attributes
    ----------
    dayOfMonth : float, default is Undefined, optional
        The day of the month for the maintenance run. Required in combination with AbsoluteMonthly frequency. Value between 0 and 31 (inclusive).
    dayOfWeek : str, default is Undefined, optional
        The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are Friday, Monday, Saturday, Sunday, Thursday, Tuesday and Wednesday.
    duration : float, default is Undefined, optional
        The duration of the window for maintenance to run in hours. Possible options are between 4 to 24.
    frequency : str, default is Undefined, optional
        Frequency of maintenance. Possible options are Weekly, AbsoluteMonthly and RelativeMonthly.
    interval : float, default is Undefined, optional
        The interval for maintenance runs. Depending on the frequency this interval is week or month based.
    notAllowed : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowAutoUpgradeNotAllowedItems0], default is Undefined, optional
        One or more not_allowed block as defined below.
    startDate : str, default is Undefined, optional
        The date on which the maintenance window begins to take effect.
    startTime : str, default is Undefined, optional
        The time for maintenance to begin, based on the timezone determined by utc_offset. Format is HH:mm.
    utcOffset : str, default is Undefined, optional
        Used to determine the timezone for cluster maintenance.
    weekIndex : str, default is Undefined, optional
        Specifies on which instance of the allowed days specified in day_of_week the maintenance occurs. Options are First, Second, Third, Fourth, and Last.
        Required in combination with relative monthly frequency.
    """


    dayOfMonth?: float

    dayOfWeek?: str

    duration?: float

    frequency?: str

    interval?: float

    notAllowed?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowAutoUpgradeNotAllowedItems0]

    startDate?: str

    startTime?: str

    utcOffset?: str

    weekIndex?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowAutoUpgradeNotAllowedItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster spec init provider maintenance window auto upgrade not allowed items0

    Attributes
    ----------
    end : str, default is Undefined, optional
        The end of a time span, formatted as an RFC3339 string.
    start : str, default is Undefined, optional
        The start of a time span, formatted as an RFC3339 string.
    """


    end?: str

    start?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowNodeOs:
    r"""
    A maintenance_window_node_os block as defined below.

    Attributes
    ----------
    dayOfMonth : float, default is Undefined, optional
        The day of the month for the maintenance run. Required in combination with AbsoluteMonthly frequency. Value between 0 and 31 (inclusive).
    dayOfWeek : str, default is Undefined, optional
        The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are Friday, Monday, Saturday, Sunday, Thursday, Tuesday and Wednesday.
    duration : float, default is Undefined, optional
        The duration of the window for maintenance to run in hours. Possible options are between 4 to 24.
    frequency : str, default is Undefined, optional
        Frequency of maintenance. Possible options are Daily, Weekly, AbsoluteMonthly and RelativeMonthly.
    interval : float, default is Undefined, optional
        The interval for maintenance runs. Depending on the frequency this interval is week or month based.
    notAllowed : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowNodeOsNotAllowedItems0], default is Undefined, optional
        One or more not_allowed block as defined below.
    startDate : str, default is Undefined, optional
        The date on which the maintenance window begins to take effect.
    startTime : str, default is Undefined, optional
        The time for maintenance to begin, based on the timezone determined by utc_offset. Format is HH:mm.
    utcOffset : str, default is Undefined, optional
        Used to determine the timezone for cluster maintenance.
    weekIndex : str, default is Undefined, optional
        The week in the month used for the maintenance run. Options are First, Second, Third, Fourth, and Last.
    """


    dayOfMonth?: float

    dayOfWeek?: str

    duration?: float

    frequency?: str

    interval?: float

    notAllowed?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowNodeOsNotAllowedItems0]

    startDate?: str

    startTime?: str

    utcOffset?: str

    weekIndex?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowNodeOsNotAllowedItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster spec init provider maintenance window node os not allowed items0

    Attributes
    ----------
    end : str, default is Undefined, optional
        The end of a time span, formatted as an RFC3339 string.
    start : str, default is Undefined, optional
        The start of a time span, formatted as an RFC3339 string.
    """


    end?: str

    start?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMaintenanceWindowNotAllowedItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster spec init provider maintenance window not allowed items0

    Attributes
    ----------
    end : str, default is Undefined, optional
        The end of a time span, formatted as an RFC3339 string.
    start : str, default is Undefined, optional
        The start of a time span, formatted as an RFC3339 string.
    """


    end?: str

    start?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMicrosoftDefender:
    r"""
    A microsoft_defender block as defined below.

    Attributes
    ----------
    logAnalyticsWorkspaceId : str, default is Undefined, optional
        Specifies the ID of the Log Analytics Workspace where the audit logs collected by Microsoft Defender should be sent to.
    """


    logAnalyticsWorkspaceId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderMonitorMetrics:
    r"""
    Specifies a Prometheus add-on profile for the Kubernetes Cluster. A monitor_metrics block as defined below.

    Attributes
    ----------
    annotationsAllowed : str, default is Undefined, optional
        Specifies a comma-separated list of Kubernetes annotation keys that will be used in the resource's labels metric.
    labelsAllowed : str, default is Undefined, optional
        Specifies a Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
    """


    annotationsAllowed?: str

    labelsAllowed?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderNetworkProfile:
    r"""
    A network_profile block as defined below.

    Attributes
    ----------
    dnsServiceIp : str, default is Undefined, optional
        IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
    dockerBridgeCidr : str, default is Undefined, optional
        IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
    ebpfDataPlane : str, default is Undefined, optional
        ebpf data plane
    ipVersions : [str], default is Undefined, optional
        Specifies a list of IP versions the Kubernetes Cluster will use to assign IP addresses to its nodes and pods. Possible values are IPv4 and/or IPv6. IPv4 must always be specified. Changing this forces a new resource to be created.
    loadBalancerProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderNetworkProfileLoadBalancerProfile, default is Undefined, optional
        load balancer profile
    loadBalancerSku : str, default is Undefined, optional
        Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are basic and standard. Defaults to standard. Changing this forces a new resource to be created.
    natGatewayProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderNetworkProfileNatGatewayProfile, default is Undefined, optional
        nat gateway profile
    networkDataPlane : str, default is Undefined, optional
        Specifies the data plane used for building the Kubernetes network. Possible values are azure and cilium. Defaults to azure. Disabling this forces a new resource to be created.
    networkMode : str, default is Undefined, optional
        Network mode to be used with Azure CNI. Possible values are bridge and transparent. Changing this forces a new resource to be created.
    networkPlugin : str, default is Undefined, optional
        Network plugin to use for networking. Currently supported values are azure, kubenet and none. Changing this forces a new resource to be created.
    networkPluginMode : str, default is Undefined, optional
        Specifies the network plugin mode used for building the Kubernetes network. Possible value is overlay.
    networkPolicy : str, default is Undefined, optional
        Sets up network policy to be used with Azure CNI. Network policy allows us to control the traffic flow between pods. Currently supported values are calico, azure and cilium.
    outboundIpAddressIds : [str], default is Undefined, optional
        The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
    outboundIpPrefixIds : [str], default is Undefined, optional
        The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
    outboundType : str, default is Undefined, optional
        The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are loadBalancer, userDefinedRouting, managedNATGateway and userAssignedNATGateway. Defaults to loadBalancer. More information on supported migration paths for outbound_type can be found in this documentation.
    podCidr : str, default is Undefined, optional
        The CIDR to use for pod IP addresses. This field can only be set when network_plugin is set to kubenet or network_plugin_mode is set to overlay. Changing this forces a new resource to be created.
    podCidrs : [str], default is Undefined, optional
        A list of CIDRs to use for pod IP addresses. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
    serviceCidr : str, default is Undefined, optional
        The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
    serviceCidrs : [str], default is Undefined, optional
        A list of CIDRs to use for Kubernetes services. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
    """


    dnsServiceIp?: str

    dockerBridgeCidr?: str

    ebpfDataPlane?: str

    ipVersions?: [str]

    loadBalancerProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderNetworkProfileLoadBalancerProfile

    loadBalancerSku?: str

    natGatewayProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderNetworkProfileNatGatewayProfile

    networkDataPlane?: str

    networkMode?: str

    networkPlugin?: str

    networkPluginMode?: str

    networkPolicy?: str

    outboundIpAddressIds?: [str]

    outboundIpPrefixIds?: [str]

    outboundType?: str

    podCidr?: str

    podCidrs?: [str]

    serviceCidr?: str

    serviceCidrs?: [str]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderNetworkProfileLoadBalancerProfile:
    r"""
    A load_balancer_profile block as defined below. This can only be specified when load_balancer_sku is set to standard. Changing this forces a new resource to be created.

    Attributes
    ----------
    idleTimeoutInMinutes : float, default is Undefined, optional
        Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between 4 and 120 inclusive. Defaults to 4.
    managedOutboundIpCount : float, default is Undefined, optional
        Count of desired managed outbound IPs for the cluster load balancer. Must be between 1 and 100 inclusive.
    managedOutboundIpv6Count : float, default is Undefined, optional
        The desired number of IPv6 outbound IPs created and managed by Azure for the cluster load balancer. Must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
    outboundIpAddressIds : [str], default is Undefined, optional
        The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
    outboundIpPrefixIds : [str], default is Undefined, optional
        The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
    outboundPortsAllocated : float, default is Undefined, optional
        Number of desired SNAT port for each VM in the clusters load balancer. Must be between 0 and 64000 inclusive. Defaults to 0.
    """


    idleTimeoutInMinutes?: float

    managedOutboundIpCount?: float

    managedOutboundIpv6Count?: float

    outboundIpAddressIds?: [str]

    outboundIpPrefixIds?: [str]

    outboundPortsAllocated?: float


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderNetworkProfileNatGatewayProfile:
    r"""
    A nat_gateway_profile block as defined below. This can only be specified when load_balancer_sku is set to standard and outbound_type is set to managedNATGateway or userAssignedNATGateway. Changing this forces a new resource to be created.

    Attributes
    ----------
    idleTimeoutInMinutes : float, default is Undefined, optional
        Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between 4 and 120 inclusive. Defaults to 4.
    managedOutboundIpCount : float, default is Undefined, optional
        Count of desired managed outbound IPs for the cluster load balancer. Must be between 1 and 100 inclusive.
    """


    idleTimeoutInMinutes?: float

    managedOutboundIpCount?: float


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderOmsAgent:
    r"""
    An oms_agent block as defined below.

    Attributes
    ----------
    logAnalyticsWorkspaceId : str, default is Undefined, optional
        The ID of the Log Analytics Workspace which the OMS Agent should send data to.
    msiAuthForMonitoringEnabled : bool, default is Undefined, optional
        Is managed identity authentication for monitoring enabled?
    """


    logAnalyticsWorkspaceId?: str

    msiAuthForMonitoringEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderPrivateDNSZoneIDRef:
    r"""
    Reference to a PrivateDNSZone in network to populate privateDnsZoneId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderPrivateDNSZoneIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderPrivateDNSZoneIDRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderPrivateDNSZoneIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderPrivateDNSZoneIDSelector:
    r"""
    Selector for a PrivateDNSZone in network to populate privateDnsZoneId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderPrivateDNSZoneIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderPrivateDNSZoneIDSelectorPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderPrivateDNSZoneIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderServiceMeshProfile:
    r"""
    A service_mesh_profile block as defined below.

    Attributes
    ----------
    certificateAuthority : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderServiceMeshProfileCertificateAuthority, default is Undefined, optional
        certificate authority
    externalIngressGatewayEnabled : bool, default is Undefined, optional
        Is Istio External Ingress Gateway enabled?
    internalIngressGatewayEnabled : bool, default is Undefined, optional
        Is Istio Internal Ingress Gateway enabled?
    mode : str, default is Undefined, optional
        The mode of the service mesh. Possible value is Istio.
    """


    certificateAuthority?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderServiceMeshProfileCertificateAuthority

    externalIngressGatewayEnabled?: bool

    internalIngressGatewayEnabled?: bool

    mode?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderServiceMeshProfileCertificateAuthority:
    r"""
    A certificate_authority block as defined below. When this property is specified, key_vault_secrets_provider is also required to be set. This configuration allows you to bring your own root certificate and keys for Istio CA in the Istio-based service mesh add-on for Azure Kubernetes Service.

    Attributes
    ----------
    certChainObjectName : str, default is Undefined, optional
        The certificate chain object name in Azure Key Vault.
    certObjectName : str, default is Undefined, optional
        The intermediate certificate object name in Azure Key Vault.
    keyObjectName : str, default is Undefined, optional
        The intermediate certificate private key object name in Azure Key Vault.
    keyVaultId : str, default is Undefined, optional
        The resource ID of the Key Vault.
    rootCertObjectName : str, default is Undefined, optional
        The root certificate object name in Azure Key Vault.
    """


    certChainObjectName?: str

    certObjectName?: str

    keyObjectName?: str

    keyVaultId?: str

    rootCertObjectName?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderServicePrincipal:
    r"""
    A service_principal block as documented below. One of either identity or service_principal must be specified.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The Client ID for the Service Principal.
    clientSecretSecretRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderServicePrincipalClientSecretSecretRef, default is Undefined, required
        client secret secret ref
    """


    clientId?: str

    clientSecretSecretRef: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderServicePrincipalClientSecretSecretRef


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderServicePrincipalClientSecretSecretRef:
    r"""
    The Client Secret for the Service Principal.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderStorageProfile:
    r"""
    A storage_profile block as defined below.

    Attributes
    ----------
    blobDriverEnabled : bool, default is Undefined, optional
        Is the Blob CSI driver enabled? Defaults to false.
    diskDriverEnabled : bool, default is Undefined, optional
        Is the Disk CSI driver enabled? Defaults to true.
    diskDriverVersion : str, default is Undefined, optional
        disk driver version
    fileDriverEnabled : bool, default is Undefined, optional
        Is the File CSI driver enabled? Defaults to true.
    snapshotControllerEnabled : bool, default is Undefined, optional
        Is the Snapshot Controller enabled? Defaults to true.
    """


    blobDriverEnabled?: bool

    diskDriverEnabled?: bool

    diskDriverVersion?: str

    fileDriverEnabled?: bool

    snapshotControllerEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWebAppRouting:
    r"""
    A web_app_routing block as defined below.

    Attributes
    ----------
    dnsZoneId : str, default is Undefined, optional
        The Kubernetes Managed Cluster ID.
    dnsZoneIds : [str], default is Undefined, optional
        Specifies the list of the DNS Zone IDs in which DNS entries are created for applications deployed to the cluster when Web App Routing is enabled. If not using Bring-Your-Own DNS zones this property should be set to an empty list.
    """


    dnsZoneId?: str

    dnsZoneIds?: [str]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWindowsProfile:
    r"""
    A windows_profile block as defined below.

    Attributes
    ----------
    adminPasswordSecretRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWindowsProfileAdminPasswordSecretRef, default is Undefined, optional
        admin password secret ref
    adminUsername : str, default is Undefined, optional
        The Admin Username for Windows VMs. Changing this forces a new resource to be created.
    gmsa : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWindowsProfileGmsa, default is Undefined, optional
        gmsa
    license : str, default is Undefined, optional
        Specifies the type of on-premise license which should be used for Node Pool Windows Virtual Machine. At this time the only possible value is Windows_Server.
    """


    adminPasswordSecretRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWindowsProfileAdminPasswordSecretRef

    adminUsername?: str

    gmsa?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWindowsProfileGmsa

    license?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWindowsProfileAdminPasswordSecretRef:
    r"""
    The Admin Password for Windows VMs. Length must be between 14 and 123 characters.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWindowsProfileGmsa:
    r"""
    A gmsa block as defined below.

    Attributes
    ----------
    dnsServer : str, default is Undefined, optional
        Specifies the DNS server for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
    rootDomain : str, default is Undefined, optional
        Specifies the root domain name for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
    """


    dnsServer?: str

    rootDomain?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecInitProviderWorkloadAutoscalerProfile:
    r"""
    A workload_autoscaler_profile block defined below.

    Attributes
    ----------
    kedaEnabled : bool, default is Undefined, optional
        Specifies whether KEDA Autoscaler can be used for workloads.
    verticalPodAutoscalerEnabled : bool, default is Undefined, optional
        Specifies whether Vertical Pod Autoscaler should be enabled.
    """


    kedaEnabled?: bool

    verticalPodAutoscalerEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecProviderConfigRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatus:
    r"""
    KubernetesClusterStatus defines the observed state of KubernetesCluster.

    Attributes
    ----------
    atProvider : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProvider

    conditions?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusConditionsItems0]

    observedGeneration?: int


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProvider:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster status at provider

    Attributes
    ----------
    aciConnectorLinux : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAciConnectorLinux, default is Undefined, optional
        aci connector linux
    apiServerAccessProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAPIServerAccessProfile, default is Undefined, optional
        api server access profile
    apiServerAuthorizedIpRanges : [str], default is Undefined, optional
        Deprecated in favor of `spec.forProvider.apiServerAccessProfile[0].authorizedIpRanges`
    autoScalerProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAutoScalerProfile, default is Undefined, optional
        auto scaler profile
    automaticChannelUpgrade : str, default is Undefined, optional
        The upgrade channel for this Kubernetes Cluster. Possible values are patch, rapid, node-image and stable. Omitting this field sets this value to none.
    azureActiveDirectoryRoleBasedAccessControl : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAzureActiveDirectoryRoleBasedAccessControl, default is Undefined, optional
        azure active directory role based access control
    azurePolicyEnabled : bool, default is Undefined, optional
        Should the Azure Policy Add-On be enabled? For more details please visit Understand Azure Policy for Azure Kubernetes Service
    confidentialComputing : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderConfidentialComputing, default is Undefined, optional
        confidential computing
    costAnalysisEnabled : bool, default is Undefined, optional
        Should cost analysis be enabled for this Kubernetes Cluster? Defaults to false. The sku_tier must be set to Standard or Premium to enable this feature. Enabling this will add Kubernetes Namespace and Deployment details to the Cost Analysis views in the Azure portal.
    currentKubernetesVersion : str, default is Undefined, optional
        The current version running on the Azure Kubernetes Managed Cluster.
    customCaTrustCertificatesBase64 : [str], default is Undefined, optional
        custom ca trust certificates base64
    defaultNodePool : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePool, default is Undefined, optional
        default node pool
    diskEncryptionSetId : str, default is Undefined, optional
        The ID of the Disk Encryption Set which should be used for the Nodes and Volumes. More information can be found in the documentation. Changing this forces a new resource to be created.
    dnsPrefix : str, default is Undefined, optional
        DNS prefix specified when creating the managed cluster. Possible values must begin and end with a letter or number, contain only letters, numbers, and hyphens and be between 1 and 54 characters in length. Changing this forces a new resource to be created.
    dnsPrefixPrivateCluster : str, default is Undefined, optional
        Specifies the DNS prefix to use with private clusters. Changing this forces a new resource to be created.
    edgeZone : str, default is Undefined, optional
        Specifies the Edge Zone within the Azure Region where this Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
    enablePodSecurityPolicy : bool, default is Undefined, optional
        enable pod security policy
    fqdn : str, default is Undefined, optional
        The FQDN of the Azure Kubernetes Managed Cluster.
    httpApplicationRoutingEnabled : bool, default is Undefined, optional
        Should HTTP Application Routing be enabled?
    httpApplicationRoutingZoneName : str, default is Undefined, optional
        The Zone Name of the HTTP Application Routing.
    httpProxyConfig : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderHTTPProxyConfig, default is Undefined, optional
        http proxy config
    id : str, default is Undefined, optional
        The Kubernetes Managed Cluster ID.
    identity : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderIdentity, default is Undefined, optional
        identity
    imageCleanerEnabled : bool, default is Undefined, optional
        Specifies whether Image Cleaner is enabled.
    imageCleanerIntervalHours : float, default is Undefined, optional
        Specifies the interval in hours when images should be cleaned up. Defaults to 48.
    ingressApplicationGateway : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderIngressApplicationGateway, default is Undefined, optional
        ingress application gateway
    keyManagementService : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderKeyManagementService, default is Undefined, optional
        key management service
    keyVaultSecretsProvider : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderKeyVaultSecretsProvider, default is Undefined, optional
        key vault secrets provider
    kubeletIdentity : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderKubeletIdentity, default is Undefined, optional
        kubelet identity
    kubernetesVersion : str, default is Undefined, optional
        Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as 1.22 are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in the documentation.
    linuxProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderLinuxProfile, default is Undefined, optional
        linux profile
    localAccountDisabled : bool, default is Undefined, optional
        If true local accounts will be disabled. See the documentation for more information.
    location : str, default is Undefined, optional
        The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
    maintenanceWindow : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindow, default is Undefined, optional
        maintenance window
    maintenanceWindowAutoUpgrade : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowAutoUpgrade, default is Undefined, optional
        maintenance window auto upgrade
    maintenanceWindowNodeOs : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowNodeOs, default is Undefined, optional
        maintenance window node os
    microsoftDefender : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMicrosoftDefender, default is Undefined, optional
        microsoft defender
    monitorMetrics : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMonitorMetrics, default is Undefined, optional
        monitor metrics
    networkProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderNetworkProfile, default is Undefined, optional
        network profile
    nodeOsChannelUpgrade : str, default is Undefined, optional
        The upgrade channel for this Kubernetes Cluster Nodes' OS Image. Possible values are Unmanaged, SecurityPatch, NodeImage and None.
    nodeResourceGroup : str, default is Undefined, optional
        The auto-generated Resource Group which contains the resources for this Managed Kubernetes Cluster.
    nodeResourceGroupId : str, default is Undefined, optional
        The ID of the Resource Group containing the resources for this Managed Kubernetes Cluster.
    oidcIssuerEnabled : bool, default is Undefined, optional
        Enable or Disable the OIDC issuer URL
    oidcIssuerUrl : str, default is Undefined, optional
        The OIDC issuer URL that is associated with the cluster.
    omsAgent : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderOmsAgent, default is Undefined, optional
        oms agent
    openServiceMeshEnabled : bool, default is Undefined, optional
        Is Open Service Mesh enabled? For more details, please visit Open Service Mesh for AKS.
    portalFqdn : str, default is Undefined, optional
        The FQDN for the Azure Portal resources when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
    privateClusterEnabled : bool, default is Undefined, optional
        Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to false. Changing this forces a new resource to be created.
    privateClusterPublicFqdnEnabled : bool, default is Undefined, optional
        Specifies whether a Public FQDN for this Private Cluster should be added. Defaults to false.
    privateDnsZoneId : str, default is Undefined, optional
        Either the ID of Private DNS Zone which should be delegated to this Cluster, System to have AKS manage this or None. In case of None you will need to bring your own DNS server and set up resolving, otherwise, the cluster will have issues after provisioning. Changing this forces a new resource to be created.
    privateFqdn : str, default is Undefined, optional
        The FQDN for the Kubernetes Cluster when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
    publicNetworkAccessEnabled : bool, default is Undefined, optional
        public network access enabled
    resourceGroupName : str, default is Undefined, optional
        Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
    roleBasedAccessControlEnabled : bool, default is Undefined, optional
        Whether Role Based Access Control for the Kubernetes Cluster should be enabled. Defaults to true. Changing this forces a new resource to be created.
    runCommandEnabled : bool, default is Undefined, optional
        Whether to enable run command for the cluster or not. Defaults to true.
    serviceMeshProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderServiceMeshProfile, default is Undefined, optional
        service mesh profile
    servicePrincipal : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderServicePrincipal, default is Undefined, optional
        service principal
    skuTier : str, default is Undefined, optional
        The SKU Tier that should be used for this Kubernetes Cluster. Possible values are Free, Standard (which includes the Uptime SLA) and Premium. Defaults to Free.
    storageProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderStorageProfile, default is Undefined, optional
        storage profile
    supportPlan : str, default is Undefined, optional
        Specifies the support plan which should be used for this Kubernetes Cluster. Possible values are KubernetesOfficial and AKSLongTermSupport. Defaults to KubernetesOfficial.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    webAppRouting : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWebAppRouting, default is Undefined, optional
        web app routing
    windowsProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWindowsProfile, default is Undefined, optional
        windows profile
    workloadAutoscalerProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWorkloadAutoscalerProfile, default is Undefined, optional
        workload autoscaler profile
    workloadIdentityEnabled : bool, default is Undefined, optional
        Specifies whether Azure AD Workload Identity should be enabled for the Cluster. Defaults to false.
    """


    aciConnectorLinux?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAciConnectorLinux

    apiServerAccessProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAPIServerAccessProfile

    apiServerAuthorizedIpRanges?: [str]

    autoScalerProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAutoScalerProfile

    automaticChannelUpgrade?: str

    azureActiveDirectoryRoleBasedAccessControl?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAzureActiveDirectoryRoleBasedAccessControl

    azurePolicyEnabled?: bool

    confidentialComputing?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderConfidentialComputing

    costAnalysisEnabled?: bool

    currentKubernetesVersion?: str

    customCaTrustCertificatesBase64?: [str]

    defaultNodePool?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePool

    diskEncryptionSetId?: str

    dnsPrefix?: str

    dnsPrefixPrivateCluster?: str

    edgeZone?: str

    enablePodSecurityPolicy?: bool

    fqdn?: str

    httpApplicationRoutingEnabled?: bool

    httpApplicationRoutingZoneName?: str

    httpProxyConfig?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderHTTPProxyConfig

    id?: str

    identity?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderIdentity

    imageCleanerEnabled?: bool

    imageCleanerIntervalHours?: float

    ingressApplicationGateway?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderIngressApplicationGateway

    keyManagementService?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderKeyManagementService

    keyVaultSecretsProvider?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderKeyVaultSecretsProvider

    kubeletIdentity?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderKubeletIdentity

    kubernetesVersion?: str

    linuxProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderLinuxProfile

    localAccountDisabled?: bool

    location?: str

    maintenanceWindow?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindow

    maintenanceWindowAutoUpgrade?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowAutoUpgrade

    maintenanceWindowNodeOs?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowNodeOs

    microsoftDefender?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMicrosoftDefender

    monitorMetrics?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMonitorMetrics

    networkProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderNetworkProfile

    nodeOsChannelUpgrade?: str

    nodeResourceGroup?: str

    nodeResourceGroupId?: str

    oidcIssuerEnabled?: bool

    oidcIssuerUrl?: str

    omsAgent?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderOmsAgent

    openServiceMeshEnabled?: bool

    portalFqdn?: str

    privateClusterEnabled?: bool

    privateClusterPublicFqdnEnabled?: bool

    privateDnsZoneId?: str

    privateFqdn?: str

    publicNetworkAccessEnabled?: bool

    resourceGroupName?: str

    roleBasedAccessControlEnabled?: bool

    runCommandEnabled?: bool

    serviceMeshProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderServiceMeshProfile

    servicePrincipal?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderServicePrincipal

    skuTier?: str

    storageProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderStorageProfile

    supportPlan?: str

    tags?: {str:str}

    webAppRouting?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWebAppRouting

    windowsProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWindowsProfile

    workloadAutoscalerProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWorkloadAutoscalerProfile

    workloadIdentityEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAPIServerAccessProfile:
    r"""
    An api_server_access_profile block as defined below.

    Attributes
    ----------
    authorizedIpRanges : [str], default is Undefined, optional
        Set of authorized IP ranges to allow access to API server, e.g. ["198.51.100.0/24"].
    subnetId : str, default is Undefined, optional
        The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See this page for further details.
    vnetIntegrationEnabled : bool, default is Undefined, optional
        vnet integration enabled
    """


    authorizedIpRanges?: [str]

    subnetId?: str

    vnetIntegrationEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAciConnectorLinux:
    r"""
    A aci_connector_linux block as defined below. For more details, please visit Create and configure an AKS cluster to use virtual nodes.

    Attributes
    ----------
    connectorIdentity : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAciConnectorLinuxConnectorIdentityItems0], default is Undefined, optional
        A connector_identity block is exported. The exported attributes are defined below.
    subnetName : str, default is Undefined, optional
        The subnet name for the virtual nodes to run.
    """


    connectorIdentity?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAciConnectorLinuxConnectorIdentityItems0]

    subnetName?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAciConnectorLinuxConnectorIdentityItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster status at provider aci connector linux connector identity items0

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The Client ID of the user-defined Managed Identity used by the ACI Connector.
    objectId : str, default is Undefined, optional
        The Object ID of the user-defined Managed Identity used by the ACI Connector.
    userAssignedIdentityId : str, default is Undefined, optional
        The ID of the User Assigned Identity used by the ACI Connector.
    """


    clientId?: str

    objectId?: str

    userAssignedIdentityId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAutoScalerProfile:
    r"""
    A auto_scaler_profile block as defined below.

    Attributes
    ----------
    balanceSimilarNodeGroups : bool, default is Undefined, optional
        Detect similar node groups and balance the number of nodes between them. Defaults to false.
    emptyBulkDeleteMax : str, default is Undefined, optional
        Maximum number of empty nodes that can be deleted at the same time. Defaults to 10.
    expander : str, default is Undefined, optional
        Expander to use. Possible values are least-waste, priority, most-pods and random. Defaults to random.
    maxGracefulTerminationSec : str, default is Undefined, optional
        Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node. Defaults to 600.
    maxNodeProvisioningTime : str, default is Undefined, optional
        Maximum time the autoscaler waits for a node to be provisioned. Defaults to 15m.
    maxUnreadyNodes : float, default is Undefined, optional
        Maximum Number of allowed unready nodes. Defaults to 3.
    maxUnreadyPercentage : float, default is Undefined, optional
        Maximum percentage of unready nodes the cluster autoscaler will stop if the percentage is exceeded. Defaults to 45.
    newPodScaleUpDelay : str, default is Undefined, optional
        For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. Defaults to 10s.
    scaleDownDelayAfterAdd : str, default is Undefined, optional
        How long after the scale up of AKS nodes the scale down evaluation resumes. Defaults to 10m.
    scaleDownDelayAfterDelete : str, default is Undefined, optional
        How long after node deletion that scale down evaluation resumes. Defaults to the value used for scan_interval.
    scaleDownDelayAfterFailure : str, default is Undefined, optional
        How long after scale down failure that scale down evaluation resumes. Defaults to 3m.
    scaleDownUnneeded : str, default is Undefined, optional
        How long a node should be unneeded before it is eligible for scale down. Defaults to 10m.
    scaleDownUnready : str, default is Undefined, optional
        How long an unready node should be unneeded before it is eligible for scale down. Defaults to 20m.
    scaleDownUtilizationThreshold : str, default is Undefined, optional
        Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down. Defaults to 0.5.
    scanInterval : str, default is Undefined, optional
        How often the AKS Cluster should be re-evaluated for scale up/down. Defaults to 10s.
    skipNodesWithLocalStorage : bool, default is Undefined, optional
        If true cluster autoscaler will never delete nodes with pods with local storage, for example, EmptyDir or HostPath. Defaults to true.
    skipNodesWithSystemPods : bool, default is Undefined, optional
        If true cluster autoscaler will never delete nodes with pods from kube-system (except for DaemonSet or mirror pods). Defaults to true.
    """


    balanceSimilarNodeGroups?: bool

    emptyBulkDeleteMax?: str

    expander?: str

    maxGracefulTerminationSec?: str

    maxNodeProvisioningTime?: str

    maxUnreadyNodes?: float

    maxUnreadyPercentage?: float

    newPodScaleUpDelay?: str

    scaleDownDelayAfterAdd?: str

    scaleDownDelayAfterDelete?: str

    scaleDownDelayAfterFailure?: str

    scaleDownUnneeded?: str

    scaleDownUnready?: str

    scaleDownUtilizationThreshold?: str

    scanInterval?: str

    skipNodesWithLocalStorage?: bool

    skipNodesWithSystemPods?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderAzureActiveDirectoryRoleBasedAccessControl:
    r"""
    A azure_active_directory_role_based_access_control block as defined below.

    Attributes
    ----------
    adminGroupObjectIds : [str], default is Undefined, optional
        A list of Object IDs of Azure Active Directory Groups which should have Admin Role on the Cluster.
    azureRbacEnabled : bool, default is Undefined, optional
        Is Role Based Access Control based on Azure AD enabled?
    clientAppId : str, default is Undefined, optional
        The Kubernetes Managed Cluster ID.
    managed : bool, default is Undefined, optional
        Is the Azure Active Directory integration Managed, meaning that Azure will create/manage the Service Principal used for integration. Defaults to false.
    serverAppId : str, default is Undefined, optional
        The Kubernetes Managed Cluster ID.
    tenantId : str, default is Undefined, optional
        The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
    """


    adminGroupObjectIds?: [str]

    azureRbacEnabled?: bool

    clientAppId?: str

    managed?: bool

    serverAppId?: str

    tenantId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderConfidentialComputing:
    r"""
    A confidential_computing block as defined below. For more details please the documentation

    Attributes
    ----------
    sgxQuoteHelperEnabled : bool, default is Undefined, optional
        Should the SGX quote helper be enabled?
    """


    sgxQuoteHelperEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePool:
    r"""
    A default_node_pool block as defined below.

    Attributes
    ----------
    capacityReservationGroupId : str, default is Undefined, optional
        Specifies the ID of the Capacity Reservation Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
    customCaTrustEnabled : bool, default is Undefined, optional
        custom ca trust enabled
    enableAutoScaling : bool, default is Undefined, optional
        Should the Kubernetes Auto Scaler be enabled for this Node Pool?
    enableHostEncryption : bool, default is Undefined, optional
        Should the nodes in the Default Node Pool have host encryption enabled? temporary_name_for_rotation must be specified when changing this property.
    enableNodePublicIp : bool, default is Undefined, optional
        Should nodes in this Node Pool have a Public IP Address? temporary_name_for_rotation must be specified when changing this property.
    fipsEnabled : bool, default is Undefined, optional
        Should the nodes in this Node Pool have Federal Information Processing Standard enabled? temporary_name_for_rotation must be specified when changing this block. Changing this forces a new resource to be created.
    gpuInstance : str, default is Undefined, optional
        Specifies the GPU MIG instance profile for supported GPU VM SKU. The allowed values are MIG1g, MIG2g, MIG3g, MIG4g and MIG7g. Changing this forces a new resource to be created.
    hostGroupId : str, default is Undefined, optional
        Specifies the ID of the Host Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
    kubeletConfig : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolKubeletConfig, default is Undefined, optional
        kubelet config
    kubeletDiskType : str, default is Undefined, optional
        The type of disk used by kubelet. Possible values are OS and Temporary.
    linuxOsConfig : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolLinuxOsConfig, default is Undefined, optional
        linux os config
    maxCount : float, default is Undefined, optional
        The maximum number of nodes which should exist in this Node Pool. If specified this must be between 1 and 1000.
    maxPods : float, default is Undefined, optional
        The maximum number of pods that can run on each agent. temporary_name_for_rotation must be specified when changing this property.
    messageOfTheDay : str, default is Undefined, optional
        message of the day
    minCount : float, default is Undefined, optional
        The minimum number of nodes which should exist in this Node Pool. If specified this must be between 1 and 1000.
    name : str, default is Undefined, optional
        The name which should be used for the default Kubernetes Node Pool.
    nodeCount : float, default is Undefined, optional
        The initial number of nodes which should exist in this Node Pool. If specified this must be between 1 and 1000 and between min_count and max_count.
    nodeLabels : {str:str}, default is Undefined, optional
        A map of Kubernetes labels which should be applied to nodes in the Default Node Pool.
    nodeNetworkProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolNodeNetworkProfile, default is Undefined, optional
        node network profile
    nodePublicIpPrefixId : str, default is Undefined, optional
        Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. enable_node_public_ip should be true. Changing this forces a new resource to be created.
    nodeTaints : [str], default is Undefined, optional
        node taints
    onlyCriticalAddonsEnabled : bool, default is Undefined, optional
        Enabling this option will taint default node pool with CriticalAddonsOnly=true:NoSchedule taint. temporary_name_for_rotation must be specified when changing this property.
    orchestratorVersion : str, default is Undefined, optional
        Version of Kubernetes used for the Agents. If not specified, the default node pool will be created with the version specified by kubernetes_version. If both are unspecified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as 1.22 are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in the documentation.
    osDiskSizeGb : float, default is Undefined, optional
        The size of the OS Disk which should be used for each agent in the Node Pool. temporary_name_for_rotation must be specified when attempting a change.
    osDiskType : str, default is Undefined, optional
        The type of disk which should be used for the Operating System. Possible values are Ephemeral and Managed. Defaults to Managed. temporary_name_for_rotation must be specified when attempting a change.
    osSku : str, default is Undefined, optional
        Specifies the OS SKU used by the agent pool. Possible values are AzureLinux, Ubuntu, Windows2019 and Windows2022. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated. Changing this from AzureLinux or Ubuntu to AzureLinux or Ubuntu will not replace the resource, otherwise temporary_name_for_rotation must be specified when attempting a change.
    podSubnetId : str, default is Undefined, optional
        The ID of the Subnet where the pods in the default Node Pool should exist.
    proximityPlacementGroupId : str, default is Undefined, optional
        The ID of the Proximity Placement Group. Changing this forces a new resource to be created.
    scaleDownMode : str, default is Undefined, optional
        Specifies the autoscaling behaviour of the Kubernetes Cluster. Allowed values are Delete and Deallocate. Defaults to Delete.
    snapshotId : str, default is Undefined, optional
        The ID of the Snapshot which should be used to create this default Node Pool. temporary_name_for_rotation must be specified when changing this property.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the Node Pool.
    temporaryNameForRotation : str, default is Undefined, optional
        Specifies the name of the temporary node pool used to cycle the default node pool for VM resizing.
    $type : str, default is Undefined, optional
        The type of Node Pool which should be created. Possible values are AvailabilitySet and VirtualMachineScaleSets. Defaults to VirtualMachineScaleSets. Changing this forces a new resource to be created.
    ultraSsdEnabled : bool, default is Undefined, optional
        Used to specify whether the UltraSSD is enabled in the Default Node Pool. Defaults to false. See the documentation for more information. temporary_name_for_rotation must be specified when attempting a change.
    upgradeSettings : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolUpgradeSettings, default is Undefined, optional
        upgrade settings
    vmSize : str, default is Undefined, optional
        The size of the Virtual Machine, such as Standard_DS2_v2. temporary_name_for_rotation must be specified when attempting a resize.
    vnetSubnetId : str, default is Undefined, optional
        The ID of a Subnet where the Kubernetes Node Pool should exist.
    workloadRuntime : str, default is Undefined, optional
        Specifies the workload runtime used by the node pool. Possible value is OCIContainer.
    zones : [str], default is Undefined, optional
        Specifies a list of Availability Zones in which this Kubernetes Cluster should be located. temporary_name_for_rotation must be specified when changing this property.
    """


    capacityReservationGroupId?: str

    customCaTrustEnabled?: bool

    enableAutoScaling?: bool

    enableHostEncryption?: bool

    enableNodePublicIp?: bool

    fipsEnabled?: bool

    gpuInstance?: str

    hostGroupId?: str

    kubeletConfig?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolKubeletConfig

    kubeletDiskType?: str

    linuxOsConfig?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolLinuxOsConfig

    maxCount?: float

    maxPods?: float

    messageOfTheDay?: str

    minCount?: float

    name?: str

    nodeCount?: float

    nodeLabels?: {str:str}

    nodeNetworkProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolNodeNetworkProfile

    nodePublicIpPrefixId?: str

    nodeTaints?: [str]

    onlyCriticalAddonsEnabled?: bool

    orchestratorVersion?: str

    osDiskSizeGb?: float

    osDiskType?: str

    osSku?: str

    podSubnetId?: str

    proximityPlacementGroupId?: str

    scaleDownMode?: str

    snapshotId?: str

    tags?: {str:str}

    temporaryNameForRotation?: str

    $type?: str

    ultraSsdEnabled?: bool

    upgradeSettings?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolUpgradeSettings

    vmSize?: str

    vnetSubnetId?: str

    workloadRuntime?: str

    zones?: [str]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolKubeletConfig:
    r"""
    A kubelet_config block as defined below. temporary_name_for_rotation must be specified when changing this block.

    Attributes
    ----------
    allowedUnsafeSysctls : [str], default is Undefined, optional
        Specifies the allow list of unsafe sysctls command or patterns (ending in *).
    containerLogMaxLine : float, default is Undefined, optional
        Specifies the maximum number of container log files that can be present for a container. must be at least 2.
    containerLogMaxSizeMb : float, default is Undefined, optional
        Specifies the maximum size (e.g. 10MB) of container log file before it is rotated.
    cpuCfsQuotaEnabled : bool, default is Undefined, optional
        Is CPU CFS quota enforcement for containers enabled?
    cpuCfsQuotaPeriod : str, default is Undefined, optional
        Specifies the CPU CFS quota period value.
    cpuManagerPolicy : str, default is Undefined, optional
        Specifies the CPU Manager policy to use. Possible values are none and static,.
    imageGcHighThreshold : float, default is Undefined, optional
        Specifies the percent of disk usage above which image garbage collection is always run. Must be between 0 and 100.
    imageGcLowThreshold : float, default is Undefined, optional
        Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between 0 and 100.
    podMaxPid : float, default is Undefined, optional
        Specifies the maximum number of processes per pod.
    topologyManagerPolicy : str, default is Undefined, optional
        Specifies the Topology Manager policy to use. Possible values are none, best-effort, restricted or single-numa-node.
    """


    allowedUnsafeSysctls?: [str]

    containerLogMaxLine?: float

    containerLogMaxSizeMb?: float

    cpuCfsQuotaEnabled?: bool

    cpuCfsQuotaPeriod?: str

    cpuManagerPolicy?: str

    imageGcHighThreshold?: float

    imageGcLowThreshold?: float

    podMaxPid?: float

    topologyManagerPolicy?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolLinuxOsConfig:
    r"""
    A linux_os_config block as defined below. temporary_name_for_rotation must be specified when changing this block.

    Attributes
    ----------
    swapFileSizeMb : float, default is Undefined, optional
        Specifies the size of the swap file on each node in MB.
    sysctlConfig : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolLinuxOsConfigSysctlConfig, default is Undefined, optional
        sysctl config
    transparentHugePageDefrag : str, default is Undefined, optional
        specifies the defrag configuration for Transparent Huge Page. Possible values are always, defer, defer+madvise, madvise and never.
    transparentHugePageEnabled : str, default is Undefined, optional
        Specifies the Transparent Huge Page enabled configuration. Possible values are always, madvise and never.
    """


    swapFileSizeMb?: float

    sysctlConfig?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolLinuxOsConfigSysctlConfig

    transparentHugePageDefrag?: str

    transparentHugePageEnabled?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolLinuxOsConfigSysctlConfig:
    r"""
    A sysctl_config block as defined below.

    Attributes
    ----------
    fsAioMaxNr : float, default is Undefined, optional
        The sysctl setting fs.aio-max-nr. Must be between 65536 and 6553500.
    fsFileMax : float, default is Undefined, optional
        The sysctl setting fs.file-max. Must be between 8192 and 12000500.
    fsInotifyMaxUserWatches : float, default is Undefined, optional
        The sysctl setting fs.inotify.max_user_watches. Must be between 781250 and 2097152.
    fsNrOpen : float, default is Undefined, optional
        The sysctl setting fs.nr_open. Must be between 8192 and 20000500.
    kernelThreadsMax : float, default is Undefined, optional
        The sysctl setting kernel.threads-max. Must be between 20 and 513785.
    netCoreNetdevMaxBacklog : float, default is Undefined, optional
        The sysctl setting net.core.netdev_max_backlog. Must be between 1000 and 3240000.
    netCoreOptmemMax : float, default is Undefined, optional
        The sysctl setting net.core.optmem_max. Must be between 20480 and 4194304.
    netCoreRmemDefault : float, default is Undefined, optional
        The sysctl setting net.core.rmem_default. Must be between 212992 and 134217728.
    netCoreRmemMax : float, default is Undefined, optional
        The sysctl setting net.core.rmem_max. Must be between 212992 and 134217728.
    netCoreSomaxconn : float, default is Undefined, optional
        The sysctl setting net.core.somaxconn. Must be between 4096 and 3240000.
    netCoreWmemDefault : float, default is Undefined, optional
        The sysctl setting net.core.wmem_default. Must be between 212992 and 134217728.
    netCoreWmemMax : float, default is Undefined, optional
        The sysctl setting net.core.wmem_max. Must be between 212992 and 134217728.
    netIpv4IpLocalPortRangeMax : float, default is Undefined, optional
        The sysctl setting net.ipv4.ip_local_port_range max value. Must be between 32768 and 65535.
    netIpv4IpLocalPortRangeMin : float, default is Undefined, optional
        The sysctl setting net.ipv4.ip_local_port_range min value. Must be between 1024 and 60999.
    netIpv4NeighDefaultGcThresh1 : float, default is Undefined, optional
        The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between 128 and 80000.
    netIpv4NeighDefaultGcThresh2 : float, default is Undefined, optional
        The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between 512 and 90000.
    netIpv4NeighDefaultGcThresh3 : float, default is Undefined, optional
        The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between 1024 and 100000.
    netIpv4TcpFinTimeout : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_fin_timeout. Must be between 5 and 120.
    netIpv4TcpKeepaliveIntvl : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between 10 and 90.
    netIpv4TcpKeepaliveProbes : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between 1 and 15.
    netIpv4TcpKeepaliveTime : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_keepalive_time. Must be between 30 and 432000.
    netIpv4TcpMaxSynBacklog : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between 128 and 3240000.
    netIpv4TcpMaxTwBuckets : float, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between 8000 and 1440000.
    netIpv4TcpTwReuse : bool, default is Undefined, optional
        The sysctl setting net.ipv4.tcp_tw_reuse.
    netNetfilterNfConntrackBuckets : float, default is Undefined, optional
        The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between 65536 and 524288.
    netNetfilterNfConntrackMax : float, default is Undefined, optional
        The sysctl setting net.netfilter.nf_conntrack_max. Must be between 131072 and 2097152.
    vmMaxMapCount : float, default is Undefined, optional
        The sysctl setting vm.max_map_count. Must be between 65530 and 262144.
    vmSwappiness : float, default is Undefined, optional
        The sysctl setting vm.swappiness. Must be between 0 and 100.
    vmVfsCachePressure : float, default is Undefined, optional
        The sysctl setting vm.vfs_cache_pressure. Must be between 0 and 100.
    """


    fsAioMaxNr?: float

    fsFileMax?: float

    fsInotifyMaxUserWatches?: float

    fsNrOpen?: float

    kernelThreadsMax?: float

    netCoreNetdevMaxBacklog?: float

    netCoreOptmemMax?: float

    netCoreRmemDefault?: float

    netCoreRmemMax?: float

    netCoreSomaxconn?: float

    netCoreWmemDefault?: float

    netCoreWmemMax?: float

    netIpv4IpLocalPortRangeMax?: float

    netIpv4IpLocalPortRangeMin?: float

    netIpv4NeighDefaultGcThresh1?: float

    netIpv4NeighDefaultGcThresh2?: float

    netIpv4NeighDefaultGcThresh3?: float

    netIpv4TcpFinTimeout?: float

    netIpv4TcpKeepaliveIntvl?: float

    netIpv4TcpKeepaliveProbes?: float

    netIpv4TcpKeepaliveTime?: float

    netIpv4TcpMaxSynBacklog?: float

    netIpv4TcpMaxTwBuckets?: float

    netIpv4TcpTwReuse?: bool

    netNetfilterNfConntrackBuckets?: float

    netNetfilterNfConntrackMax?: float

    vmMaxMapCount?: float

    vmSwappiness?: float

    vmVfsCachePressure?: float


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolNodeNetworkProfile:
    r"""
    A node_network_profile block as documented below.

    Attributes
    ----------
    allowedHostPorts : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolNodeNetworkProfileAllowedHostPortsItems0], default is Undefined, optional
        One or more allowed_host_ports blocks as defined below.
    applicationSecurityGroupIds : [str], default is Undefined, optional
        A list of Application Security Group IDs which should be associated with this Node Pool.
    nodePublicIpTags : {str:str}, default is Undefined, optional
        Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
    """


    allowedHostPorts?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolNodeNetworkProfileAllowedHostPortsItems0]

    applicationSecurityGroupIds?: [str]

    nodePublicIpTags?: {str:str}


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolNodeNetworkProfileAllowedHostPortsItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster status at provider default node pool node network profile allowed host ports items0

    Attributes
    ----------
    portEnd : float, default is Undefined, optional
        Specifies the end of the port range.
    portStart : float, default is Undefined, optional
        Specifies the start of the port range.
    $protocol : str, default is Undefined, optional
        Specifies the protocol of the port range. Possible values are TCP and UDP.
    """


    portEnd?: float

    portStart?: float

    $protocol?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderDefaultNodePoolUpgradeSettings:
    r"""
    A upgrade_settings block as documented below.

    Attributes
    ----------
    drainTimeoutInMinutes : float, default is Undefined, optional
        The amount of time in minutes to wait on eviction of pods and graceful termination per node. This eviction wait time honors pod disruption budgets for upgrades. If this time is exceeded, the upgrade fails. Unsetting this after configuring it will force a new resource to be created.
    maxSurge : str, default is Undefined, optional
        The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
    nodeSoakDurationInMinutes : float, default is Undefined, optional
        The amount of time in minutes to wait after draining a node and before reimaging and moving on to next node. Defaults to 0.
    """


    drainTimeoutInMinutes?: float

    maxSurge?: str

    nodeSoakDurationInMinutes?: float


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderHTTPProxyConfig:
    r"""
    A http_proxy_config block as defined below.

    Attributes
    ----------
    httpProxy : str, default is Undefined, optional
        The proxy address to be used when communicating over HTTP.
    httpsProxy : str, default is Undefined, optional
        The proxy address to be used when communicating over HTTPS.
    noProxy : [str], default is Undefined, optional
        The list of domains that will not use the proxy for communication.
    """


    httpProxy?: str

    httpsProxy?: str

    noProxy?: [str]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderIdentity:
    r"""
    An identity block as defined below. One of either identity or service_principal must be specified.

    Attributes
    ----------
    identityIds : [str], default is Undefined, optional
        Specifies a list of User Assigned Managed Identity IDs to be assigned to this Kubernetes Cluster.
    principalId : str, default is Undefined, optional
        The Principal ID associated with this Managed Service Identity.
    tenantId : str, default is Undefined, optional
        The Tenant ID associated with this Managed Service Identity.
    $type : str, default is Undefined, optional
        Specifies the type of Managed Service Identity that should be configured on this Kubernetes Cluster. Possible values are SystemAssigned or UserAssigned.
    """


    identityIds?: [str]

    principalId?: str

    tenantId?: str

    $type?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderIngressApplicationGateway:
    r"""
    An ingress_application_gateway block as defined below.

    Attributes
    ----------
    effectiveGatewayId : str, default is Undefined, optional
        The ID of the Application Gateway associated with the ingress controller deployed to this Kubernetes Cluster.
    gatewayId : str, default is Undefined, optional
        The ID of the Application Gateway to integrate with the ingress controller of this Kubernetes Cluster. See this page for further details.
    gatewayName : str, default is Undefined, optional
        The name of the Application Gateway to be used or created in the Nodepool Resource Group, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See this page for further details.
    ingressApplicationGatewayIdentity : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderIngressApplicationGatewayIngressApplicationGatewayIdentityItems0], default is Undefined, optional
        An ingress_application_gateway_identity block is exported. The exported attributes are defined below.
    subnetCidr : str, default is Undefined, optional
        The subnet CIDR to be used to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See this page for further details.
    subnetId : str, default is Undefined, optional
        The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See this page for further details.
    """


    effectiveGatewayId?: str

    gatewayId?: str

    gatewayName?: str

    ingressApplicationGatewayIdentity?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderIngressApplicationGatewayIngressApplicationGatewayIdentityItems0]

    subnetCidr?: str

    subnetId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderIngressApplicationGatewayIngressApplicationGatewayIdentityItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster status at provider ingress application gateway ingress application gateway identity items0

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The Client ID of the user-defined Managed Identity used for Web App Routing.
    objectId : str, default is Undefined, optional
        The Object ID of the user-defined Managed Identity used for Web App Routing
    userAssignedIdentityId : str, default is Undefined, optional
        The ID of the User Assigned Identity used for Web App Routing.
    """


    clientId?: str

    objectId?: str

    userAssignedIdentityId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderKeyManagementService:
    r"""
    A key_management_service block as defined below. For more details, please visit Key Management Service (KMS) etcd encryption to an AKS cluster.

    Attributes
    ----------
    keyVaultKeyId : str, default is Undefined, optional
        Identifier of Azure Key Vault key. See key identifier format for more details.
    keyVaultNetworkAccess : str, default is Undefined, optional
        Network access of the key vault Network access of key vault. The possible values are Public and Private. Public means the key vault allows public access from all networks. Private means the key vault disables public access and enables private link. Defaults to Public.
    """


    keyVaultKeyId?: str

    keyVaultNetworkAccess?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderKeyVaultSecretsProvider:
    r"""
    A key_vault_secrets_provider block as defined below.

    Attributes
    ----------
    secretIdentity : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderKeyVaultSecretsProviderSecretIdentityItems0], default is Undefined, optional
        An secret_identity block is exported. The exported attributes are defined below.
    secretRotationEnabled : bool, default is Undefined, optional
        Should the secret store CSI driver on the AKS cluster be enabled?
    secretRotationInterval : str, default is Undefined, optional
        The interval to poll for secret rotation. This attribute is only set when secret_rotation is true. Defaults to 2m.
    """


    secretIdentity?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderKeyVaultSecretsProviderSecretIdentityItems0]

    secretRotationEnabled?: bool

    secretRotationInterval?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderKeyVaultSecretsProviderSecretIdentityItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster status at provider key vault secrets provider secret identity items0

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The Client ID of the user-defined Managed Identity used by the Secret Provider.
    objectId : str, default is Undefined, optional
        The Object ID of the user-defined Managed Identity used by the Secret Provider.
    userAssignedIdentityId : str, default is Undefined, optional
        The ID of the User Assigned Identity used by the Secret Provider.
    """


    clientId?: str

    objectId?: str

    userAssignedIdentityId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderKubeletIdentity:
    r"""
    A kubelet_identity block as defined below.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
    objectId : str, default is Undefined, optional
        The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
    userAssignedIdentityId : str, default is Undefined, optional
        The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
    """


    clientId?: str

    objectId?: str

    userAssignedIdentityId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderLinuxProfile:
    r"""
    A linux_profile block as defined below.

    Attributes
    ----------
    adminUsername : str, default is Undefined, optional
        The Admin Username for the Cluster. Changing this forces a new resource to be created.
    sshKey : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderLinuxProfileSSHKey, default is Undefined, optional
        ssh key
    """


    adminUsername?: str

    sshKey?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderLinuxProfileSSHKey


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderLinuxProfileSSHKey:
    r"""
    An ssh_key block as defined below. Only one is currently allowed. Changing this will update the key on all node pools. More information can be found in the documentation.

    Attributes
    ----------
    keyData : str, default is Undefined, optional
        The Public SSH Key used to access the cluster.
    """


    keyData?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindow:
    r"""
    A maintenance_window block as defined below.

    Attributes
    ----------
    allowed : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowAllowedItems0], default is Undefined, optional
        One or more allowed blocks as defined below.
    notAllowed : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowNotAllowedItems0], default is Undefined, optional
        One or more not_allowed block as defined below.
    """


    allowed?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowAllowedItems0]

    notAllowed?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowNotAllowedItems0]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowAllowedItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster status at provider maintenance window allowed items0

    Attributes
    ----------
    day : str, default is Undefined, optional
        A day in a week. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.
    hours : [float], default is Undefined, optional
        An array of hour slots in a day. For example, specifying 1 will allow maintenance from 1:00am to 2:00am. Specifying 1, 2 will allow maintenance from 1:00am to 3:00m. Possible values are between 0 and 23.
    """


    day?: str

    hours?: [float]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowAutoUpgrade:
    r"""
    A maintenance_window_auto_upgrade block as defined below.

    Attributes
    ----------
    dayOfMonth : float, default is Undefined, optional
        The day of the month for the maintenance run. Required in combination with AbsoluteMonthly frequency. Value between 0 and 31 (inclusive).
    dayOfWeek : str, default is Undefined, optional
        The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are Friday, Monday, Saturday, Sunday, Thursday, Tuesday and Wednesday.
    duration : float, default is Undefined, optional
        The duration of the window for maintenance to run in hours. Possible options are between 4 to 24.
    frequency : str, default is Undefined, optional
        Frequency of maintenance. Possible options are Weekly, AbsoluteMonthly and RelativeMonthly.
    interval : float, default is Undefined, optional
        The interval for maintenance runs. Depending on the frequency this interval is week or month based.
    notAllowed : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowAutoUpgradeNotAllowedItems0], default is Undefined, optional
        One or more not_allowed block as defined below.
    startDate : str, default is Undefined, optional
        The date on which the maintenance window begins to take effect.
    startTime : str, default is Undefined, optional
        The time for maintenance to begin, based on the timezone determined by utc_offset. Format is HH:mm.
    utcOffset : str, default is Undefined, optional
        Used to determine the timezone for cluster maintenance.
    weekIndex : str, default is Undefined, optional
        Specifies on which instance of the allowed days specified in day_of_week the maintenance occurs. Options are First, Second, Third, Fourth, and Last.
        Required in combination with relative monthly frequency.
    """


    dayOfMonth?: float

    dayOfWeek?: str

    duration?: float

    frequency?: str

    interval?: float

    notAllowed?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowAutoUpgradeNotAllowedItems0]

    startDate?: str

    startTime?: str

    utcOffset?: str

    weekIndex?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowAutoUpgradeNotAllowedItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster status at provider maintenance window auto upgrade not allowed items0

    Attributes
    ----------
    end : str, default is Undefined, optional
        The end of a time span, formatted as an RFC3339 string.
    start : str, default is Undefined, optional
        The start of a time span, formatted as an RFC3339 string.
    """


    end?: str

    start?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowNodeOs:
    r"""
    A maintenance_window_node_os block as defined below.

    Attributes
    ----------
    dayOfMonth : float, default is Undefined, optional
        The day of the month for the maintenance run. Required in combination with AbsoluteMonthly frequency. Value between 0 and 31 (inclusive).
    dayOfWeek : str, default is Undefined, optional
        The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are Friday, Monday, Saturday, Sunday, Thursday, Tuesday and Wednesday.
    duration : float, default is Undefined, optional
        The duration of the window for maintenance to run in hours. Possible options are between 4 to 24.
    frequency : str, default is Undefined, optional
        Frequency of maintenance. Possible options are Daily, Weekly, AbsoluteMonthly and RelativeMonthly.
    interval : float, default is Undefined, optional
        The interval for maintenance runs. Depending on the frequency this interval is week or month based.
    notAllowed : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowNodeOsNotAllowedItems0], default is Undefined, optional
        One or more not_allowed block as defined below.
    startDate : str, default is Undefined, optional
        The date on which the maintenance window begins to take effect.
    startTime : str, default is Undefined, optional
        The time for maintenance to begin, based on the timezone determined by utc_offset. Format is HH:mm.
    utcOffset : str, default is Undefined, optional
        Used to determine the timezone for cluster maintenance.
    weekIndex : str, default is Undefined, optional
        The week in the month used for the maintenance run. Options are First, Second, Third, Fourth, and Last.
    """


    dayOfMonth?: float

    dayOfWeek?: str

    duration?: float

    frequency?: str

    interval?: float

    notAllowed?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowNodeOsNotAllowedItems0]

    startDate?: str

    startTime?: str

    utcOffset?: str

    weekIndex?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowNodeOsNotAllowedItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster status at provider maintenance window node os not allowed items0

    Attributes
    ----------
    end : str, default is Undefined, optional
        The end of a time span, formatted as an RFC3339 string.
    start : str, default is Undefined, optional
        The start of a time span, formatted as an RFC3339 string.
    """


    end?: str

    start?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMaintenanceWindowNotAllowedItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster status at provider maintenance window not allowed items0

    Attributes
    ----------
    end : str, default is Undefined, optional
        The end of a time span, formatted as an RFC3339 string.
    start : str, default is Undefined, optional
        The start of a time span, formatted as an RFC3339 string.
    """


    end?: str

    start?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMicrosoftDefender:
    r"""
    A microsoft_defender block as defined below.

    Attributes
    ----------
    logAnalyticsWorkspaceId : str, default is Undefined, optional
        Specifies the ID of the Log Analytics Workspace where the audit logs collected by Microsoft Defender should be sent to.
    """


    logAnalyticsWorkspaceId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderMonitorMetrics:
    r"""
    Specifies a Prometheus add-on profile for the Kubernetes Cluster. A monitor_metrics block as defined below.

    Attributes
    ----------
    annotationsAllowed : str, default is Undefined, optional
        Specifies a comma-separated list of Kubernetes annotation keys that will be used in the resource's labels metric.
    labelsAllowed : str, default is Undefined, optional
        Specifies a Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
    """


    annotationsAllowed?: str

    labelsAllowed?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderNetworkProfile:
    r"""
    A network_profile block as defined below.

    Attributes
    ----------
    dnsServiceIp : str, default is Undefined, optional
        IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
    dockerBridgeCidr : str, default is Undefined, optional
        IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
    ebpfDataPlane : str, default is Undefined, optional
        ebpf data plane
    ipVersions : [str], default is Undefined, optional
        Specifies a list of IP versions the Kubernetes Cluster will use to assign IP addresses to its nodes and pods. Possible values are IPv4 and/or IPv6. IPv4 must always be specified. Changing this forces a new resource to be created.
    loadBalancerProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderNetworkProfileLoadBalancerProfile, default is Undefined, optional
        load balancer profile
    loadBalancerSku : str, default is Undefined, optional
        Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are basic and standard. Defaults to standard. Changing this forces a new resource to be created.
    natGatewayProfile : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderNetworkProfileNatGatewayProfile, default is Undefined, optional
        nat gateway profile
    networkDataPlane : str, default is Undefined, optional
        Specifies the data plane used for building the Kubernetes network. Possible values are azure and cilium. Defaults to azure. Disabling this forces a new resource to be created.
    networkMode : str, default is Undefined, optional
        Network mode to be used with Azure CNI. Possible values are bridge and transparent. Changing this forces a new resource to be created.
    networkPlugin : str, default is Undefined, optional
        Network plugin to use for networking. Currently supported values are azure, kubenet and none. Changing this forces a new resource to be created.
    networkPluginMode : str, default is Undefined, optional
        Specifies the network plugin mode used for building the Kubernetes network. Possible value is overlay.
    networkPolicy : str, default is Undefined, optional
        Sets up network policy to be used with Azure CNI. Network policy allows us to control the traffic flow between pods. Currently supported values are calico, azure and cilium.
    outboundIpAddressIds : [str], default is Undefined, optional
        The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
    outboundIpPrefixIds : [str], default is Undefined, optional
        The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
    outboundType : str, default is Undefined, optional
        The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are loadBalancer, userDefinedRouting, managedNATGateway and userAssignedNATGateway. Defaults to loadBalancer. More information on supported migration paths for outbound_type can be found in this documentation.
    podCidr : str, default is Undefined, optional
        The CIDR to use for pod IP addresses. This field can only be set when network_plugin is set to kubenet or network_plugin_mode is set to overlay. Changing this forces a new resource to be created.
    podCidrs : [str], default is Undefined, optional
        A list of CIDRs to use for pod IP addresses. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
    serviceCidr : str, default is Undefined, optional
        The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
    serviceCidrs : [str], default is Undefined, optional
        A list of CIDRs to use for Kubernetes services. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
    """


    dnsServiceIp?: str

    dockerBridgeCidr?: str

    ebpfDataPlane?: str

    ipVersions?: [str]

    loadBalancerProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderNetworkProfileLoadBalancerProfile

    loadBalancerSku?: str

    natGatewayProfile?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderNetworkProfileNatGatewayProfile

    networkDataPlane?: str

    networkMode?: str

    networkPlugin?: str

    networkPluginMode?: str

    networkPolicy?: str

    outboundIpAddressIds?: [str]

    outboundIpPrefixIds?: [str]

    outboundType?: str

    podCidr?: str

    podCidrs?: [str]

    serviceCidr?: str

    serviceCidrs?: [str]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderNetworkProfileLoadBalancerProfile:
    r"""
    A load_balancer_profile block as defined below. This can only be specified when load_balancer_sku is set to standard. Changing this forces a new resource to be created.

    Attributes
    ----------
    effectiveOutboundIps : [str], default is Undefined, optional
        The outcome (resource IDs) of the specified arguments.
    idleTimeoutInMinutes : float, default is Undefined, optional
        Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between 4 and 120 inclusive. Defaults to 4.
    managedOutboundIpCount : float, default is Undefined, optional
        Count of desired managed outbound IPs for the cluster load balancer. Must be between 1 and 100 inclusive.
    managedOutboundIpv6Count : float, default is Undefined, optional
        The desired number of IPv6 outbound IPs created and managed by Azure for the cluster load balancer. Must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
    outboundIpAddressIds : [str], default is Undefined, optional
        The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
    outboundIpPrefixIds : [str], default is Undefined, optional
        The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
    outboundPortsAllocated : float, default is Undefined, optional
        Number of desired SNAT port for each VM in the clusters load balancer. Must be between 0 and 64000 inclusive. Defaults to 0.
    """


    effectiveOutboundIps?: [str]

    idleTimeoutInMinutes?: float

    managedOutboundIpCount?: float

    managedOutboundIpv6Count?: float

    outboundIpAddressIds?: [str]

    outboundIpPrefixIds?: [str]

    outboundPortsAllocated?: float


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderNetworkProfileNatGatewayProfile:
    r"""
    A nat_gateway_profile block as defined below. This can only be specified when load_balancer_sku is set to standard and outbound_type is set to managedNATGateway or userAssignedNATGateway. Changing this forces a new resource to be created.

    Attributes
    ----------
    effectiveOutboundIps : [str], default is Undefined, optional
        The outcome (resource IDs) of the specified arguments.
    idleTimeoutInMinutes : float, default is Undefined, optional
        Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between 4 and 120 inclusive. Defaults to 4.
    managedOutboundIpCount : float, default is Undefined, optional
        Count of desired managed outbound IPs for the cluster load balancer. Must be between 1 and 100 inclusive.
    """


    effectiveOutboundIps?: [str]

    idleTimeoutInMinutes?: float

    managedOutboundIpCount?: float


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderOmsAgent:
    r"""
    An oms_agent block as defined below.

    Attributes
    ----------
    logAnalyticsWorkspaceId : str, default is Undefined, optional
        The ID of the Log Analytics Workspace which the OMS Agent should send data to.
    msiAuthForMonitoringEnabled : bool, default is Undefined, optional
        Is managed identity authentication for monitoring enabled?
    omsAgentIdentity : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderOmsAgentOmsAgentIdentityItems0], default is Undefined, optional
        An oms_agent_identity block is exported. The exported attributes are defined below.
    """


    logAnalyticsWorkspaceId?: str

    msiAuthForMonitoringEnabled?: bool

    omsAgentIdentity?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderOmsAgentOmsAgentIdentityItems0]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderOmsAgentOmsAgentIdentityItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster status at provider oms agent oms agent identity items0

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The Client ID of the user-defined Managed Identity used by the OMS Agents.
    objectId : str, default is Undefined, optional
        The Object ID of the user-defined Managed Identity used by the OMS Agents.
    userAssignedIdentityId : str, default is Undefined, optional
        The ID of the User Assigned Identity used by the OMS Agents.
    """


    clientId?: str

    objectId?: str

    userAssignedIdentityId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderServiceMeshProfile:
    r"""
    A service_mesh_profile block as defined below.

    Attributes
    ----------
    certificateAuthority : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderServiceMeshProfileCertificateAuthority, default is Undefined, optional
        certificate authority
    externalIngressGatewayEnabled : bool, default is Undefined, optional
        Is Istio External Ingress Gateway enabled?
    internalIngressGatewayEnabled : bool, default is Undefined, optional
        Is Istio Internal Ingress Gateway enabled?
    mode : str, default is Undefined, optional
        The mode of the service mesh. Possible value is Istio.
    """


    certificateAuthority?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderServiceMeshProfileCertificateAuthority

    externalIngressGatewayEnabled?: bool

    internalIngressGatewayEnabled?: bool

    mode?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderServiceMeshProfileCertificateAuthority:
    r"""
    A certificate_authority block as defined below. When this property is specified, key_vault_secrets_provider is also required to be set. This configuration allows you to bring your own root certificate and keys for Istio CA in the Istio-based service mesh add-on for Azure Kubernetes Service.

    Attributes
    ----------
    certChainObjectName : str, default is Undefined, optional
        The certificate chain object name in Azure Key Vault.
    certObjectName : str, default is Undefined, optional
        The intermediate certificate object name in Azure Key Vault.
    keyObjectName : str, default is Undefined, optional
        The intermediate certificate private key object name in Azure Key Vault.
    keyVaultId : str, default is Undefined, optional
        The resource ID of the Key Vault.
    rootCertObjectName : str, default is Undefined, optional
        The root certificate object name in Azure Key Vault.
    """


    certChainObjectName?: str

    certObjectName?: str

    keyObjectName?: str

    keyVaultId?: str

    rootCertObjectName?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderServicePrincipal:
    r"""
    A service_principal block as documented below. One of either identity or service_principal must be specified.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The Client ID for the Service Principal.
    """


    clientId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderStorageProfile:
    r"""
    A storage_profile block as defined below.

    Attributes
    ----------
    blobDriverEnabled : bool, default is Undefined, optional
        Is the Blob CSI driver enabled? Defaults to false.
    diskDriverEnabled : bool, default is Undefined, optional
        Is the Disk CSI driver enabled? Defaults to true.
    diskDriverVersion : str, default is Undefined, optional
        disk driver version
    fileDriverEnabled : bool, default is Undefined, optional
        Is the File CSI driver enabled? Defaults to true.
    snapshotControllerEnabled : bool, default is Undefined, optional
        Is the Snapshot Controller enabled? Defaults to true.
    """


    blobDriverEnabled?: bool

    diskDriverEnabled?: bool

    diskDriverVersion?: str

    fileDriverEnabled?: bool

    snapshotControllerEnabled?: bool


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWebAppRouting:
    r"""
    A web_app_routing block as defined below.

    Attributes
    ----------
    dnsZoneId : str, default is Undefined, optional
        The Kubernetes Managed Cluster ID.
    dnsZoneIds : [str], default is Undefined, optional
        Specifies the list of the DNS Zone IDs in which DNS entries are created for applications deployed to the cluster when Web App Routing is enabled. If not using Bring-Your-Own DNS zones this property should be set to an empty list.
    webAppRoutingIdentity : [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWebAppRoutingWebAppRoutingIdentityItems0], default is Undefined, optional
        A web_app_routing_identity block is exported. The exported attributes are defined below.
    """


    dnsZoneId?: str

    dnsZoneIds?: [str]

    webAppRoutingIdentity?: [ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWebAppRoutingWebAppRoutingIdentityItems0]


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWebAppRoutingWebAppRoutingIdentityItems0:
    r"""
    containerservice azure upbound io v1beta2 kubernetes cluster status at provider web app routing web app routing identity items0

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The Client ID of the user-defined Managed Identity used for Web App Routing.
    objectId : str, default is Undefined, optional
        The Object ID of the user-defined Managed Identity used for Web App Routing
    userAssignedIdentityId : str, default is Undefined, optional
        The ID of the User Assigned Identity used for Web App Routing.
    """


    clientId?: str

    objectId?: str

    userAssignedIdentityId?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWindowsProfile:
    r"""
    A windows_profile block as defined below.

    Attributes
    ----------
    adminUsername : str, default is Undefined, optional
        The Admin Username for Windows VMs. Changing this forces a new resource to be created.
    gmsa : ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWindowsProfileGmsa, default is Undefined, optional
        gmsa
    license : str, default is Undefined, optional
        Specifies the type of on-premise license which should be used for Node Pool Windows Virtual Machine. At this time the only possible value is Windows_Server.
    """


    adminUsername?: str

    gmsa?: ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWindowsProfileGmsa

    license?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWindowsProfileGmsa:
    r"""
    A gmsa block as defined below.

    Attributes
    ----------
    dnsServer : str, default is Undefined, optional
        Specifies the DNS server for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
    rootDomain : str, default is Undefined, optional
        Specifies the root domain name for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
    """


    dnsServer?: str

    rootDomain?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusAtProviderWorkloadAutoscalerProfile:
    r"""
    A workload_autoscaler_profile block defined below.

    Attributes
    ----------
    kedaEnabled : bool, default is Undefined, optional
        Specifies whether KEDA Autoscaler can be used for workloads.
    verticalPodAutoscalerControlledValues : str, default is Undefined, optional
        vertical pod autoscaler controlled values
    verticalPodAutoscalerEnabled : bool, default is Undefined, optional
        Specifies whether Vertical Pod Autoscaler should be enabled.
    verticalPodAutoscalerUpdateMode : str, default is Undefined, optional
        vertical pod autoscaler update mode
    """


    kedaEnabled?: bool

    verticalPodAutoscalerControlledValues?: str

    verticalPodAutoscalerEnabled?: bool

    verticalPodAutoscalerUpdateMode?: str


schema ContainerserviceAzureUpboundIoV1beta2KubernetesClusterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


